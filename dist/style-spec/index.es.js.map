{"version":3,"file":"index.es.js","sources":["../node_modules/json-stringify-pretty-compact/index.js","../format.js","../../../node_modules/url/node_modules/punycode/punycode.js","../../../node_modules/url/util.js","../../../node_modules/querystring/decode.js","../../../node_modules/querystring/encode.js","../../../node_modules/querystring/index.js","../../../node_modules/url/url.js","../visit.js","../migrate/v8.js","../util/extend.js","../expression/parsing_error.js","../expression/scope.js","../expression/types.js","../node_modules/csscolorparser/csscolorparser.js","../util/color.js","../expression/types/collator.js","../expression/types/formatted.js","../expression/types/resolved_image.js","../expression/values.js","../expression/definitions/literal.js","../expression/runtime_error.js","../expression/definitions/assertion.js","../expression/definitions/format.js","../expression/definitions/image.js","../expression/definitions/coercion.js","../expression/evaluation_context.js","../expression/compound_expression.js","../expression/definitions/collator.js","../expression/definitions/within.js","../expression/is_constant.js","../expression/definitions/var.js","../expression/parsing_context.js","../expression/stops.js","../expression/definitions/step.js","../node_modules/@mapbox/unitbezier/index.js","../util/interpolate.js","../util/color_spaces.js","../expression/definitions/interpolate.js","../expression/definitions/coalesce.js","../expression/definitions/let.js","../expression/definitions/at.js","../expression/definitions/in.js","../expression/definitions/index_of.js","../expression/definitions/match.js","../expression/definitions/case.js","../expression/definitions/slice.js","../expression/definitions/comparison.js","../expression/definitions/number_format.js","../expression/definitions/length.js","../expression/definitions/index.js","../util/result.js","../util/properties.js","../util/get_type.js","../function/index.js","../expression/index.js","../function/convert.js","../util/unbundle_jsonlint.js","../feature_filter/index.js","../feature_filter/convert.js","../migrate/expressions.js","../migrate.js","../composite.js","../util/ref_properties.js","../deref.js","../util/deep_equal.js","../diff.js","../error/validation_error.js","../error/parsing_error.js","../validate/validate_object.js","../validate/validate_array.js","../validate/validate_number.js","../validate/validate_function.js","../validate/validate_expression.js","../validate/validate_boolean.js","../validate/validate_color.js","../validate/validate_enum.js","../validate/validate_filter.js","../validate/validate_property.js","../validate/validate_paint_property.js","../validate/validate_layout_property.js","../validate/validate_layer.js","../validate/validate_string.js","../validate/validate_source.js","../validate/validate_light.js","../validate/validate_terrain.js","../validate/validate_fog.js","../validate/validate_formatted.js","../validate/validate_image.js","../validate/validate_projection.js","../validate/validate.js","../validate/validate_glyphs_url.js","../validate_style.min.js","../node_modules/@mapbox/jsonlint-lines-primitives/lib/jsonlint.js","../read_style.js","../validate_style.js","../validate_mapbox_api_supported.js","../style-spec.js"],"sourcesContent":["\"use strict\";\n\n// Note: This regex matches even invalid JSON strings, but since we’re\n// working on the output of `JSON.stringify` we know that only valid strings\n// are present (unless the user supplied a weird `options.indent` but in\n// that case we don’t care since the output would be invalid anyway).\nvar stringOrChar = /(\"(?:[^\\\\\"]|\\\\.)*\")|[:,]/g;\n\nmodule.exports = function stringify(passedObj, options) {\n  var indent, maxLength, replacer;\n\n  options = options || {};\n  indent = JSON.stringify(\n    [1],\n    undefined,\n    options.indent === undefined ? 2 : options.indent\n  ).slice(2, -3);\n  maxLength =\n    indent === \"\"\n      ? Infinity\n      : options.maxLength === undefined\n      ? 80\n      : options.maxLength;\n  replacer = options.replacer;\n\n  return (function _stringify(obj, currentIndent, reserved) {\n    // prettier-ignore\n    var end, index, items, key, keyPart, keys, length, nextIndent, prettified, start, string, value;\n\n    if (obj && typeof obj.toJSON === \"function\") {\n      obj = obj.toJSON();\n    }\n\n    string = JSON.stringify(obj, replacer);\n\n    if (string === undefined) {\n      return string;\n    }\n\n    length = maxLength - currentIndent.length - reserved;\n\n    if (string.length <= length) {\n      prettified = string.replace(stringOrChar, function(match, stringLiteral) {\n        return stringLiteral || match + \" \";\n      });\n      if (prettified.length <= length) {\n        return prettified;\n      }\n    }\n\n    if (replacer != null) {\n      obj = JSON.parse(string);\n      replacer = undefined;\n    }\n\n    if (typeof obj === \"object\" && obj !== null) {\n      nextIndent = currentIndent + indent;\n      items = [];\n      index = 0;\n\n      if (Array.isArray(obj)) {\n        start = \"[\";\n        end = \"]\";\n        length = obj.length;\n        for (; index < length; index++) {\n          items.push(\n            _stringify(obj[index], nextIndent, index === length - 1 ? 0 : 1) ||\n              \"null\"\n          );\n        }\n      } else {\n        start = \"{\";\n        end = \"}\";\n        keys = Object.keys(obj);\n        length = keys.length;\n        for (; index < length; index++) {\n          key = keys[index];\n          keyPart = JSON.stringify(key) + \": \";\n          value = _stringify(\n            obj[key],\n            nextIndent,\n            keyPart.length + (index === length - 1 ? 0 : 1)\n          );\n          if (value !== undefined) {\n            items.push(keyPart + value);\n          }\n        }\n      }\n\n      if (items.length > 0) {\n        return [start, indent + items.join(\",\\n\" + nextIndent), end].join(\n          \"\\n\" + currentIndent\n        );\n      }\n    }\n\n    return string;\n  })(passedObj, \"\", 0);\n};\n","\nimport reference from './reference/latest.js';\nimport stringifyPretty from 'json-stringify-pretty-compact';\n\nfunction sortKeysBy(obj, reference) {\n    const result = {};\n    for (const key in reference) {\n        if (obj[key] !== undefined) {\n            result[key] = obj[key];\n        }\n    }\n    for (const key in obj) {\n        if (result[key] === undefined) {\n            result[key] = obj[key];\n        }\n    }\n    return result;\n}\n\n/**\n * Format a Mapbox GL Style.  Returns a stringified style with its keys\n * sorted in the same order as the reference style.\n *\n * The optional `space` argument is passed to\n * [`JSON.stringify`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify)\n * to generate formatted output.\n *\n * If `space` is unspecified, a default of `2` spaces will be used.\n *\n * @private\n * @param {Object} style a Mapbox GL Style\n * @param {number} [space] space argument to pass to `JSON.stringify`\n * @returns {string} stringified formatted JSON\n * @example\n * var fs = require('fs');\n * var format = require('mapbox-gl-style-spec').format;\n * var style = fs.readFileSync('./source.json', 'utf8');\n * fs.writeFileSync('./dest.json', format(style));\n * fs.writeFileSync('./dest.min.json', format(style, 0));\n */\nfunction format(style, space = 2) {\n    style = sortKeysBy(style, reference.$root);\n\n    if (style.layers) {\n        style.layers = style.layers.map((layer) => sortKeysBy(layer, reference.layer));\n    }\n\n    return stringifyPretty(style, {indent: space});\n}\n\nexport default format;\n","/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","// @flow\n\nimport Reference from './reference/v8.json';\nimport type {StylePropertySpecification} from './style-spec.js';\nimport type {\n    StyleSpecification,\n    SourceSpecification,\n    LayerSpecification,\n    PropertyValueSpecification,\n    DataDrivenPropertyValueSpecification\n} from './types.js';\n\nfunction getPropertyReference(propertyName): StylePropertySpecification {\n    for (let i = 0; i < Reference.layout.length; i++) {\n        for (const key in Reference[Reference.layout[i]]) {\n            if (key === propertyName) return (Reference[Reference.layout[i]][key]: any);\n        }\n    }\n    for (let i = 0; i < Reference.paint.length; i++) {\n        for (const key in Reference[Reference.paint[i]]) {\n            if (key === propertyName) return (Reference[Reference.paint[i]][key]: any);\n        }\n    }\n\n    return (null: any);\n}\n\nexport function eachSource(style: StyleSpecification, callback: (_: SourceSpecification) => void) {\n    for (const k in style.sources) {\n        callback(style.sources[k]);\n    }\n}\n\nexport function eachLayer(style: StyleSpecification, callback: (_: LayerSpecification) => void) {\n    for (const layer of style.layers) {\n        callback(layer);\n    }\n}\n\ntype PropertyCallback = ({\n    path: [string, 'paint' | 'layout', string], // [layerid, paint/layout, property key]\n    key: string,\n    value: PropertyValueSpecification<mixed> | DataDrivenPropertyValueSpecification<mixed>,\n    reference: StylePropertySpecification,\n    set: (PropertyValueSpecification<mixed> | DataDrivenPropertyValueSpecification<mixed>) => void\n}) => void;\n\nexport function eachProperty(\n    style: StyleSpecification,\n    options: {paint?: boolean, layout?: boolean},\n    callback: PropertyCallback\n) {\n    function inner(layer, propertyType: 'paint' | 'layout') {\n        const properties = (layer[propertyType]: any);\n        if (!properties) return;\n        Object.keys(properties).forEach((key) => {\n            callback({\n                path: [layer.id, propertyType, key],\n                key,\n                value: properties[key],\n                reference: getPropertyReference(key),\n                set(x) {\n                    properties[key] = x;\n                }\n            });\n        });\n    }\n\n    eachLayer(style, (layer) => {\n        if (options.paint) {\n            inner(layer, 'paint');\n        }\n        if (options.layout) {\n            inner(layer, 'layout');\n        }\n    });\n}\n","\nimport URL from 'url';\nimport {eachSource, eachLayer, eachProperty} from '../visit.js';\n\nfunction eachLayout(layer, callback) {\n    for (const k in layer) {\n        if (k.indexOf('layout') === 0) {\n            callback(layer[k], k);\n        }\n    }\n}\n\nfunction eachPaint(layer, callback) {\n    for (const k in layer) {\n        if (k.indexOf('paint') === 0) {\n            callback(layer[k], k);\n        }\n    }\n}\n\nfunction resolveConstant(style, value) {\n    if (typeof value === 'string' && value[0] === '@') {\n        return resolveConstant(style, style.constants[value]);\n    } else {\n        return value;\n    }\n}\n\nfunction isFunction(value) {\n    return Array.isArray(value.stops);\n}\n\nfunction renameProperty(obj, from, to) {\n    obj[to] = obj[from]; delete obj[from];\n}\n\nexport default function(style) {\n    style.version = 8;\n\n    // Rename properties, reverse coordinates in source and layers\n    eachSource(style, (source) => {\n        if (source.type === 'video' && source.url !== undefined) {\n            renameProperty(source, 'url', 'urls');\n        }\n        if (source.type === 'video') {\n            source.coordinates.forEach((coord) => {\n                return coord.reverse();\n            });\n        }\n    });\n\n    eachLayer(style, (layer) => {\n        eachLayout(layer, (layout) => {\n            if (layout['symbol-min-distance'] !== undefined) {\n                renameProperty(layout, 'symbol-min-distance', 'symbol-spacing');\n            }\n        });\n\n        eachPaint(layer, (paint) => {\n            if (paint['background-image'] !== undefined) {\n                renameProperty(paint, 'background-image', 'background-pattern');\n            }\n            if (paint['line-image'] !== undefined) {\n                renameProperty(paint, 'line-image', 'line-pattern');\n            }\n            if (paint['fill-image'] !== undefined) {\n                renameProperty(paint, 'fill-image', 'fill-pattern');\n            }\n        });\n    });\n\n    // Inline Constants\n    eachProperty(style, {paint: true, layout: true}, (property) => {\n        const value = resolveConstant(style, property.value);\n\n        if (isFunction(value)) {\n            value.stops.forEach((stop) => {\n                stop[1] = resolveConstant(style, stop[1]);\n            });\n        }\n\n        property.set(value);\n    });\n    delete style.constants;\n\n    eachLayer(style, (layer) => {\n        // get rid of text-max-size, icon-max-size\n        // turn text-size, icon-size into layout properties\n        // https://github.com/mapbox/mapbox-gl-style-spec/issues/255\n\n        eachLayout(layer, (layout) => {\n            delete layout['text-max-size'];\n            delete layout['icon-max-size'];\n        });\n\n        eachPaint(layer, (paint) => {\n            if (paint['text-size']) {\n                if (!layer.layout) layer.layout = {};\n                layer.layout['text-size'] = paint['text-size'];\n                delete paint['text-size'];\n            }\n\n            if (paint['icon-size']) {\n                if (!layer.layout) layer.layout = {};\n                layer.layout['icon-size'] = paint['icon-size'];\n                delete paint['icon-size'];\n            }\n        });\n    });\n\n    function migrateFontstackURL(input) {\n        const inputParsed = URL.parse(input);\n        const inputPathnameParts = inputParsed.pathname.split('/');\n\n        if (inputParsed.protocol !== 'mapbox:') {\n            return input;\n\n        } else if (inputParsed.hostname === 'fontstack') {\n            assert(decodeURI(inputParsed.pathname) === '/{fontstack}/{range}.pbf');\n            return 'mapbox://fonts/mapbox/{fontstack}/{range}.pbf';\n\n        } else if (inputParsed.hostname === 'fonts') {\n            assert(inputPathnameParts[1] === 'v1');\n            assert(decodeURI(inputPathnameParts[3]) === '{fontstack}');\n            assert(decodeURI(inputPathnameParts[4]) === '{range}.pbf');\n            return `mapbox://fonts/${inputPathnameParts[2]}/{fontstack}/{range}.pbf`;\n\n        } else {\n            assert(false);\n        }\n\n        function assert(predicate) {\n            if (!predicate) {\n                throw new Error(`Invalid font url: \"${input}\"`);\n            }\n        }\n    }\n\n    if (style.glyphs) {\n        style.glyphs = migrateFontstackURL(style.glyphs);\n    }\n\n    function migrateFontStack(font) {\n        function splitAndTrim(string) {\n            return string.split(',').map((s) => {\n                return s.trim();\n            });\n        }\n\n        if (Array.isArray(font)) {\n            // Assume it's a previously migrated font-array.\n            return font;\n\n        } else if (typeof font === 'string') {\n            return splitAndTrim(font);\n\n        } else if (typeof font === 'object') {\n            font.stops.forEach((stop) => {\n                stop[1] = splitAndTrim(stop[1]);\n            });\n            return font;\n\n        } else {\n            throw new Error(\"unexpected font value\");\n        }\n    }\n\n    eachLayer(style, (layer) => {\n        eachLayout(layer, (layout) => {\n            if (layout['text-font']) {\n                layout['text-font'] = migrateFontStack(layout['text-font']);\n            }\n        });\n    });\n\n    // Reverse order of symbol layers. This is an imperfect migration.\n    //\n    // The order of a symbol layer in the layers list affects two things:\n    // - how it is drawn relative to other layers (like oneway arrows below bridges)\n    // - the placement priority compared to other layers\n    //\n    // It's impossible to reverse the placement priority without breaking the draw order\n    // in some cases. This migration only reverses the order of symbol layers that\n    // are above all other types of layers.\n    //\n    // Symbol layers that are at the top of the map preserve their priority.\n    // Symbol layers that are below another type (line, fill) of layer preserve their draw order.\n\n    let firstSymbolLayer = 0;\n    for (let i = style.layers.length - 1; i >= 0; i--) {\n        const layer = style.layers[i];\n        if (layer.type !== 'symbol') {\n            firstSymbolLayer = i + 1;\n            break;\n        }\n    }\n\n    const symbolLayers = style.layers.splice(firstSymbolLayer);\n    symbolLayers.reverse();\n    style.layers = style.layers.concat(symbolLayers);\n\n    return style;\n}\n","// @flow\n\nexport default function (output: any, ...inputs: Array<any>): any {\n    for (const input of inputs) {\n        for (const k in input) {\n            output[k] = input[k];\n        }\n    }\n    return output;\n}\n","// @flow\n\nclass ParsingError extends Error {\n    key: string;\n    message: string;\n    constructor(key: string, message: string) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\n\nexport default ParsingError;\n","// @flow\n\nimport type {Expression} from './expression.js';\n\n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n    parent: ?Scope;\n    bindings: {[_: string]: Expression};\n    constructor(parent?: Scope, bindings: Array<[string, Expression]> = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n\n    concat(bindings: Array<[string, Expression]>): Scope {\n        return new Scope(this, bindings);\n    }\n\n    get(name: string): Expression {\n        if (this.bindings[name]) { return this.bindings[name]; }\n        if (this.parent) { return this.parent.get(name); }\n        throw new Error(`${name} not found in scope.`);\n    }\n\n    has(name: string): boolean {\n        if (this.bindings[name]) return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\n\nexport default Scope;\n","// @flow\n\nexport type NullTypeT = { kind: 'null' };\nexport type NumberTypeT = { kind: 'number' };\nexport type StringTypeT = { kind: 'string' };\nexport type BooleanTypeT = { kind: 'boolean' };\nexport type ColorTypeT = { kind: 'color' };\nexport type ObjectTypeT = { kind: 'object' };\nexport type ValueTypeT = { kind: 'value' };\nexport type ErrorTypeT = { kind: 'error' };\nexport type CollatorTypeT = { kind: 'collator' };\nexport type FormattedTypeT = { kind: 'formatted' };\nexport type ResolvedImageTypeT = { kind: 'resolvedImage' };\n\nexport type EvaluationKind = 'constant' | 'source' | 'camera' | 'composite';\n\nexport type Type =\n    NullTypeT |\n    NumberTypeT |\n    StringTypeT |\n    BooleanTypeT |\n    ColorTypeT |\n    ObjectTypeT |\n    ValueTypeT |\n    ArrayType | // eslint-disable-line no-use-before-define\n    ErrorTypeT |\n    CollatorTypeT |\n    FormattedTypeT |\n    ResolvedImageTypeT\n\nexport type ArrayType = {\n    kind: 'array',\n    itemType: Type,\n    N: ?number\n}\n\nexport type NativeType = 'number' | 'string' | 'boolean' | 'null' | 'array' | 'object'\n\nexport const NullType = {kind: 'null'};\nexport const NumberType = {kind: 'number'};\nexport const StringType = {kind: 'string'};\nexport const BooleanType = {kind: 'boolean'};\nexport const ColorType = {kind: 'color'};\nexport const ObjectType = {kind: 'object'};\nexport const ValueType = {kind: 'value'};\nexport const ErrorType = {kind: 'error'};\nexport const CollatorType = {kind: 'collator'};\nexport const FormattedType = {kind: 'formatted'};\nexport const ResolvedImageType = {kind: 'resolvedImage'};\n\nexport function array(itemType: Type, N: ?number): ArrayType {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\n\nexport function toString(type: Type): string {\n    if (type.kind === 'array') {\n        const itemType = toString(type.itemType);\n        return typeof type.N === 'number' ?\n            `array<${itemType}, ${type.N}>` :\n            type.itemType.kind === 'value' ? 'array' : `array<${itemType}>`;\n    } else {\n        return type.kind;\n    }\n}\n\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    FormattedType,\n    ObjectType,\n    array(ValueType),\n    ResolvedImageType\n];\n\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nexport function checkSubtype(expected: Type, t: Type): ?string {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    } else if (expected.kind === 'array') {\n        if (t.kind === 'array' &&\n            ((t.N === 0 && t.itemType.kind === 'value') || !checkSubtype(expected.itemType, t.itemType)) &&\n            (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    } else if (expected.kind === t.kind) {\n        return null;\n    } else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n\n    return `Expected ${toString(expected)} but found ${toString(t)} instead.`;\n}\n\nexport function isValidType(provided: Type, allowedTypes: Array<Type>): boolean {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\n\nexport function isValidNativeType(provided: any, allowedTypes: Array<NativeType>): boolean {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        } else if (t === 'array') {\n            return Array.isArray(provided);\n        } else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        } else {\n            return t === typeof provided;\n        }\n    });\n}\n","// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n  \"transparent\": [0,0,0,0], \"aliceblue\": [240,248,255,1],\n  \"antiquewhite\": [250,235,215,1], \"aqua\": [0,255,255,1],\n  \"aquamarine\": [127,255,212,1], \"azure\": [240,255,255,1],\n  \"beige\": [245,245,220,1], \"bisque\": [255,228,196,1],\n  \"black\": [0,0,0,1], \"blanchedalmond\": [255,235,205,1],\n  \"blue\": [0,0,255,1], \"blueviolet\": [138,43,226,1],\n  \"brown\": [165,42,42,1], \"burlywood\": [222,184,135,1],\n  \"cadetblue\": [95,158,160,1], \"chartreuse\": [127,255,0,1],\n  \"chocolate\": [210,105,30,1], \"coral\": [255,127,80,1],\n  \"cornflowerblue\": [100,149,237,1], \"cornsilk\": [255,248,220,1],\n  \"crimson\": [220,20,60,1], \"cyan\": [0,255,255,1],\n  \"darkblue\": [0,0,139,1], \"darkcyan\": [0,139,139,1],\n  \"darkgoldenrod\": [184,134,11,1], \"darkgray\": [169,169,169,1],\n  \"darkgreen\": [0,100,0,1], \"darkgrey\": [169,169,169,1],\n  \"darkkhaki\": [189,183,107,1], \"darkmagenta\": [139,0,139,1],\n  \"darkolivegreen\": [85,107,47,1], \"darkorange\": [255,140,0,1],\n  \"darkorchid\": [153,50,204,1], \"darkred\": [139,0,0,1],\n  \"darksalmon\": [233,150,122,1], \"darkseagreen\": [143,188,143,1],\n  \"darkslateblue\": [72,61,139,1], \"darkslategray\": [47,79,79,1],\n  \"darkslategrey\": [47,79,79,1], \"darkturquoise\": [0,206,209,1],\n  \"darkviolet\": [148,0,211,1], \"deeppink\": [255,20,147,1],\n  \"deepskyblue\": [0,191,255,1], \"dimgray\": [105,105,105,1],\n  \"dimgrey\": [105,105,105,1], \"dodgerblue\": [30,144,255,1],\n  \"firebrick\": [178,34,34,1], \"floralwhite\": [255,250,240,1],\n  \"forestgreen\": [34,139,34,1], \"fuchsia\": [255,0,255,1],\n  \"gainsboro\": [220,220,220,1], \"ghostwhite\": [248,248,255,1],\n  \"gold\": [255,215,0,1], \"goldenrod\": [218,165,32,1],\n  \"gray\": [128,128,128,1], \"green\": [0,128,0,1],\n  \"greenyellow\": [173,255,47,1], \"grey\": [128,128,128,1],\n  \"honeydew\": [240,255,240,1], \"hotpink\": [255,105,180,1],\n  \"indianred\": [205,92,92,1], \"indigo\": [75,0,130,1],\n  \"ivory\": [255,255,240,1], \"khaki\": [240,230,140,1],\n  \"lavender\": [230,230,250,1], \"lavenderblush\": [255,240,245,1],\n  \"lawngreen\": [124,252,0,1], \"lemonchiffon\": [255,250,205,1],\n  \"lightblue\": [173,216,230,1], \"lightcoral\": [240,128,128,1],\n  \"lightcyan\": [224,255,255,1], \"lightgoldenrodyellow\": [250,250,210,1],\n  \"lightgray\": [211,211,211,1], \"lightgreen\": [144,238,144,1],\n  \"lightgrey\": [211,211,211,1], \"lightpink\": [255,182,193,1],\n  \"lightsalmon\": [255,160,122,1], \"lightseagreen\": [32,178,170,1],\n  \"lightskyblue\": [135,206,250,1], \"lightslategray\": [119,136,153,1],\n  \"lightslategrey\": [119,136,153,1], \"lightsteelblue\": [176,196,222,1],\n  \"lightyellow\": [255,255,224,1], \"lime\": [0,255,0,1],\n  \"limegreen\": [50,205,50,1], \"linen\": [250,240,230,1],\n  \"magenta\": [255,0,255,1], \"maroon\": [128,0,0,1],\n  \"mediumaquamarine\": [102,205,170,1], \"mediumblue\": [0,0,205,1],\n  \"mediumorchid\": [186,85,211,1], \"mediumpurple\": [147,112,219,1],\n  \"mediumseagreen\": [60,179,113,1], \"mediumslateblue\": [123,104,238,1],\n  \"mediumspringgreen\": [0,250,154,1], \"mediumturquoise\": [72,209,204,1],\n  \"mediumvioletred\": [199,21,133,1], \"midnightblue\": [25,25,112,1],\n  \"mintcream\": [245,255,250,1], \"mistyrose\": [255,228,225,1],\n  \"moccasin\": [255,228,181,1], \"navajowhite\": [255,222,173,1],\n  \"navy\": [0,0,128,1], \"oldlace\": [253,245,230,1],\n  \"olive\": [128,128,0,1], \"olivedrab\": [107,142,35,1],\n  \"orange\": [255,165,0,1], \"orangered\": [255,69,0,1],\n  \"orchid\": [218,112,214,1], \"palegoldenrod\": [238,232,170,1],\n  \"palegreen\": [152,251,152,1], \"paleturquoise\": [175,238,238,1],\n  \"palevioletred\": [219,112,147,1], \"papayawhip\": [255,239,213,1],\n  \"peachpuff\": [255,218,185,1], \"peru\": [205,133,63,1],\n  \"pink\": [255,192,203,1], \"plum\": [221,160,221,1],\n  \"powderblue\": [176,224,230,1], \"purple\": [128,0,128,1],\n  \"rebeccapurple\": [102,51,153,1],\n  \"red\": [255,0,0,1], \"rosybrown\": [188,143,143,1],\n  \"royalblue\": [65,105,225,1], \"saddlebrown\": [139,69,19,1],\n  \"salmon\": [250,128,114,1], \"sandybrown\": [244,164,96,1],\n  \"seagreen\": [46,139,87,1], \"seashell\": [255,245,238,1],\n  \"sienna\": [160,82,45,1], \"silver\": [192,192,192,1],\n  \"skyblue\": [135,206,235,1], \"slateblue\": [106,90,205,1],\n  \"slategray\": [112,128,144,1], \"slategrey\": [112,128,144,1],\n  \"snow\": [255,250,250,1], \"springgreen\": [0,255,127,1],\n  \"steelblue\": [70,130,180,1], \"tan\": [210,180,140,1],\n  \"teal\": [0,128,128,1], \"thistle\": [216,191,216,1],\n  \"tomato\": [255,99,71,1], \"turquoise\": [64,224,208,1],\n  \"violet\": [238,130,238,1], \"wheat\": [245,222,179,1],\n  \"white\": [255,255,255,1], \"whitesmoke\": [245,245,245,1],\n  \"yellow\": [255,255,0,1], \"yellowgreen\": [154,205,50,1]}\n\nfunction clamp_css_byte(i) {  // Clamp to integer 0 .. 255.\n  i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clamp_css_float(f) {  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parse_css_int(str) {  // int or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_byte(parseFloat(str) / 100 * 255);\n  return clamp_css_byte(parseInt(str));\n}\n\nfunction parse_css_float(str) {  // float or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_float(parseFloat(str) / 100);\n  return clamp_css_float(parseFloat(str));\n}\n\nfunction css_hue_to_rgb(m1, m2, h) {\n  if (h < 0) h += 1;\n  else if (h > 1) h -= 1;\n\n  if (h * 6 < 1) return m1 + (m2 - m1) * h * 6;\n  if (h * 2 < 1) return m2;\n  if (h * 3 < 2) return m1 + (m2 - m1) * (2/3 - h) * 6;\n  return m1;\n}\n\nfunction parseCSSColor(css_str) {\n  // Remove all whitespace, not compliant, but should just be more accepting.\n  var str = css_str.replace(/ /g, '').toLowerCase();\n\n  // Color keywords (and transparent) lookup.\n  if (str in kCSSColorTable) return kCSSColorTable[str].slice();  // dup.\n\n  // #abc and #abc123 syntax.\n  if (str[0] === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xfff)) return null;  // Covers NaN.\n      return [((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n              (iv & 0xf0) | ((iv & 0xf0) >> 4),\n              (iv & 0xf) | ((iv & 0xf) << 4),\n              1];\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xffffff)) return null;  // Covers NaN.\n      return [(iv & 0xff0000) >> 16,\n              (iv & 0xff00) >> 8,\n              iv & 0xff,\n              1];\n    }\n\n    return null;\n  }\n\n  var op = str.indexOf('('), ep = str.indexOf(')');\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op+1, ep-(op+1)).split(',');\n    var alpha = 1;  // To allow case fallthrough.\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'rgb':\n        if (params.length !== 3) return null;\n        return [parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha];\n      case 'hsla':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'hsl':\n        if (params.length !== 3) return null;\n        var h = (((parseFloat(params[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parse_css_float(params[1]);\n        var l = parse_css_float(params[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n        return [clamp_css_byte(css_hue_to_rgb(m1, m2, h+1/3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h-1/3) * 255),\n                alpha];\n      default:\n        return null;\n    }\n  }\n\n  return null;\n}\n\ntry { exports.parseCSSColor = parseCSSColor } catch(e) { }\n","// @flow\n\nimport {parseCSSColor} from 'csscolorparser';\n\n/**\n * An RGBA color value. Create instances from color strings using the static\n * method `Color.parse`. The constructor accepts RGB channel values in the range\n * `[0, 1]`, premultiplied by A.\n *\n * @param {number} r The red channel.\n * @param {number} g The green channel.\n * @param {number} b The blue channel.\n * @param {number} a The alpha channel.\n * @private\n */\nclass Color {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n\n    constructor(r: number, g: number, b: number, a: number = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n    static black: Color;\n    static white: Color;\n    static transparent: Color;\n    static red: Color;\n    static blue: Color;\n\n    /**\n     * Parses valid CSS color strings and returns a `Color` instance.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input?: string | Color | null): Color | void {\n        if (!input) {\n            return undefined;\n        }\n\n        if (input instanceof Color) {\n            return input;\n        }\n\n        if (typeof input !== 'string') {\n            return undefined;\n        }\n\n        const rgba = parseCSSColor(input);\n        if (!rgba) {\n            return undefined;\n        }\n\n        return new Color(\n            rgba[0] / 255 * rgba[3],\n            rgba[1] / 255 * rgba[3],\n            rgba[2] / 255 * rgba[3],\n            rgba[3]\n        );\n    }\n\n    /**\n     * Returns an RGBA string representing the color value.\n     *\n     * @returns An RGBA string.\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString(): string {\n        const [r, g, b, a] = this.toArray();\n        return `rgba(${Math.round(r)},${Math.round(g)},${Math.round(b)},${a})`;\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 255].\n     */\n    toArray(): [number, number, number, number] {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r * 255 / a,\n            g * 255 / a,\n            b * 255 / a,\n            a\n        ];\n    }\n\n    /**\n     * Returns a RGBA array of float values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01(): [number, number, number, number] {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r / a,\n            g / a,\n            b / a,\n            a\n        ];\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color, premultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01PremultipliedAlpha(): [number, number, number, number] {\n        const {r, g, b, a} = this;\n        return [\n            r,\n            g,\n            b,\n            a\n        ];\n    }\n}\n\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\nColor.blue = new Color(0, 0, 1, 1);\n\nexport default Color;\n","// @flow\n\n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\n\ndeclare var Intl: {\n    Collator: Class<Intl$Collator>\n};\n\ndeclare class Intl$Collator {\n    constructor (\n        locales?: string | string[],\n        options?: CollatorOptions\n    ): Intl$Collator;\n\n    static (\n        locales?: string | string[],\n        options?: CollatorOptions\n    ): Intl$Collator;\n\n    compare (a: string, b: string): number;\n\n    resolvedOptions(): any;\n}\n\ntype CollatorOptions = {\n    localeMatcher?: 'lookup' | 'best fit',\n    usage?: 'sort' | 'search',\n    sensitivity?: 'base' | 'accent' | 'case' | 'variant',\n    ignorePunctuation?: boolean,\n    numeric?: boolean,\n    caseFirst?: 'upper' | 'lower' | 'false'\n}\n\nexport default class Collator {\n    locale: string | null;\n    sensitivity: 'base' | 'accent' | 'case' | 'variant';\n    collator: Intl$Collator;\n\n    constructor(caseSensitive: boolean, diacriticSensitive: boolean, locale: string | null) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [],\n            {sensitivity: this.sensitivity, usage: 'search'});\n    }\n\n    compare(lhs: string, rhs: string): number {\n        return this.collator.compare(lhs, rhs);\n    }\n\n    resolvedLocale(): string {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : [])\n            .resolvedOptions().locale;\n    }\n}\n","// @flow\nimport type Color from '../../util/color.js';\nimport type ResolvedImage from '../types/resolved_image.js';\n\nexport class FormattedSection {\n    text: string;\n    image: ResolvedImage | null;\n    scale: number | null;\n    fontStack: string | null;\n    textColor: Color | null;\n\n    constructor(text: string, image: ResolvedImage | null, scale: number | null, fontStack: string | null, textColor: Color | null) {\n        // combine characters so that diacritic marks are not separate code points\n        this.text = text.normalize ? text.normalize() : text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n    }\n}\n\nexport default class Formatted {\n    sections: Array<FormattedSection>;\n\n    constructor(sections: Array<FormattedSection>) {\n        this.sections = sections;\n    }\n\n    static fromString(unformatted: string): Formatted {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null)]);\n    }\n\n    isEmpty(): boolean {\n        if (this.sections.length === 0) return true;\n        return !this.sections.some(section => section.text.length !== 0 ||\n                                             (section.image && section.image.name.length !== 0));\n    }\n\n    static factory(text: Formatted | string): Formatted {\n        if (text instanceof Formatted) {\n            return text;\n        } else {\n            return Formatted.fromString(text);\n        }\n    }\n\n    toString(): string {\n        if (this.sections.length === 0) return '';\n        return this.sections.map(section => section.text).join('');\n    }\n\n    serialize(): Array<mixed> {\n        const serialized: Array<mixed> = [\"format\"];\n        for (const section of this.sections) {\n            if (section.image) {\n                serialized.push([\"image\", section.image.name]);\n                continue;\n            }\n            serialized.push(section.text);\n            const options: { [key: string]: mixed } = {};\n            if (section.fontStack) {\n                options[\"text-font\"] = [\"literal\", section.fontStack.split(',')];\n            }\n            if (section.scale) {\n                options[\"font-scale\"] = section.scale;\n            }\n            if (section.textColor) {\n                options[\"text-color\"] = ([\"rgba\"]: Array<mixed>).concat(section.textColor.toArray());\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","// @flow\n\nexport type ResolvedImageOptions = {\n    name: string,\n    available: boolean\n};\n\nexport default class ResolvedImage {\n    name: string;\n    available: boolean;\n\n    constructor(options: ResolvedImageOptions) {\n        this.name = options.name;\n        this.available = options.available;\n    }\n\n    toString(): string {\n        return this.name;\n    }\n\n    static fromString(name: string): ResolvedImage | null {\n        if (!name) return null; // treat empty values as no image\n        return new ResolvedImage({name, available: false});\n    }\n\n    serialize(): Array<string> {\n        return [\"image\", this.name];\n    }\n}\n","// @flow\n\nimport assert from 'assert';\n\nimport Color from '../util/color.js';\nimport Collator from './types/collator.js';\nimport Formatted from './types/formatted.js';\nimport ResolvedImage from './types/resolved_image.js';\nimport {NullType, NumberType, StringType, BooleanType, ColorType, ObjectType, ValueType, CollatorType, FormattedType, ResolvedImageType, array} from './types.js';\n\nimport type {Type} from './types.js';\n\nexport function validateRGBA(r: mixed, g: mixed, b: mixed, a?: mixed): string | null {\n    if (!(\n        typeof r === 'number' && r >= 0 && r <= 255 &&\n        typeof g === 'number' && g >= 0 && g <= 255 &&\n        typeof b === 'number' && b >= 0 && b <= 255\n    )) {\n        const value = typeof a === 'number' ? [r, g, b, a] : [r, g, b];\n        return `Invalid rgba value [${value.join(', ')}]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n\n    if (!(\n        typeof a === 'undefined' || (typeof a === 'number' && a >= 0 && a <= 1)\n    )) {\n        return `Invalid rgba value [${[r, g, b, a].join(', ')}]: 'a' must be between 0 and 1.`;\n    }\n\n    return null;\n}\n\nexport type Value = null | string | boolean | number | Color | Collator | Formatted | ResolvedImage | $ReadOnlyArray<Value> | { +[string]: Value }\n\nexport function isValue(mixed: mixed): boolean {\n    if (mixed === null) {\n        return true;\n    } else if (typeof mixed === 'string') {\n        return true;\n    } else if (typeof mixed === 'boolean') {\n        return true;\n    } else if (typeof mixed === 'number') {\n        return true;\n    } else if (mixed instanceof Color) {\n        return true;\n    } else if (mixed instanceof Collator) {\n        return true;\n    } else if (mixed instanceof Formatted) {\n        return true;\n    } else if (mixed instanceof ResolvedImage) {\n        return true;\n    } else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    } else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function typeOf(value: Value): Type {\n    if (value === null) {\n        return NullType;\n    } else if (typeof value === 'string') {\n        return StringType;\n    } else if (typeof value === 'boolean') {\n        return BooleanType;\n    } else if (typeof value === 'number') {\n        return NumberType;\n    } else if (value instanceof Color) {\n        return ColorType;\n    } else if (value instanceof Collator) {\n        return CollatorType;\n    } else if (value instanceof Formatted) {\n        return FormattedType;\n    } else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    } else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType: Type | typeof undefined;\n\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            } else if (itemType === t) {\n                continue;\n            } else {\n                itemType = ValueType;\n                break;\n            }\n        }\n\n        return array(itemType || ValueType, length);\n    } else {\n        assert(typeof value === 'object');\n        return ObjectType;\n    }\n}\n\nexport function toString(value: Value): string {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    } else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    } else if (value instanceof Color || value instanceof Formatted || value instanceof ResolvedImage) {\n        return value.toString();\n    } else {\n        return JSON.stringify(value);\n    }\n}\n\nexport {Color, Collator};\n","// @flow\n\nimport assert from 'assert';\nimport {isValue, typeOf, Color} from '../values.js';\nimport Formatted from '../types/formatted.js';\n\nimport type {Type} from '../types.js';\nimport type {Value}  from '../values.js';\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\n\nclass Literal implements Expression {\n    type: Type;\n    value: Value;\n\n    constructor(type: Type, value: Value) {\n        this.type = type;\n        this.value = value;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): void | Literal {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n\n        if (!isValue(args[1]))\n            return context.error(`invalid value`);\n\n        const value = (args[1]: any);\n        let type = typeOf(value);\n\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (\n            type.kind === 'array' &&\n            type.N === 0 &&\n            expected &&\n            expected.kind === 'array' &&\n            (typeof expected.N !== 'number' || expected.N === 0)\n        ) {\n            type = expected;\n        }\n\n        return new Literal(type, value);\n    }\n\n    evaluate(): Value {\n        return this.value;\n    }\n\n    eachChild() {}\n\n    outputDefined(): boolean {\n        return true;\n    }\n\n    serialize(): SerializedExpression {\n        if (this.type.kind === 'array' || this.type.kind === 'object') {\n            return [\"literal\", this.value];\n        } else if (this.value instanceof Color) {\n            // Constant-folding can generate Literal expressions that you\n            // couldn't actually generate with a \"literal\" expression,\n            // so we have to implement an equivalent serialization here\n            return [\"rgba\"].concat(this.value.toArray());\n        } else if (this.value instanceof Formatted) {\n            // Same as Color\n            return this.value.serialize();\n        } else {\n            assert(this.value === null ||\n                typeof this.value === 'string' ||\n                typeof this.value === 'number' ||\n                typeof this.value === 'boolean');\n            return (this.value: any);\n        }\n    }\n}\n\nexport default Literal;\n","// @flow\n\nclass RuntimeError {\n    name: string;\n    message: string;\n\n    constructor(message: string) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n\n    toJSON(): string {\n        return this.message;\n    }\n}\n\nexport default RuntimeError;\n","// @flow\n\nimport assert from 'assert';\n\nimport {\n    ObjectType,\n    ValueType,\n    StringType,\n    NumberType,\n    BooleanType,\n    checkSubtype,\n    toString,\n    array\n} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nconst types = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\n\nclass Assertion implements Expression {\n    type: Type;\n    args: Array<Expression>;\n\n    constructor(type: Type, args: Array<Expression>) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        let i = 1;\n        let type;\n\n        const name: string = (args[0]: any);\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types[type];\n                i++;\n            } else {\n                itemType = ValueType;\n            }\n\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null &&\n                    (typeof args[2] !== 'number' ||\n                        args[2] < 0 ||\n                        args[2] !== Math.floor(args[2]))\n                ) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = args[2];\n                i++;\n            }\n\n            type = array(itemType, N);\n        } else {\n            assert(types[name], name);\n            type = types[name];\n        }\n\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Assertion(type, parsed);\n    }\n\n    evaluate(ctx: EvaluationContext): any | null {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            } else if (i === this.args.length - 1) {\n                throw new RuntimeError(`Expected value to be of type ${toString(this.type)}, but found ${toString(typeOf(value))} instead.`);\n            }\n        }\n\n        assert(false);\n        return null;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined(): boolean {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize(): SerializedExpression {\n        const type = this.type;\n        const serialized = [type.kind];\n        if (type.kind === 'array') {\n            const itemType = type.itemType;\n            if (itemType.kind === 'string' ||\n                itemType.kind === 'number' ||\n                itemType.kind === 'boolean') {\n                serialized.push(itemType.kind);\n                const N = type.N;\n                if (typeof N === 'number' || this.args.length > 1) {\n                    serialized.push(N);\n                }\n            }\n        }\n        return serialized.concat(this.args.map(arg => arg.serialize()));\n    }\n}\n\nexport default Assertion;\n","// @flow\n\nimport {NumberType, ValueType, FormattedType, array, StringType, ColorType, ResolvedImageType} from '../types.js';\nimport Formatted, {FormattedSection} from '../types/formatted.js';\nimport {toString, typeOf} from '../values.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type {Type} from '../types.js';\n\ntype FormattedSectionExpression = {\n    // Content of a section may be Image expression or other\n    // type of expression that is coercable to 'string'.\n    content: Expression,\n    scale: Expression | null;\n    font: Expression | null;\n    textColor: Expression | null;\n}\n\nexport default class FormatExpression implements Expression {\n    type: Type;\n    sections: Array<FormattedSectionExpression>;\n\n    constructor(sections: Array<FormattedSectionExpression>) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length < 2) {\n            return context.error(`Expected at least one argument.`);\n        }\n\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object')  {\n            return context.error(`First argument must be an image or text section.`);\n        }\n\n        const sections: Array<FormattedSectionExpression> = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = (args[i]: any);\n\n            if (nextTokenMayBeObject && typeof arg === \"object\" && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale) return null;\n                }\n\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array(StringType));\n                    if (!font) return null;\n                }\n\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor) return null;\n                }\n\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n            } else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content) return null;\n\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error(`Formatted text type must be 'string', 'value', 'image' or 'null'.`);\n\n                nextTokenMayBeObject = true;\n                sections.push({content, scale: null, font: null, textColor: null});\n            }\n        }\n\n        return new FormatExpression(sections);\n    }\n\n    evaluate(ctx: EvaluationContext): Formatted {\n        const evaluateSection = section => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null);\n            }\n\n            return new FormattedSection(\n                    toString(evaluatedContent),\n                    null,\n                    section.scale ? section.scale.evaluate(ctx) : null,\n                    section.font ? section.font.evaluate(ctx).join(',') : null,\n                    section.textColor ? section.textColor.evaluate(ctx) : null\n            );\n        };\n\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n        }\n    }\n\n    outputDefined(): boolean {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"format\"];\n        for (const section of this.sections) {\n            serialized.push(section.content.serialize());\n            const options = {};\n            if (section.scale) {\n                options['font-scale'] = section.scale.serialize();\n            }\n            if (section.font) {\n                options['text-font'] = section.font.serialize();\n            }\n            if (section.textColor) {\n                options['text-color'] = section.textColor.serialize();\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","// @flow\n\nimport {ResolvedImageType, StringType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type {Type} from '../types.js';\n\nexport default class ImageExpression implements Expression {\n    type: Type;\n    input: Expression;\n\n    constructor(input: Expression) {\n        this.type = ResolvedImageType;\n        this.input = input;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length !== 2) {\n            return context.error(`Expected two arguments.`);\n        }\n\n        const name = context.parse(args[1], 1, StringType);\n        if (!name) return context.error(`No image name provided.`);\n\n        return new ImageExpression(name);\n    }\n\n    evaluate(ctx: EvaluationContext): null | ResolvedImage {\n        const evaluatedImageName = this.input.evaluate(ctx);\n\n        const value = ResolvedImage.fromString(evaluatedImageName);\n        if (value && ctx.availableImages) value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1;\n\n        return value;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n    }\n\n    outputDefined(): boolean {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        return [\"image\", this.input.serialize()];\n    }\n}\n","// @flow\n\nimport assert from 'assert';\n\nimport {BooleanType, ColorType, NumberType, StringType, ValueType} from '../types.js';\nimport {Color, toString as valueToString, validateRGBA} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\nimport Formatted from '../types/formatted.js';\nimport FormatExpression from '../definitions/format.js';\nimport ImageExpression from '../definitions/image.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nconst types = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion implements Expression {\n    type: Type;\n    args: Array<Expression>;\n\n    constructor(type: Type, args: Array<Expression>) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        const name: string = (args[0]: any);\n        assert(types[name], name);\n\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const type = types[name];\n\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Coercion(type, parsed);\n    }\n\n    evaluate(ctx: EvaluationContext): null | boolean | number | string | Color | Formatted | ResolvedImage {\n        if (this.type.kind === 'boolean') {\n            return Boolean(this.args[0].evaluate(ctx));\n        } else if (this.type.kind === 'color') {\n            let input;\n            let error;\n            for (const arg of this.args) {\n                input = arg.evaluate(ctx);\n                error = null;\n                if (input instanceof Color) {\n                    return input;\n                } else if (typeof input === 'string') {\n                    const c = ctx.parseColor(input);\n                    if (c) return c;\n                } else if (Array.isArray(input)) {\n                    if (input.length < 3 || input.length > 4) {\n                        error = `Invalid rbga value ${JSON.stringify(input)}: expected an array containing either three or four numeric values.`;\n                    } else {\n                        error = validateRGBA(input[0], input[1], input[2], input[3]);\n                    }\n                    if (!error) {\n                        return new Color((input[0]: any) / 255, (input[1]: any) / 255, (input[2]: any) / 255, (input[3]: any));\n                    }\n                }\n            }\n            throw new RuntimeError(error || `Could not parse color from value '${typeof input === 'string' ? input : String(JSON.stringify(input))}'`);\n        } else if (this.type.kind === 'number') {\n            let value = null;\n            for (const arg of this.args) {\n                value = arg.evaluate(ctx);\n                if (value === null) return 0;\n                const num = Number(value);\n                if (isNaN(num)) continue;\n                return num;\n            }\n            throw new RuntimeError(`Could not convert ${JSON.stringify(value)} to number.`);\n        } else if (this.type.kind === 'formatted') {\n            // There is no explicit 'to-formatted' but this coercion can be implicitly\n            // created by properties that expect the 'formatted' type.\n            return Formatted.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else if (this.type.kind === 'resolvedImage') {\n            return ResolvedImage.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else {\n            return valueToString(this.args[0].evaluate(ctx));\n        }\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined(): boolean {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize(): SerializedExpression {\n        if (this.type.kind === 'formatted') {\n            return new FormatExpression([{content: this.args[0], scale: null, font: null, textColor: null}]).serialize();\n        }\n\n        if (this.type.kind === 'resolvedImage') {\n            return new ImageExpression(this.args[0]).serialize();\n        }\n\n        const serialized = [`to-${this.type.kind}`];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coercion;\n","// @flow\n\nimport {Color} from './values.js';\n\nimport type Point from '@mapbox/point-geometry';\nimport type {FormattedSection} from './types/formatted.js';\nimport type {GlobalProperties, Feature, FeatureState} from './index.js';\nimport type {CanonicalTileID} from '../../source/tile_id.js';\nimport type {FeatureDistanceData} from '../feature_filter/index.js';\n\nconst geometryTypes = ['Unknown', 'Point', 'LineString', 'Polygon'];\n\nclass EvaluationContext {\n    globals: GlobalProperties;\n    feature: ?Feature;\n    featureState: ?FeatureState;\n    formattedSection: ?FormattedSection;\n    availableImages: ?Array<string>;\n    canonical: null | CanonicalTileID;\n    featureTileCoord: ?Point;\n    featureDistanceData: ?FeatureDistanceData;\n\n    _parseColorCache: {[_: string]: ?Color};\n\n    constructor() {\n        this.globals = (null: any);\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = {};\n        this.availableImages = null;\n        this.canonical = null;\n        this.featureTileCoord = null;\n        this.featureDistanceData = null;\n    }\n\n    id(): number | null {\n        return this.feature && 'id' in this.feature && this.feature.id ? this.feature.id : null;\n    }\n\n    geometryType(): null | string {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n\n    geometry(): ?Array<Array<Point>> {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n\n    canonicalID(): null | CanonicalTileID {\n        return this.canonical;\n    }\n\n    properties(): {[string]: any} {\n        return (this.feature && this.feature.properties) || {};\n    }\n\n    distanceFromCenter(): number {\n        if (this.featureTileCoord && this.featureDistanceData) {\n\n            const c = this.featureDistanceData.center;\n            const scale = this.featureDistanceData.scale;\n            const {x, y} = this.featureTileCoord;\n\n            // Calculate the distance vector `d` (left handed)\n            const dX = x * scale - c[0];\n            const dY = y * scale - c[1];\n\n            // The bearing vector `b` (left handed)\n            const bX = this.featureDistanceData.bearing[0];\n            const bY = this.featureDistanceData.bearing[1];\n\n            // Distance is calculated as `dot(d, v)`\n            const dist = (bX * dX + bY * dY);\n            return dist;\n        }\n\n        return 0;\n    }\n\n    parseColor(input: string): ?Color {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color.parse(input);\n        }\n        return cached;\n    }\n}\n\nexport default EvaluationContext;\n","// @flow\n\nimport {toString} from './types.js';\n\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport assert from 'assert';\n\nimport type {Expression, ExpressionRegistry} from './expression.js';\nimport type {Type} from './types.js';\nimport type {Value} from './values.js';\n\nexport type Varargs = {| type: Type |};\ntype Signature = Array<Type> | Varargs;\ntype Evaluate = (EvaluationContext, Array<Expression>) => Value;\ntype Definition = [Type, Signature, Evaluate] |\n    {|type: Type, overloads: Array<[Signature, Evaluate]>|};\n\nclass CompoundExpression implements Expression {\n    name: string;\n    type: Type;\n    _evaluate: Evaluate;\n    args: Array<Expression>;\n\n    static definitions: {[_: string]: Definition };\n\n    constructor(name: string, type: Type, evaluate: Evaluate, args: Array<Expression>) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n\n    evaluate(ctx: EvaluationContext): Value {\n        return this._evaluate(ctx, this.args);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): Array<mixed> {\n        return [this.name].concat(this.args.map(arg => arg.serialize()));\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        const op: string = (args[0]: any);\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ?\n            definition[0] : definition.type;\n\n        const availableOverloads = Array.isArray(definition) ?\n            [[definition[1], definition[2]]] :\n            definition.overloads;\n\n        const overloads = availableOverloads.filter(([signature]) => (\n            !Array.isArray(signature) || // varags\n            signature.length === args.length - 1 // correct param count\n        ));\n\n        let signatureContext: ParsingContext = (null: any);\n\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext(context.registry, context.path, null, context.scope);\n\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs: Array<Expression> = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ?\n                    params[i - 1] :\n                    params.type;\n\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${params.length} arguments, but found ${parsedArgs.length} instead.`);\n                    continue;\n                }\n            }\n\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs);\n            }\n        }\n\n        assert(!signatureContext || signatureContext.errors.length > 0);\n\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        } else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected\n                .map(([params]) => stringifySignature(params))\n                .join(' | ');\n\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed) return null;\n                actualTypes.push(toString(parsed.type));\n            }\n            context.error(`Expected arguments of type ${signatures}, but found (${actualTypes.join(', ')}) instead.`);\n        }\n\n        return null;\n    }\n\n    static register(\n        registry: ExpressionRegistry,\n        definitions: {[_: string]: Definition }\n    ) {\n        assert(!CompoundExpression.definitions);\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\n\nfunction stringifySignature(signature: Signature): string {\n    if (Array.isArray(signature)) {\n        return `(${signature.map(toString).join(', ')})`;\n    } else {\n        return `(${toString(signature.type)}...)`;\n    }\n}\n\nexport default CompoundExpression;\n","// @flow\n\nimport {StringType, BooleanType, CollatorType} from '../types.js';\nimport Collator from '../types/collator.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type {Type} from '../types.js';\n\nexport default class CollatorExpression implements Expression {\n    type: Type;\n    caseSensitive: Expression;\n    diacriticSensitive: Expression;\n    locale: Expression | null;\n\n    constructor(caseSensitive: Expression, diacriticSensitive: Expression, locale: Expression | null) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const options = (args[1]: any);\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`Collator options argument must be an object.`);\n\n        const caseSensitive = context.parse(\n            options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive) return null;\n\n        const diacriticSensitive = context.parse(\n            options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive) return null;\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n\n    evaluate(ctx: EvaluationContext): Collator {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n\n    outputDefined(): boolean {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        const options = {};\n        options['case-sensitive'] = this.caseSensitive.serialize();\n        options['diacritic-sensitive'] = this.diacriticSensitive.serialize();\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        return [\"collator\", options];\n    }\n}\n","// @flow\n\nimport {isValue} from '../values.js';\nimport type {Type} from '../types.js';\nimport {BooleanType} from '../types.js';\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {GeoJSON, GeoJSONPolygon, GeoJSONMultiPolygon} from '@mapbox/geojson-types';\nimport Point from '@mapbox/point-geometry';\nimport type {CanonicalTileID} from '../../../source/tile_id.js';\n\ntype GeoJSONPolygons =| GeoJSONPolygon | GeoJSONMultiPolygon;\n\n// minX, minY, maxX, maxY\ntype BBox = [number, number, number, number];\nconst EXTENT = 8192;\n\nfunction updateBBox(bbox: BBox, coord: Point) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\n\nfunction mercatorXfromLng(lng: number) {\n    return (180 + lng) / 360;\n}\n\nfunction mercatorYfromLat(lat: number) {\n    return (180 - (180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360)))) / 360;\n}\n\nfunction boxWithinBox(bbox1: BBox, bbox2: BBox) {\n    if (bbox1[0] <= bbox2[0]) return false;\n    if (bbox1[2] >= bbox2[2]) return false;\n    if (bbox1[1] <= bbox2[1]) return false;\n    if (bbox1[3] >= bbox2[3]) return false;\n    return true;\n}\n\nfunction getTileCoordinates(p, canonical: CanonicalTileID) {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [Math.round(x * tilesAtZoom * EXTENT), Math.round(y * tilesAtZoom * EXTENT)];\n}\n\nfunction onBoundary(p, p1, p2) {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return (x1 * y2 - x2 * y1 === 0) && (x1 * x2 <= 0) && (y1 * y2 <= 0);\n}\n\nfunction rayIntersect(p, p1, p2) {\n    return ((p1[1] > p[1]) !== (p2[1] > p[1])) && (p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0]);\n}\n\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings) {\n    let inside = false;\n    for (let i = 0, len = rings.length; i < len; i++) {\n        const ring = rings[i];\n        for (let j = 0, len2 = ring.length; j < len2 - 1; j++) {\n            if (onBoundary(point, ring[j], ring[j + 1])) return false;\n            if (rayIntersect(point, ring[j], ring[j + 1])) inside = !inside;\n        }\n    }\n    return inside;\n}\n\nfunction pointWithinPolygons(point, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (pointWithinPolygon(point, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction perp(v1, v2) {\n    return (v1[0] * v2[1] - v1[1] * v2[0]);\n}\n\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction  twoSided(p1, p2, q1, q2) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = (x1 * y3 - x3 * y1);\n    const det2 =  (x2 * y3 - x3 * y2);\n    if ((det1 > 0 && det2 < 0) || (det1 < 0 && det2 > 0)) return true;\n    return false;\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction lineIntersectLine(a, b, c, d) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP = [b[0] - a[0], b[1] - a[1]];\n    const vectorQ = [d[0] - c[0], d[1] - c[1]];\n    if (perp(vectorQ, vectorP) === 0) return false;\n\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b)) return true;\n    return false;\n}\n\nfunction lineIntersectPolygon(p1, p2, polygon) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0; j < ring.length - 1; ++j) {\n            if (lineIntersectLine(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction lineStringWithinPolygon(line, polygon) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (let i = 0; i < line.length; ++i) {\n        if (!pointWithinPolygon(line[i], polygon)) {\n            return false;\n        }\n    }\n\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction lineStringWithinPolygons(line, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (lineStringWithinPolygon(line, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction getTilePolygon(coordinates, bbox: BBox, canonical: CanonicalTileID) {\n    const polygon = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\n\nfunction getTilePolygons(coordinates, bbox, canonical: CanonicalTileID) {\n    const polygons = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\n\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = (p[0] - polyBBox[0] > halfWorldSize) ? -worldSize : (polyBBox[0] - p[0] > halfWorldSize) ? worldSize : 0;\n        if (shift === 0) {\n            shift = (p[0] - polyBBox[2] > halfWorldSize) ? -worldSize : (polyBBox[2] - p[0] > halfWorldSize) ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\n\nfunction resetBBox(bbox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\n\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical: CanonicalTileID) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tilePoints = [];\n    if (!geometry) return tilePoints;\n    for (const points of geometry) {\n        for (const point of points) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\n\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical: CanonicalTileID) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tileLines = [];\n    if (!geometry) return tileLines;\n    for (const line of geometry) {\n        const tileLine = [];\n        for (const point of line) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\n\nfunction pointsWithinPolygons(ctx: EvaluationContext, polygonGeometry: GeoJSONPolygons) {\n    const pointBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons)) return false;\n        }\n    }\n\n    return true;\n}\n\nfunction linesWithinPolygons(ctx: EvaluationContext, polygonGeometry: GeoJSONPolygons) {\n    const lineBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons)) return false;\n        }\n    }\n    return true;\n}\n\nclass Within implements Expression {\n    type: Type;\n    geojson: GeoJSON\n    geometries: GeoJSONPolygons;\n\n    constructor(geojson: GeoJSON, geometries: GeoJSONPolygons) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Within {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = (args[1]: Object);\n            if (geojson.type === 'FeatureCollection') {\n                for (let i = 0; i < geojson.features.length; ++i) {\n                    const type = geojson.features[i].geometry.type;\n                    if (type === 'Polygon' || type === 'MultiPolygon') {\n                        return new Within(geojson, geojson.features[i].geometry);\n                    }\n                }\n            } else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            } else if (geojson.type  === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error(`'within' expression requires valid geojson object that contains polygon geometry type.`);\n    }\n\n    evaluate(ctx: EvaluationContext): boolean {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            } else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n\n    eachChild() {}\n\n    outputDefined(): boolean {\n        return true;\n    }\n\n    serialize(): SerializedExpression {\n        return [\"within\", this.geojson];\n    }\n\n}\n\nexport default Within;\n","// @flow\n\nimport CompoundExpression from './compound_expression.js';\nimport Within from './definitions/within.js';\nimport type {Expression} from './expression.js';\n\nfunction isFeatureConstant(e: Expression): boolean {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'feature-state') {\n            return false;\n        } else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        } else if (\n            e.name === 'properties' ||\n            e.name === 'geometry-type' ||\n            e.name === 'id'\n        ) {\n            return false;\n        } else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n\n    if (e instanceof Within) {\n        return false;\n    }\n\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isStateConstant(e: Expression): boolean {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isGlobalPropertyConstant(e: Expression, properties: Array<string>): boolean {\n    if (e instanceof CompoundExpression && properties.indexOf(e.name) >= 0) { return false; }\n    let result = true;\n    e.eachChild((arg) => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) { result = false; }\n    });\n    return result;\n}\n\nexport {isFeatureConstant, isGlobalPropertyConstant, isStateConstant};\n","// @flow\n\nimport type {Type} from '../types.js';\nimport type {Expression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext  from '../evaluation_context.js';\n\nclass Var implements Expression {\n    type: Type;\n    name: string;\n    boundExpression: Expression;\n\n    constructor(name: string, boundExpression: Expression) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): void | Var {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error(`'var' expression requires exactly one string literal argument.`);\n\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${name}\". Make sure \"${name}\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n\n        return new Var(name, context.scope.get(name));\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        return this.boundExpression.evaluate(ctx);\n    }\n\n    eachChild() {}\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): Array<string> {\n        return [\"var\", this.name];\n    }\n}\n\nexport default Var;\n","// @flow\n\nimport Scope from './scope.js';\nimport {checkSubtype} from './types.js';\nimport ParsingError from './parsing_error.js';\nimport Literal from './definitions/literal.js';\nimport Assertion from './definitions/assertion.js';\nimport Coercion from './definitions/coercion.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport CollatorExpression from './definitions/collator.js';\nimport Within from './definitions/within.js';\nimport {isGlobalPropertyConstant, isFeatureConstant} from './is_constant.js';\nimport Var from './definitions/var.js';\n\nimport type {Expression, ExpressionRegistry} from './expression.js';\nimport type {Type} from './types.js';\n\n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n    registry: ExpressionRegistry;\n    path: Array<number>;\n    key: string;\n    scope: Scope;\n    errors: Array<ParsingError>;\n\n    // The expected type of this expression. Provided only to allow Expression\n    // implementations to infer argument types: Expression#parse() need not\n    // check that the output type of the parsed expression matches\n    // `expectedType`.\n    expectedType: ?Type;\n\n    constructor(\n        registry: ExpressionRegistry,\n        path: Array<number> = [],\n        expectedType: ?Type,\n        scope: Scope = new Scope(),\n        errors: Array<ParsingError> = []\n    ) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${part}]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n    }\n\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(\n        expr: mixed,\n        index?: number,\n        expectedType?: ?Type,\n        bindings?: Array<[string, Expression]>,\n        options: {typeAnnotation?: 'assert' | 'coerce' | 'omit'} = {}\n    ): ?Expression {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n\n    _parse(expr: mixed, options: {typeAnnotation?: 'assert' | 'coerce' | 'omit'}): ?Expression {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = ['literal', expr];\n        }\n\n        function annotate(parsed, type, typeAnnotation: 'assert' | 'coerce' | 'omit') {\n            if (typeAnnotation === 'assert') {\n                return new Assertion(type, [parsed]);\n            } else if (typeAnnotation === 'coerce') {\n                return new Coercion(type, [parsed]);\n            } else {\n                return parsed;\n            }\n        }\n\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error(`Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].`);\n            }\n\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${typeof op} instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed) return null;\n\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    } else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    } else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal) && (parsed.type.kind !== 'resolvedImage') && isConstant(parsed)) {\n                    const ec = new EvaluationContext();\n                    try {\n                        parsed = new Literal(parsed.type, parsed.evaluate(ec));\n                    } catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n\n                return parsed;\n            }\n\n            return this.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        } else if (typeof expr === 'undefined') {\n            return this.error(`'undefined' value invalid. Use null instead.`);\n        } else if (typeof expr === 'object') {\n            return this.error(`Bare objects invalid. Use [\"literal\", {...}] instead.`);\n        } else {\n            return this.error(`Expected an array, but found ${typeof expr} instead.`);\n        }\n    }\n\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index: number, expectedType?: ?Type, bindings?: Array<[string, Expression]>): ParsingContext {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(\n            this.registry,\n            path,\n            expectedType || null,\n            scope,\n            this.errors\n        );\n    }\n\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error: string, ...keys: Array<number>) {\n        const key = `${this.key}${keys.map(k => `[${k}]`).join('')}`;\n        this.errors.push(new ParsingError(key, error));\n    }\n\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     */\n    checkSubtype(expected: Type, t: Type): ?string {\n        const error = checkSubtype(expected, t);\n        if (error) this.error(error);\n        return error;\n    }\n}\n\nexport default ParsingContext;\n\nfunction isConstant(expression: Expression) {\n    if (expression instanceof Var) {\n        return isConstant(expression.boundExpression);\n    } else if (expression instanceof CompoundExpression && expression.name === 'error') {\n        return false;\n    } else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    } else if (expression instanceof Within) {\n        return false;\n    }\n\n    const isTypeAnnotation = expression instanceof Coercion ||\n        expression instanceof Assertion;\n\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isConstant(child);\n        } else {\n            childrenConstant = childrenConstant && child instanceof Literal;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n\n    return isFeatureConstant(expression) &&\n        isGlobalPropertyConstant(expression, ['zoom', 'heatmap-density', 'line-progress', 'sky-radial-progress', 'accumulated', 'is-supported-script', 'pitch', 'distance-from-center']);\n}\n","// @flow\n\nimport RuntimeError from './runtime_error.js';\n\nimport type {Expression} from './expression.js';\n\nexport type Stops = Array<[number, Expression]>;\n\n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nexport function findStopLessThanOrEqualTo(stops: Array<number>, input: number): number {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) { // Search complete\n                return currentIndex;\n            }\n\n            lowerIndex = currentIndex + 1;\n        } else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        } else {\n            throw new RuntimeError('Input is not a number.');\n        }\n    }\n\n    return 0;\n}\n","// @flow\n\nimport {NumberType} from '../types.js';\n\nimport {findStopLessThanOrEqualTo} from '../stops.js';\n\nimport type {Stops} from '../stops.js';\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass Step implements Expression {\n    type: Type;\n\n    input: Expression;\n    labels: Array<number>;\n    outputs: Array<Expression>;\n\n    constructor(type: Type, input: Expression, stops: Stops) {\n        this.type = type;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Step {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input) return null;\n\n        const stops: Stops = [];\n\n        let outputType: Type = (null: any);\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n\n            const labelKey = i;\n            const valueKey = i + 1;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        return new Step(outputType, input, stops);\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx): any): number);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined(): boolean {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"step\", this.input.serialize()];\n        for (let i = 0; i < this.labels.length; i++) {\n            if (i > 0) {\n                serialized.push(this.labels[i]);\n            }\n            serialized.push(this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\n\nexport default Step;\n","/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * Ported from Webkit\n * http://svn.webkit.org/repository/webkit/trunk/Source/WebCore/platform/graphics/UnitBezier.h\n */\n\nmodule.exports = UnitBezier;\n\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n    this.cx = 3.0 * p1x;\n    this.bx = 3.0 * (p2x - p1x) - this.cx;\n    this.ax = 1.0 - this.cx - this.bx;\n\n    this.cy = 3.0 * p1y;\n    this.by = 3.0 * (p2y - p1y) - this.cy;\n    this.ay = 1.0 - this.cy - this.by;\n\n    this.p1x = p1x;\n    this.p1y = p2y;\n    this.p2x = p2x;\n    this.p2y = p2y;\n}\n\nUnitBezier.prototype.sampleCurveX = function(t) {\n    // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n    return ((this.ax * t + this.bx) * t + this.cx) * t;\n};\n\nUnitBezier.prototype.sampleCurveY = function(t) {\n    return ((this.ay * t + this.by) * t + this.cy) * t;\n};\n\nUnitBezier.prototype.sampleCurveDerivativeX = function(t) {\n    return (3.0 * this.ax * t + 2.0 * this.bx) * t + this.cx;\n};\n\nUnitBezier.prototype.solveCurveX = function(x, epsilon) {\n    if (typeof epsilon === 'undefined') epsilon = 1e-6;\n\n    var t0, t1, t2, x2, i;\n\n    // First try a few iterations of Newton's method -- normally very fast.\n    for (t2 = x, i = 0; i < 8; i++) {\n\n        x2 = this.sampleCurveX(t2) - x;\n        if (Math.abs(x2) < epsilon) return t2;\n\n        var d2 = this.sampleCurveDerivativeX(t2);\n        if (Math.abs(d2) < 1e-6) break;\n\n        t2 = t2 - x2 / d2;\n    }\n\n    // Fall back to the bisection method for reliability.\n    t0 = 0.0;\n    t1 = 1.0;\n    t2 = x;\n\n    if (t2 < t0) return t0;\n    if (t2 > t1) return t1;\n\n    while (t0 < t1) {\n\n        x2 = this.sampleCurveX(t2);\n        if (Math.abs(x2 - x) < epsilon) return t2;\n\n        if (x > x2) {\n            t0 = t2;\n        } else {\n            t1 = t2;\n        }\n\n        t2 = (t1 - t0) * 0.5 + t0;\n    }\n\n    // Failure.\n    return t2;\n};\n\nUnitBezier.prototype.solve = function(x, epsilon) {\n    return this.sampleCurveY(this.solveCurveX(x, epsilon));\n};\n","// @flow\n\nimport Color from './color.js';\n\nexport function number(a: number, b: number, t: number): number {\n    return (a * (1 - t)) + (b * t);\n}\n\nexport function color(from: Color, to: Color, t: number): Color {\n    return new Color(\n        number(from.r, to.r, t),\n        number(from.g, to.g, t),\n        number(from.b, to.b, t),\n        number(from.a, to.a, t)\n    );\n}\n\nexport function array(from: Array<number>, to: Array<number>, t: number): Array<number> {\n    return from.map((d, i) => {\n        return number(d, to[i], t);\n    });\n}\n","// @flow\n\nimport Color from './color.js';\n\nimport {number as interpolateNumber} from './interpolate.js';\n\ntype LABColor = {\n    l: number,\n    a: number,\n    b: number,\n    alpha: number\n};\n\ntype HCLColor = {\n    h: number,\n    c: number,\n    l: number,\n    alpha: number\n};\n\n// Constants\nconst Xn = 0.950470, // D65 standard referent\n    Yn = 1,\n    Zn = 1.088830,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1,\n    deg2rad = Math.PI / 180,\n    rad2deg = 180 / Math.PI;\n\n// Utilities\nfunction xyz2lab(t: number) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t: number) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x: number) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x: number) {\n    x /= 255;\n    return x <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\n// LAB\nfunction rgbToLab(rgbColor: Color): LABColor {\n    const b = rgb2xyz(rgbColor.r),\n        a = rgb2xyz(rgbColor.g),\n        l = rgb2xyz(rgbColor.b),\n        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\n    return {\n        l: 116 * y - 16,\n        a: 500 * (x - y),\n        b: 200 * (y - z),\n        alpha: rgbColor.a\n    };\n}\n\nfunction labToRgb(labColor: LABColor): Color {\n    let y = (labColor.l + 16) / 116,\n        x = isNaN(labColor.a) ? y : y + labColor.a / 500,\n        z = isNaN(labColor.b) ? y : y - labColor.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Color(\n        xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n        xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n        labColor.alpha\n    );\n}\n\nfunction interpolateLab(from: LABColor, to: LABColor, t: number): LABColor {\n    return {\n        l: interpolateNumber(from.l, to.l, t),\n        a: interpolateNumber(from.a, to.a, t),\n        b: interpolateNumber(from.b, to.b, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\n// HCL\nfunction rgbToHcl(rgbColor: Color): HCLColor {\n    const {l, a, b} = rgbToLab(rgbColor);\n    const h = Math.atan2(b, a) * rad2deg;\n    return {\n        h: h < 0 ? h + 360 : h,\n        c: Math.sqrt(a * a + b * b),\n        l,\n        alpha: rgbColor.a\n    };\n}\n\nfunction hclToRgb(hclColor: HCLColor): Color {\n    const h = hclColor.h * deg2rad,\n        c = hclColor.c,\n        l = hclColor.l;\n    return labToRgb({\n        l,\n        a: Math.cos(h) * c,\n        b: Math.sin(h) * c,\n        alpha: hclColor.alpha\n    });\n}\n\nfunction interpolateHue(a: number, b: number, t: number) {\n    const d = b - a;\n    return a + t * (d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d);\n}\n\nfunction interpolateHcl(from: HCLColor, to: HCLColor, t: number): HCLColor {\n    return {\n        h: interpolateHue(from.h, to.h, t),\n        c: interpolateNumber(from.c, to.c, t),\n        l: interpolateNumber(from.l, to.l, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\nexport const lab = {\n    forward: rgbToLab,\n    reverse: labToRgb,\n    interpolate: interpolateLab\n};\n\nexport const hcl = {\n    forward: rgbToHcl,\n    reverse: hclToRgb,\n    interpolate: interpolateHcl\n};\n","// @flow\n\nimport UnitBezier from '@mapbox/unitbezier';\n\nimport * as interpolate from '../../util/interpolate.js';\nimport {toString, NumberType, ColorType} from '../types.js';\nimport {findStopLessThanOrEqualTo} from '../stops.js';\nimport {hcl, lab} from '../../util/color_spaces.js';\nimport Color from '../../util/color.js';\n\nimport type {Stops} from '../stops.js';\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nexport type InterpolationType =\n    { name: 'linear' } |\n    { name: 'exponential', base: number } |\n    { name: 'cubic-bezier', controlPoints: [number, number, number, number] };\n\nclass Interpolate implements Expression {\n    type: Type;\n\n    operator: 'interpolate' | 'interpolate-hcl' | 'interpolate-lab';\n    interpolation: InterpolationType;\n    input: Expression;\n    labels: Array<number>;\n    outputs: Array<Expression>;\n\n    constructor(type: Type, operator: 'interpolate' | 'interpolate-hcl' | 'interpolate-lab', interpolation: InterpolationType, input: Expression, stops: Stops) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static interpolationFactor(interpolation: InterpolationType, input: number, lower: number, upper: number): number {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        } else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        } else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Interpolate {\n        let [operator, interpolation, input, ...rest] = args;\n\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error(`Expected an interpolation type expression.`, 1);\n        }\n\n        if (interpolation[0] === 'linear') {\n            interpolation = {name: 'linear'};\n        } else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error(`Exponential interpolation requires a numeric base.`, 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        } else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (\n                controlPoints.length !== 4 ||\n                controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)\n            ) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: (controlPoints: any)\n            };\n        } else {\n            return context.error(`Unknown interpolation type ${String(interpolation[0])}`, 1, 0);\n        }\n\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        input = context.parse(input, 2, NumberType);\n        if (!input) return null;\n\n        const stops: Stops = [];\n\n        let outputType: Type = (null: any);\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        } else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        if (outputType.kind !== 'number' &&\n            outputType.kind !== 'color' &&\n            !(\n                outputType.kind === 'array' &&\n                outputType.itemType.kind === 'number' &&\n                typeof outputType.N === 'number'\n            )\n        ) {\n            return context.error(`Type ${toString(outputType)} is not interpolatable.`);\n        }\n\n        return new Interpolate(outputType, (operator: any), interpolation, input, stops);\n    }\n\n    evaluate(ctx: EvaluationContext): Color {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx): any): number);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n\n        if (this.operator === 'interpolate') {\n            return (interpolate[this.type.kind.toLowerCase()]: any)(outputLower, outputUpper, t); // eslint-disable-line import/namespace\n        } else if (this.operator === 'interpolate-hcl') {\n            return hcl.reverse(hcl.interpolate(hcl.forward(outputLower), hcl.forward(outputUpper), t));\n        } else {\n            return lab.reverse(lab.interpolate(lab.forward(outputLower), lab.forward(outputUpper), t));\n        }\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined(): boolean {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize(): SerializedExpression {\n        let interpolation;\n        if (this.interpolation.name === 'linear') {\n            interpolation = [\"linear\"];\n        } else if (this.interpolation.name === 'exponential') {\n            if  (this.interpolation.base === 1) {\n                interpolation = [\"linear\"];\n            } else {\n                interpolation = [\"exponential\", this.interpolation.base];\n            }\n        } else {\n            interpolation = [\"cubic-bezier\" ].concat(this.interpolation.controlPoints);\n        }\n\n        const serialized = [this.operator, interpolation, this.input.serialize()];\n\n        for (let i = 0; i < this.labels.length; i++) {\n            serialized.push(\n                this.labels[i],\n                this.outputs[i].serialize()\n            );\n        }\n        return serialized;\n    }\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n\nexport default Interpolate;\n","// @flow\n\nimport assert from 'assert';\n\nimport {checkSubtype, ValueType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass Coalesce implements Expression {\n    type: Type;\n    args: Array<Expression>;\n\n    constructor(type: Type, args: Array<Expression>) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Coalesce {\n        if (args.length < 2) {\n            return context.error(\"Expectected at least one argument.\");\n        }\n        let outputType: Type = (null: any);\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, {typeAnnotation: 'omit'});\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        assert(outputType);\n\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType &&\n            parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n\n        return needsAnnotation ?\n            new Coalesce(ValueType, parsedArgs) :\n            new Coalesce((outputType: any), parsedArgs);\n    }\n\n    evaluate(ctx: EvaluationContext): any | null {\n        let result = null;\n        let argCount = 0;\n        let firstImage;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                // set to first image\n                if (!firstImage) {\n                    firstImage = result;\n                }\n                result = null;\n                // if we reach the end, return the first image\n                if (argCount === this.args.length) {\n                    return firstImage;\n                }\n            }\n\n            if (result !== null) break;\n        }\n        return result;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined(): boolean {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"coalesce\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coalesce;\n","// @flow\n\nimport type {Type} from '../types.js';\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext  from '../evaluation_context.js';\n\nclass Let implements Expression {\n    type: Type;\n    bindings: Array<[string, Expression]>;\n    result: Expression;\n\n    constructor(bindings: Array<[string, Expression]>, result: Expression) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        return this.result.evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Let {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${args.length - 1} instead.`);\n\n        const bindings: Array<[string, Expression]> = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${typeof name} instead.`, i);\n            }\n\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error(`Variable names must contain only alphanumeric characters or '_'.`, i);\n            }\n\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value) return null;\n\n            bindings.push([name, value]);\n        }\n\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result) return null;\n\n        return new Let(bindings, result);\n    }\n\n    outputDefined(): boolean {\n        return this.result.outputDefined();\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"let\"];\n        for (const [name, expr] of this.bindings) {\n            serialized.push(name, expr.serialize());\n        }\n        serialized.push(this.result.serialize());\n        return serialized;\n    }\n}\n\nexport default Let;\n","// @flow\n\nimport {array, ValueType, NumberType} from '../types.js';\n\nimport RuntimeError from '../runtime_error.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type, ArrayType} from '../types.js';\nimport type {Value} from '../values.js';\n\nclass At implements Expression {\n    type: Type;\n    index: Expression;\n    input: Expression;\n\n    constructor(type: Type, index: Expression, input: Expression) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?At {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array(context.expectedType || ValueType));\n\n        if (!index || !input) return null;\n\n        const t: ArrayType = (input.type: any);\n        return new At(t.itemType, index, input);\n    }\n\n    evaluate(ctx: EvaluationContext): Value {\n        const index = ((this.index.evaluate(ctx): any): number);\n        const array = ((this.input.evaluate(ctx): any): Array<Value>);\n\n        if (index < 0) {\n            throw new RuntimeError(`Array index out of bounds: ${index} < 0.`);\n        }\n\n        if (index >= array.length) {\n            throw new RuntimeError(`Array index out of bounds: ${index} > ${array.length - 1}.`);\n        }\n\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError(`Array index must be an integer, but found ${index} instead.`);\n        }\n\n        return array[index];\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.index);\n        fn(this.input);\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        return [\"at\", this.index.serialize(), this.input.serialize()];\n    }\n}\n\nexport default At;\n","// @flow\n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass In implements Expression {\n    type: Type;\n    needle: Expression;\n    haystack: Expression;\n\n    constructor(needle: Expression, haystack: Expression) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?In {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        return new In(needle, haystack);\n    }\n\n    evaluate(ctx: EvaluationContext): boolean {\n        const needle = (this.needle.evaluate(ctx): any);\n        const haystack = (this.haystack.evaluate(ctx): any);\n\n        if (haystack == null) return false;\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        return haystack.indexOf(needle) >= 0;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n\n    outputDefined(): boolean {\n        return true;\n    }\n\n    serialize(): SerializedExpression {\n        return [\"in\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default In;\n","// @flow\n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass IndexOf implements Expression {\n    type: Type;\n    needle: Expression;\n    haystack: Expression;\n    fromIndex: ?Expression;\n\n    constructor(needle: Expression, haystack: Expression, fromIndex?: Expression) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?IndexOf {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex) return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        } else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        const needle = (this.needle.evaluate(ctx): any);\n        const haystack = (this.haystack.evaluate(ctx): any);\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        if (this.fromIndex) {\n            const fromIndex = (this.fromIndex.evaluate(ctx): number);\n            return haystack.indexOf(needle, fromIndex);\n        }\n\n        return haystack.indexOf(needle);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        if (this.fromIndex != null && this.fromIndex !== undefined) {\n            const fromIndex = this.fromIndex.serialize();\n            return [\"index-of\", this.needle.serialize(), this.haystack.serialize(), fromIndex];\n        }\n        return [\"index-of\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default IndexOf;\n","// @flow\n\nimport assert from 'assert';\n\nimport {typeOf} from '../values.js';\nimport {ValueType, type Type} from '../types.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\n\n// Map input label values to output expression index\ntype Cases = {[number | string]: number};\n\nclass Match implements Expression {\n    type: Type;\n    inputType: Type;\n\n    input: Expression;\n    cases: Cases;\n    outputs: Array<Expression>;\n    otherwise: Expression;\n\n    constructor(inputType: Type, outputType: Type, input: Expression, cases: Cases, outputs: Array<Expression>, otherwise: Expression) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Match {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 1)\n            return context.error(`Expected an even number of arguments.`);\n\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error(`Branch labels must be numbers or strings.`);\n                } else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`);\n\n                } else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error(`Numeric branch labels must be integer values.`);\n\n                } else if (!inputType) {\n                    inputType = typeOf(label);\n                } else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n\n                cases[String(label)] = outputs.length;\n            }\n\n            const result = context.parse(value, i, outputType);\n            if (!result) return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input) return null;\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(inputType && outputType);\n\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype((inputType: any), input.type)) {\n            return null;\n        }\n\n        return new Match((inputType: any), (outputType: any), input, cases, outputs, otherwise);\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        const input = (this.input.evaluate(ctx): any);\n        const output = (typeOf(input) === this.inputType && this.outputs[this.cases[input]]) || this.otherwise;\n        return output.evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n\n    outputDefined(): boolean {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"match\", this.input.serialize()];\n\n        // Sort so serialization has an arbitrary defined order, even though\n        // branch order doesn't affect evaluation\n        const sortedLabels = Object.keys(this.cases).sort();\n\n        // Group branches by unique match expression to support condensed\n        // serializations of the form [case1, case2, ...] -> matchExpression\n        const groupedByOutput: Array<[number, Array<number | string>]> = [];\n        const outputLookup: {[index: number]: number} = {}; // lookup index into groupedByOutput for a given output expression\n        for (const label of sortedLabels) {\n            const outputIndex = outputLookup[this.cases[label]];\n            if (outputIndex === undefined) {\n                // First time seeing this output, add it to the end of the grouped list\n                outputLookup[this.cases[label]] = groupedByOutput.length;\n                groupedByOutput.push([this.cases[label], [label]]);\n            } else {\n                // We've seen this expression before, add the label to that output's group\n                groupedByOutput[outputIndex][1].push(label);\n            }\n        }\n\n        const coerceLabel = (label) => this.inputType.kind === 'number' ? Number(label) : label;\n\n        for (const [outputIndex, labels] of groupedByOutput) {\n            if (labels.length === 1) {\n                // Only a single label matches this output expression\n                serialized.push(coerceLabel(labels[0]));\n            } else {\n                // Array of literal labels pointing to this output expression\n                serialized.push(labels.map(coerceLabel));\n            }\n            serialized.push(this.outputs[outputIndex].serialize());\n        }\n        serialized.push(this.otherwise.serialize());\n        return serialized;\n    }\n}\n\nexport default Match;\n","// @flow\n\nimport assert from 'assert';\n\nimport {BooleanType} from '../types.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\ntype Branches = Array<[Expression, Expression]>;\n\nclass Case implements Expression {\n    type: Type;\n\n    branches: Branches;\n    otherwise: Expression;\n\n    constructor(type: Type, branches: Branches, otherwise: Expression) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Case {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 0)\n            return context.error(`Expected an odd number of arguments.`);\n\n        let outputType: ?Type;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test) return null;\n\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result) return null;\n\n            branches.push([test, result]);\n\n            outputType = outputType || result.type;\n        }\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(outputType);\n        return new Case((outputType: any), branches, otherwise);\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n\n    outputDefined(): boolean {\n        return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"case\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Case;\n","// @flow\n\nimport {ValueType, NumberType, StringType, array, toString, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass Slice implements Expression {\n    type: Type;\n    input: Expression;\n    beginIndex: Expression;\n    endIndex: ?Expression;\n\n    constructor(type: Type, input: Expression, beginIndex: Expression, endIndex?: Expression) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Slice {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n\n        if (!input || !beginIndex) return null;\n\n        if (!isValidType(input.type, [array(ValueType), StringType, ValueType])) {\n            return context.error(`Expected first argument to be of type array or string, but found ${toString(input.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex) return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        } else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        const input = (this.input.evaluate(ctx): any);\n        const beginIndex = (this.beginIndex.evaluate(ctx): number);\n\n        if (!isValidNativeType(input, ['string', 'array'])) {\n            throw new RuntimeError(`Expected first argument to be of type array or string, but found ${toString(typeOf(input))} instead.`);\n        }\n\n        if (this.endIndex) {\n            const endIndex = (this.endIndex.evaluate(ctx): number);\n            return input.slice(beginIndex, endIndex);\n        }\n\n        return input.slice(beginIndex);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        if (this.endIndex != null && this.endIndex !== undefined) {\n            const endIndex = this.endIndex.serialize();\n            return [\"slice\", this.input.serialize(), this.beginIndex.serialize(), endIndex];\n        }\n        return [\"slice\", this.input.serialize(), this.beginIndex.serialize()];\n    }\n}\n\nexport default Slice;\n","// @flow\n\nimport {toString, ValueType, BooleanType, CollatorType} from '../types.js';\nimport Assertion from './assertion.js';\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\nimport type {Expression, SerializedExpression, ExpressionRegistration} from '../expression.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type {Type} from '../types.js';\n\ntype ComparisonOperator = '==' | '!=' | '<' | '>' | '<=' | '>=' ;\n\nfunction isComparableType(op: ComparisonOperator, type: Type) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' ||\n            type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'null' ||\n            type.kind === 'value';\n    } else {\n        // ordering operator\n        return type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'value';\n    }\n}\n\nfunction eq(ctx: EvaluationContext, a: any, b: any): boolean { return a === b; }\nfunction neq(ctx: EvaluationContext, a: any, b: any): boolean { return a !== b; }\nfunction lt(ctx: EvaluationContext, a: any, b: any): boolean { return a < b; }\nfunction gt(ctx: EvaluationContext, a: any, b: any): boolean { return a > b; }\nfunction lteq(ctx: EvaluationContext, a: any, b: any): boolean { return a <= b; }\nfunction gteq(ctx: EvaluationContext, a: any, b: any): boolean { return a >= b; }\n\nfunction eqCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return c.compare(a, b) === 0; }\nfunction neqCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return !eqCollate(ctx, a, b, c); }\nfunction ltCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return c.compare(a, b) < 0; }\nfunction gtCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return c.compare(a, b) > 0; }\nfunction lteqCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return c.compare(a, b) <= 0; }\nfunction gteqCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return c.compare(a, b) >= 0; }\n\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op: ComparisonOperator, compareBasic: (EvaluationContext, any, any) => boolean, compareWithCollator: (EvaluationContext, any, any, any) => boolean): ExpressionRegistration {\n    const isOrderComparison = op !== '==' && op !== '!=';\n\n    return class Comparison implements Expression {\n        type: Type;\n        lhs: Expression;\n        rhs: Expression;\n        collator: ?Expression;\n        hasUntypedArgument: boolean;\n\n        constructor(lhs: Expression, rhs: Expression, collator: ?Expression) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n\n        static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error(`Expected two or three arguments.`);\n\n            const op: ComparisonOperator = (args[0]: any);\n\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs) return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${op}\" comparisons are not supported for type '${toString(lhs.type)}'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs) return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${op}\" comparisons are not supported for type '${toString(rhs.type)}'.`);\n            }\n\n            if (\n                lhs.type.kind !== rhs.type.kind &&\n                lhs.type.kind !== 'value' &&\n                rhs.type.kind !== 'value'\n            ) {\n                return context.error(`Cannot compare types '${toString(lhs.type)}' and '${toString(rhs.type)}'.`);\n            }\n\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion(rhs.type, [lhs]);\n                } else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion(lhs.type, [rhs]);\n                }\n            }\n\n            let collator = null;\n            if (args.length === 4) {\n                if (\n                    lhs.type.kind !== 'string' &&\n                    rhs.type.kind !== 'string' &&\n                    lhs.type.kind !== 'value' &&\n                    rhs.type.kind !== 'value'\n                ) {\n                    return context.error(`Cannot use collator to compare non-string types.`);\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator) return null;\n            }\n\n            return new Comparison(lhs, rhs, collator);\n        }\n\n        evaluate(ctx: EvaluationContext): boolean {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError(`Expected arguments for \"${op}\" to be (string, string) or (number, number), but found (${lt.kind}, ${rt.kind}) instead.`);\n                }\n            }\n\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n\n            return this.collator ?\n                compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) :\n                compareBasic(ctx, lhs, rhs);\n        }\n\n        eachChild(fn: (_: Expression) => void) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n\n        outputDefined(): boolean {\n            return true;\n        }\n\n        serialize(): SerializedExpression {\n            const serialized = [op];\n            this.eachChild(child => { serialized.push(child.serialize()); });\n            return serialized;\n        }\n    };\n}\n\nexport const Equals: $Call<typeof makeComparison, '==', typeof eq, typeof eqCollate> = makeComparison('==', eq, eqCollate);\nexport const NotEquals: $Call<typeof makeComparison, '!=', typeof neq, typeof neqCollate> = makeComparison('!=', neq, neqCollate);\nexport const LessThan: $Call<typeof makeComparison, '<', typeof lt, typeof ltCollate> = makeComparison('<', lt, ltCollate);\nexport const GreaterThan: $Call<typeof makeComparison, '>', typeof gt, typeof gtCollate> = makeComparison('>', gt, gtCollate);\nexport const LessThanOrEqual: $Call<typeof makeComparison, '<=', typeof lteq, typeof lteqCollate> = makeComparison('<=', lteq, lteqCollate);\nexport const GreaterThanOrEqual: $Call<typeof makeComparison, '>=', typeof gteq, typeof gteqCollate> = makeComparison('>=', gteq, gteqCollate);\n","// @flow\n\nimport {StringType, NumberType} from '../types.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type {Type} from '../types.js';\n\ndeclare var Intl: {\n    NumberFormat: Class<Intl$NumberFormat>\n};\n\ndeclare class Intl$NumberFormat {\n    constructor (\n        locales?: string | string[],\n        options?: NumberFormatOptions\n    ): Intl$NumberFormat;\n\n    static (\n        locales?: string | string[],\n        options?: NumberFormatOptions\n    ): Intl$NumberFormat;\n\n    format(a: number): string;\n\n    resolvedOptions(): any;\n}\n\ntype NumberFormatOptions = {\n    style?: 'decimal' | 'currency' | 'percent';\n    currency?: null | string;\n    minimumFractionDigits?: null | string;\n    maximumFractionDigits?: null | string;\n};\n\nexport default class NumberFormat implements Expression {\n    type: Type;\n    number: Expression;\n    locale: Expression | null;   // BCP 47 language tag\n    currency: Expression | null; // ISO 4217 currency code, required if style=currency\n    minFractionDigits: Expression | null; // Default 0\n    maxFractionDigits: Expression | null; // Default 3\n\n    constructor(number: Expression,\n                locale: Expression | null,\n                currency: Expression | null,\n                minFractionDigits: Expression | null,\n                maxFractionDigits: Expression | null) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length !== 3)\n            return context.error(`Expected two arguments.`);\n\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number) return null;\n\n        const options = (args[2]: any);\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`NumberFormat options argument must be an object.`);\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency) return null;\n        }\n\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits) return null;\n        }\n\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits) return null;\n        }\n\n        return new NumberFormat(number, locale, currency, minFractionDigits, maxFractionDigits);\n    }\n\n    evaluate(ctx: EvaluationContext): string {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [],\n            {\n                style: this.currency ? \"currency\" : \"decimal\",\n                currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n                minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n                maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined,\n            }).format(this.number.evaluate(ctx));\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        const options = {};\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        if (this.currency) {\n            options['currency'] = this.currency.serialize();\n        }\n        if (this.minFractionDigits) {\n            options['min-fraction-digits'] = this.minFractionDigits.serialize();\n        }\n        if (this.maxFractionDigits) {\n            options['max-fraction-digits'] = this.maxFractionDigits.serialize();\n        }\n        return [\"number-format\", this.number.serialize(), options];\n    }\n}\n","// @flow\n\nimport {NumberType, toString} from '../types.js';\n\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass Length implements Expression {\n    type: Type;\n    input: Expression;\n\n    constructor(input: Expression) {\n        this.type = NumberType;\n        this.input = input;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Length {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${args.length - 1} instead.`);\n\n        const input = context.parse(args[1], 1);\n        if (!input) return null;\n\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${toString(input.type)} instead.`);\n\n        return new Length(input);\n    }\n\n    evaluate(ctx: EvaluationContext): any | number {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            return input.length;\n        } else if (Array.isArray(input)) {\n            return input.length;\n        } else {\n            throw new RuntimeError(`Expected value to be of type string or array, but found ${toString(typeOf(input))} instead.`);\n        }\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"length\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Length;\n","// @flow\n\nimport {\n    type Type,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    ObjectType,\n    ValueType,\n    ErrorType,\n    CollatorType,\n    array,\n    toString as typeToString\n} from '../types.js';\n\nimport {typeOf, Color, validateRGBA, toString as valueToString} from '../values.js';\nimport CompoundExpression from '../compound_expression.js';\nimport RuntimeError from '../runtime_error.js';\nimport Let from './let.js';\nimport Var from './var.js';\nimport Literal from './literal.js';\nimport Assertion from './assertion.js';\nimport Coercion from './coercion.js';\nimport At from './at.js';\nimport In from './in.js';\nimport IndexOf from './index_of.js';\nimport Match from './match.js';\nimport Case from './case.js';\nimport Slice from './slice.js';\nimport Step from './step.js';\nimport Interpolate from './interpolate.js';\nimport Coalesce from './coalesce.js';\nimport {\n    Equals,\n    NotEquals,\n    LessThan,\n    GreaterThan,\n    LessThanOrEqual,\n    GreaterThanOrEqual\n} from './comparison.js';\nimport CollatorExpression from './collator.js';\nimport NumberFormat from './number_format.js';\nimport FormatExpression from './format.js';\nimport ImageExpression from './image.js';\nimport Length from './length.js';\nimport Within from './within.js';\n\nimport type {Varargs} from '../compound_expression.js';\nimport type {ExpressionRegistry} from '../expression.js';\n\nconst expressions: ExpressionRegistry = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion,\n    'at': At,\n    'boolean': Assertion,\n    'case': Case,\n    'coalesce': Coalesce,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In,\n    'index-of': IndexOf,\n    'interpolate': Interpolate,\n    'interpolate-hcl': Interpolate,\n    'interpolate-lab': Interpolate,\n    'length': Length,\n    'let': Let,\n    'literal': Literal,\n    'match': Match,\n    'number': Assertion,\n    'number-format': NumberFormat,\n    'object': Assertion,\n    'slice': Slice,\n    'step': Step,\n    'string': Assertion,\n    'to-boolean': Coercion,\n    'to-color': Coercion,\n    'to-number': Coercion,\n    'to-string': Coercion,\n    'var': Var,\n    'within': Within\n};\n\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error) throw new RuntimeError(error);\n    return new Color(r / 255 * alpha, g / 255 * alpha, b / 255 * alpha, alpha);\n}\n\nfunction has(key, obj) {\n    return key in obj;\n}\n\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\n\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = (i + j) >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\n\nfunction varargs(type: Type): Varargs {\n    return {type};\n}\n\nCompoundExpression.register(expressions, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => { throw new RuntimeError(v.evaluate(ctx)); }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => typeToString(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            return v.evaluate(ctx).toArray();\n        }\n    ],\n    'rgb': [\n        ColorType,\n        [NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [NumberType, NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        (ctx) => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        (ctx) => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        (ctx) => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.zoom\n    ],\n    'pitch': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.pitch || 0\n    ],\n    'distance-from-center': [\n        NumberType,\n        [],\n        (ctx) => ctx.distanceFromCenter()\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.lineProgress || 0\n    ],\n    'sky-radial-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.skyRadialProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        (ctx) => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [NumberType, NumberType],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ], [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => ctx.properties()[(k: any).value] === (v: any).value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === (v: any).value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === (v: any).value\n    ],\n    'filter-<': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => (k: any).value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        (ctx) => (ctx.id() !== null && ctx.id() !== undefined)\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array(StringType)],\n        (ctx, [v]) => (v: any).value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array(ValueType)],\n        (ctx, [v]) => (v: any).value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is an array literal\n        (ctx, [k, v]) => (v: any).value.indexOf(ctx.properties()[(k: any).value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[(k: any).value], (v: any).value, 0, (v: any).value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => valueToString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\n\nexport default expressions;\n","// @flow\n\n/**\n * A type used for returning and propagating errors. The first element of the union\n * represents success and contains a value, and the second represents an error and\n * contains an error value.\n * @private\n */\nexport type Result<T, E> =\n    | {| result: 'success', value: T |}\n    | {| result: 'error', value: E |};\n\nexport function success<T, E>(value: T): Result<T, E> {\n    return {result: 'success', value};\n}\n\nexport function error<T, E>(value: E): Result<T, E> {\n    return {result: 'error', value};\n}\n","// @flow\n\nimport type {StylePropertySpecification} from '../style-spec.js';\n\nexport function supportsPropertyExpression(spec: StylePropertySpecification): boolean {\n    return spec['property-type'] === 'data-driven' || spec['property-type'] === 'cross-faded-data-driven';\n}\n\nexport function supportsZoomExpression(spec: StylePropertySpecification): boolean {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\n\nexport function supportsInterpolation(spec: StylePropertySpecification): boolean {\n    return !!spec.expression && spec.expression.interpolated;\n}\n","// @flow\n\nexport default function getType(val: mixed): string {\n    if (val instanceof Number) {\n        return 'number';\n    } else if (val instanceof String) {\n        return 'string';\n    } else if (val instanceof Boolean) {\n        return 'boolean';\n    } else if (Array.isArray(val)) {\n        return 'array';\n    } else if (val === null) {\n        return 'null';\n    } else {\n        return typeof val;\n    }\n}\n","\nimport * as colorSpaces from '../util/color_spaces.js';\nimport Color from '../util/color.js';\nimport extend from '../util/extend.js';\nimport getType from '../util/get_type.js';\nimport * as interpolate from '../util/interpolate.js';\nimport Interpolate from '../expression/definitions/interpolate.js';\nimport Formatted from '../expression/types/formatted.js';\nimport ResolvedImage from '../expression/types/resolved_image.js';\nimport {supportsInterpolation} from '../util/properties.js';\nimport {findStopLessThanOrEqualTo} from '../expression/stops.js';\n\nexport function isFunction(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nfunction identityFunction(x) {\n    return x;\n}\n\nexport function createFunction(parameters, propertySpec) {\n    const isColor = propertySpec.type === 'color';\n    const zoomAndFeatureDependent = parameters.stops && typeof parameters.stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    const type = parameters.type || (supportsInterpolation(propertySpec) ? 'exponential' : 'interval');\n\n    if (isColor) {\n        parameters = extend({}, parameters);\n\n        if (parameters.stops) {\n            parameters.stops = parameters.stops.map((stop) => {\n                return [stop[0], Color.parse(stop[1])];\n            });\n        }\n\n        if (parameters.default) {\n            parameters.default = Color.parse(parameters.default);\n        } else {\n            parameters.default = Color.parse(propertySpec.default);\n        }\n    }\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb' && !colorSpaces[parameters.colorSpace]) { // eslint-disable-line import/namespace\n        throw new Error(`Unknown color space: ${parameters.colorSpace}`);\n    }\n\n    let innerFun;\n    let hashedStops;\n    let categoricalKeyType;\n    if (type === 'exponential') {\n        innerFun = evaluateExponentialFunction;\n    } else if (type === 'interval') {\n        innerFun = evaluateIntervalFunction;\n    } else if (type === 'categorical') {\n        innerFun = evaluateCategoricalFunction;\n\n        // For categorical functions, generate an Object as a hashmap of the stops for fast searching\n        hashedStops = Object.create(null);\n        for (const stop of parameters.stops) {\n            hashedStops[stop[0]] = stop[1];\n        }\n\n        // Infer key type based on first stop key-- used to encforce strict type checking later\n        categoricalKeyType = typeof parameters.stops[0][0];\n\n    } else if (type === 'identity') {\n        innerFun = evaluateIdentityFunction;\n    } else {\n        throw new Error(`Unknown function type \"${type}\"`);\n    }\n\n    if (zoomAndFeatureDependent) {\n        const featureFunctions = {};\n        const zoomStops = [];\n        for (let s = 0; s < parameters.stops.length; s++) {\n            const stop = parameters.stops[s];\n            const zoom = stop[0].zoom;\n            if (featureFunctions[zoom] === undefined) {\n                featureFunctions[zoom] = {\n                    zoom,\n                    type: parameters.type,\n                    property: parameters.property,\n                    default: parameters.default,\n                    stops: []\n                };\n                zoomStops.push(zoom);\n            }\n            featureFunctions[zoom].stops.push([stop[0].value, stop[1]]);\n        }\n\n        const featureFunctionStops = [];\n        for (const z of zoomStops) {\n            featureFunctionStops.push([featureFunctions[z].zoom, createFunction(featureFunctions[z], propertySpec)]);\n        }\n\n        const interpolationType = {name: 'linear'};\n        return {\n            kind: 'composite',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: featureFunctionStops.map(s => s[0]),\n            evaluate({zoom}, properties) {\n                return evaluateExponentialFunction({\n                    stops: featureFunctionStops,\n                    base: parameters.base\n                }, propertySpec, zoom).evaluate(zoom, properties);\n            }\n        };\n    } else if (zoomDependent) {\n        const interpolationType = type === 'exponential' ?\n            {name: 'exponential', base: parameters.base !== undefined ? parameters.base : 1} : null;\n        return {\n            kind: 'camera',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: parameters.stops.map(s => s[0]),\n            evaluate: ({zoom}) => innerFun(parameters, propertySpec, zoom, hashedStops, categoricalKeyType)\n        };\n    } else {\n        return {\n            kind: 'source',\n            evaluate(_, feature) {\n                const value = feature && feature.properties ? feature.properties[parameters.property] : undefined;\n                if (value === undefined) {\n                    return coalesce(parameters.default, propertySpec.default);\n                }\n                return innerFun(parameters, propertySpec, value, hashedStops, categoricalKeyType);\n            }\n        };\n    }\n}\n\nfunction coalesce(a, b, c) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n    if (c !== undefined) return c;\n}\n\nfunction evaluateCategoricalFunction(parameters, propertySpec, input, hashedStops, keyType) {\n    const evaluated = typeof input === keyType ? hashedStops[input] : undefined; // Enforce strict typing on input\n    return coalesce(evaluated, parameters.default, propertySpec.default);\n}\n\nfunction evaluateIntervalFunction(parameters, propertySpec, input) {\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n\n    return parameters.stops[index][1];\n}\n\nfunction evaluateExponentialFunction(parameters, propertySpec, input) {\n    const base = parameters.base !== undefined ? parameters.base : 1;\n\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    const t = interpolationFactor(\n        input, base,\n        parameters.stops[index][0],\n        parameters.stops[index + 1][0]);\n\n    const outputLower = parameters.stops[index][1];\n    const outputUpper = parameters.stops[index + 1][1];\n    let interp = interpolate[propertySpec.type] || identityFunction; // eslint-disable-line import/namespace\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb') {\n        const colorspace = colorSpaces[parameters.colorSpace]; // eslint-disable-line import/namespace\n        interp = (a, b) => colorspace.reverse(colorspace.interpolate(colorspace.forward(a), colorspace.forward(b), t));\n    }\n\n    if (typeof outputLower.evaluate === 'function') {\n        return {\n            evaluate(...args) {\n                const evaluatedLower = outputLower.evaluate.apply(undefined, args);\n                const evaluatedUpper = outputUpper.evaluate.apply(undefined, args);\n                // Special case for fill-outline-color, which has no spec default.\n                if (evaluatedLower === undefined || evaluatedUpper === undefined) {\n                    return undefined;\n                }\n                return interp(evaluatedLower, evaluatedUpper, t);\n            }\n        };\n    }\n\n    return interp(outputLower, outputUpper, t);\n}\n\nfunction evaluateIdentityFunction(parameters, propertySpec, input) {\n    if (propertySpec.type === 'color') {\n        input = Color.parse(input);\n    } else if (propertySpec.type === 'formatted') {\n        input = Formatted.fromString(input.toString());\n    } else if (propertySpec.type === 'resolvedImage') {\n        input = ResolvedImage.fromString(input.toString());\n    } else if (getType(input) !== propertySpec.type && (propertySpec.type !== 'enum' || !propertySpec.values[input])) {\n        input = undefined;\n    }\n    return coalesce(input, parameters.default, propertySpec.default);\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n *\n * How it works:\n * Two consecutive stop values define a (scaled and shifted) exponential\n * function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n */\nfunction interpolationFactor(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n","// @flow\n\nimport assert from 'assert';\n\nimport extend from '../util/extend.js';\nimport ParsingError from './parsing_error.js';\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport Step from './definitions/step.js';\nimport Interpolate from './definitions/interpolate.js';\nimport Coalesce from './definitions/coalesce.js';\nimport Let from './definitions/let.js';\nimport definitions from './definitions/index.js';\nimport * as isConstant from './is_constant.js';\nimport RuntimeError from './runtime_error.js';\nimport {success, error} from '../util/result.js';\nimport {supportsPropertyExpression, supportsZoomExpression, supportsInterpolation} from '../util/properties.js';\n\nimport type {Type, EvaluationKind} from './types.js';\nimport type {Value} from './values.js';\nimport type {Expression} from './expression.js';\nimport type {StylePropertySpecification} from '../style-spec.js';\nimport type {Result} from '../util/result.js';\nimport type {InterpolationType} from './definitions/interpolate.js';\nimport type {PropertyValueSpecification} from '../types.js';\nimport type {FormattedSection} from './types/formatted.js';\nimport type Point from '@mapbox/point-geometry';\nimport type {CanonicalTileID} from '../../source/tile_id.js';\nimport type {FeatureDistanceData} from '../feature_filter/index.js';\n\nexport type Feature = {\n    +type: 1 | 2 | 3 | 'Unknown' | 'Point' | 'MultiPoint' | 'LineString' | 'MultiLineString' | 'Polygon' | 'MultiPolygon',\n    +id?: number | null,\n    +properties: {[_: string]: any},\n    +patterns?: {[_: string]: {\"min\": string, \"mid\": string, \"max\": string}},\n    +geometry?: Array<Array<Point>>\n};\n\nexport type FeatureState = {[_: string]: any};\n\nexport type GlobalProperties = $ReadOnly<{\n    zoom: number,\n    pitch?: number,\n    heatmapDensity?: number,\n    lineProgress?: number,\n    skyRadialProgress?: number,\n    isSupportedScript?: (_: string) => boolean,\n    accumulated?: Value\n}>;\n\nexport class StyleExpression {\n    expression: Expression;\n\n    _evaluator: EvaluationContext;\n    _defaultValue: Value;\n    _warningHistory: {[key: string]: boolean};\n    _enumValues: ?{[_: string]: any};\n\n    constructor(expression: Expression, propertySpec: ?StylePropertySpecification) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n\n    evaluateWithoutErrorHandling(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection, featureTileCoord?: Point, featureDistanceData?: FeatureDistanceData): any {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n\n        return this.expression.evaluate(this._evaluator);\n    }\n\n    evaluate(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection, featureTileCoord?: Point, featureDistanceData?: FeatureDistanceData): any {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            // eslint-disable-next-line no-self-compare\n            if (val === null || val === undefined || (typeof val === 'number' && val !== val)) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError(`Expected value to be one of ${Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ')}, but found ${JSON.stringify(val)} instead.`);\n            }\n            return val;\n        } catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\n\nexport function isExpression(expression: mixed): boolean {\n    return Array.isArray(expression) && expression.length > 0 &&\n        typeof expression[0] === 'string' && expression[0] in definitions;\n}\n\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nexport function createExpression(expression: mixed, propertySpec: ?StylePropertySpecification): Result<StyleExpression, Array<ParsingError>> {\n    const parser = new ParsingContext(definitions, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined,\n        propertySpec && propertySpec.type === 'string' ? {typeAnnotation: 'coerce'} : undefined);\n\n    if (!parsed) {\n        assert(parser.errors.length > 0);\n        return error(parser.errors);\n    }\n\n    return success(new StyleExpression(parsed, propertySpec));\n}\n\nexport class ZoomConstantExpression<Kind: EvaluationKind> {\n    kind: Kind;\n    isStateDependent: boolean;\n    _styleExpression: StyleExpression;\n\n    constructor(kind: Kind, expression: StyleExpression) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('constant': EvaluationKind) && !isConstant.isStateConstant(expression.expression);\n    }\n\n    evaluateWithoutErrorHandling(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n}\n\nexport class ZoomDependentExpression<Kind: EvaluationKind> {\n    kind: Kind;\n    zoomStops: Array<number>;\n    isStateDependent: boolean;\n\n    _styleExpression: StyleExpression;\n    interpolationType: ?InterpolationType;\n\n    constructor(kind: Kind, expression: StyleExpression, zoomStops: Array<number>, interpolationType?: InterpolationType) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('camera': EvaluationKind) && !isConstant.isStateConstant(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n\n    evaluateWithoutErrorHandling(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    interpolationFactor(input: number, lower: number, upper: number): number {\n        if (this.interpolationType) {\n            return Interpolate.interpolationFactor(this.interpolationType, input, lower, upper);\n        } else {\n            return 0;\n        }\n    }\n}\n\nexport type ConstantExpression = {\n    kind: 'constant',\n    +evaluate: (globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>) => any,\n}\n\nexport type SourceExpression = {\n    kind: 'source',\n    isStateDependent: boolean,\n    +evaluate: (globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection) => any,\n};\n\nexport type CameraExpression = {\n    kind: 'camera',\n    +evaluate: (globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>) => any,\n    +interpolationFactor: (input: number, lower: number, upper: number) => number,\n    zoomStops: Array<number>,\n    interpolationType: ?InterpolationType\n};\n\nexport type CompositeExpression = {\n    kind: 'composite',\n    isStateDependent: boolean,\n    +evaluate: (globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection) => any,\n    +interpolationFactor: (input: number, lower: number, upper: number) => number,\n    zoomStops: Array<number>,\n    interpolationType: ?InterpolationType\n};\n\nexport type StylePropertyExpression =\n    | ConstantExpression\n    | SourceExpression\n    | CameraExpression\n    | CompositeExpression;\n\nexport function createPropertyExpression(expression: mixed, propertySpec: StylePropertySpecification): Result<StylePropertyExpression, Array<ParsingError>> {\n    expression = createExpression(expression, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n\n    const parsed = expression.value.expression;\n\n    const isFeatureConstant = isConstant.isFeatureConstant(parsed);\n    if (!isFeatureConstant && !supportsPropertyExpression(propertySpec)) {\n        return error([new ParsingError('', 'data expressions not supported')]);\n    }\n\n    const isZoomConstant = isConstant.isGlobalPropertyConstant(parsed, ['zoom', 'pitch', 'distance-from-center']);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ParsingError('', 'zoom expressions not supported')]);\n    }\n\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    } else if (zoomCurve instanceof ParsingError) {\n        return error([zoomCurve]);\n    } else if (zoomCurve instanceof Interpolate && !supportsInterpolation(propertySpec)) {\n        return error([new ParsingError('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n\n    if (!zoomCurve) {\n        return success(isFeatureConstant ?\n            (new ZoomConstantExpression('constant', expression.value): ConstantExpression) :\n            (new ZoomConstantExpression('source', expression.value): SourceExpression));\n    }\n\n    const interpolationType = zoomCurve instanceof Interpolate ? zoomCurve.interpolation : undefined;\n\n    return success(isFeatureConstant ?\n        (new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType): CameraExpression) :\n        (new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType): CompositeExpression));\n}\n\nimport {isFunction, createFunction} from '../function/index.js';\nimport {Color} from './values.js';\n\n// serialization wrapper for old-style stop functions normalized to the\n// expression interface\nexport class StylePropertyFunction<T> {\n    _parameters: PropertyValueSpecification<T>;\n    _specification: StylePropertySpecification;\n\n    kind: EvaluationKind;\n    evaluate: (globals: GlobalProperties, feature?: Feature) => any;\n    interpolationFactor: ?(input: number, lower: number, upper: number) => number;\n    zoomStops: ?Array<number>;\n\n    constructor(parameters: PropertyValueSpecification<T>, specification: StylePropertySpecification) {\n        this._parameters = parameters;\n        this._specification = specification;\n        extend(this, createFunction(this._parameters, this._specification));\n    }\n\n    static deserialize(serialized: {_parameters: PropertyValueSpecification<T>, _specification: StylePropertySpecification}): StylePropertyFunction<T> {\n        return new StylePropertyFunction(serialized._parameters, serialized._specification);\n    }\n\n    static serialize(input: StylePropertyFunction<T>): {_parameters: PropertyValueSpecification<T>, _specification: StylePropertySpecification} {\n        return {\n            _parameters: input._parameters,\n            _specification: input._specification\n        };\n    }\n}\n\nexport function normalizePropertyExpression<T>(value: PropertyValueSpecification<T>, specification: StylePropertySpecification): StylePropertyExpression {\n    if (isFunction(value)) {\n        return (new StylePropertyFunction(value, specification): any);\n\n    } else if (isExpression(value)) {\n        const expression = createPropertyExpression(value, specification);\n        if (expression.result === 'error') {\n            // this should have been caught in validation\n            throw new Error(expression.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        }\n        return expression.value;\n\n    } else {\n        let constant: any = value;\n        if (typeof value === 'string' && specification.type === 'color') {\n            constant = Color.parse(value);\n        }\n        return {\n            kind: 'constant',\n            evaluate: () => constant\n        };\n    }\n}\n\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression: Expression): Step | Interpolate | ParsingError | null {\n    let result = null;\n    if (expression instanceof Let) {\n        result = findZoomCurve(expression.result);\n\n    } else if (expression instanceof Coalesce) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n\n    } else if ((expression instanceof Step || expression instanceof Interpolate) &&\n        expression.input instanceof CompoundExpression &&\n        expression.input.name === 'zoom') {\n\n        result = expression;\n    }\n\n    if (result instanceof ParsingError) {\n        return result;\n    }\n\n    expression.eachChild((child) => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ParsingError) {\n            result = childResult;\n        } else if (!result && childResult) {\n            result = new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        } else if (result && childResult && result !== childResult) {\n            result = new ParsingError('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n\n    return result;\n}\n\nimport {ColorType, StringType, NumberType, BooleanType, ValueType, FormattedType, ResolvedImageType, array} from './types.js';\n\nfunction getExpectedType(spec: StylePropertySpecification): Type {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        resolvedImage: ResolvedImageType\n    };\n\n    if (spec.type === 'array') {\n        return array(types[spec.value] || ValueType, spec.length);\n    }\n\n    return types[spec.type];\n}\n\nfunction getDefaultValue(spec: StylePropertySpecification): Value {\n    if (spec.type === 'color' && (isFunction(spec.default) || Array.isArray(spec.default))) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color(0, 0, 0, 0);\n    } else if (spec.type === 'color') {\n        return Color.parse(spec.default) || null;\n    } else if (spec.default === undefined) {\n        return null;\n    } else {\n        return spec.default;\n    }\n}\n","// @flow\n\nimport assert from 'assert';\n\nimport type {StylePropertySpecification} from '../style-spec.js';\nimport type {ExpressionSpecification} from '../types.js';\n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? ['literal', value] : value;\n}\n\nexport default function convertFunction(parameters: any, propertySpec: StylePropertySpecification): ExpressionSpecification {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n\n    stops = stops.map((stop) => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [stop[0], convertTokenString(stop[1])];\n        }\n        return [stop[0], convertLiteral(stop[1])];\n    });\n\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    } else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    } else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\n\nfunction convertIdentityFunction(parameters, propertySpec): Array<mixed> {\n    const get = ['get', parameters.property];\n\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? ['string', get] : get;\n    } else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    } else {\n        const expression = [propertySpec.type === 'color' ? 'to-color' : propertySpec.type, get, convertLiteral(parameters.default)];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\n\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n    case 'hcl': return 'interpolate-hcl';\n    case 'lab': return 'interpolate-lab';\n    default: return 'interpolate';\n    }\n}\n\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default,\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([stop[0].value, stop[1]]);\n    }\n\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [getInterpolateOperator(parameters), ['linear'], ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n\n        return expression;\n    } else {\n        const expression = ['step', ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n\n        fixupDegenerateStepCurve(expression);\n\n        return expression;\n    }\n}\n\nfunction coalesce(a, b) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n}\n\nfunction getFallback(parameters, propertySpec) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\n\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = ['get', parameters.property];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        assert(parameters.stops.length > 0 && parameters.stops.length <= 2);\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push(['==', get, stop[0]], stop[1]);\n        }\n\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'categorical') {\n        const expression = ['match', get];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'interval') {\n        const expression = ['step', ['number', get]];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? [\"linear\"] : [\"exponential\", base],\n            [\"number\", get]\n        ];\n\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else {\n        throw new Error(`Unknown property function type ${type}`);\n    }\n}\n\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = ['step', input];\n        isStep = true;\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [getInterpolateOperator(parameters), base === 1 ? [\"linear\"] : [\"exponential\", base], input];\n\n    } else {\n        throw new Error(`Unknown zoom function type \"${type}\"`);\n    }\n\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n\n    fixupDegenerateStepCurve(expression);\n\n    return expression;\n}\n\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\n\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\n\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    } else {\n        assert(propertySpec.expression);\n        return (propertySpec.expression: any).interpolated ? 'exponential' : 'interval';\n    }\n}\n\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nexport function convertTokenString(s: string): string | ExpressionSpecification {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0) result.push(literal);\n        result.push(['get', match[1]]);\n    }\n\n    if (result.length === 1) {\n        return s;\n    }\n\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    } else if (result.length === 2) {\n        return ['to-string', result[1]];\n    }\n\n    return result;\n}\n\n","// @flow\n\n// Turn jsonlint-lines-primitives objects into primitive objects\nexport function unbundle(value: mixed): mixed {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    } else {\n        return value;\n    }\n}\n\nexport function deepUnbundle(value: mixed): mixed {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    } else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue: { [key: string]: mixed } = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n\n    return unbundle(value);\n}\n","// @flow\n\nimport {createExpression} from '../expression/index.js';\nimport {isFeatureConstant} from '../expression/is_constant.js';\nimport {deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport latest from '../reference/latest.js';\nimport type {GlobalProperties, Feature} from '../expression/index.js';\nimport type {CanonicalTileID} from '../../source/tile_id.js';\nimport type Point from '@mapbox/point-geometry';\n\nexport type FeatureDistanceData = {bearing: [number, number], center: [number, number], scale: number};\nexport type FilterExpression = (globalProperties: GlobalProperties, feature: Feature, canonical?: CanonicalTileID, featureTileCoord?: Point, featureDistanceData?: FeatureDistanceData) => boolean;\nexport type FeatureFilter = {filter: FilterExpression, dynamicFilter?: FilterExpression, needGeometry: boolean, needFeature: boolean};\n\nexport default createFilter;\nexport {isExpressionFilter, isDynamicFilter, extractStaticFilter};\n\nfunction isExpressionFilter(filter: any): boolean {\n    if (filter === true || filter === false) {\n        return true;\n    }\n\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n    case 'has':\n        return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n\n    case 'in':\n        return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n\n    case '!in':\n    case '!has':\n    case 'none':\n        return false;\n\n    case '==':\n    case '!=':\n    case '>':\n    case '>=':\n    case '<':\n    case '<=':\n        return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n\n    case 'any':\n    case 'all':\n        for (const f of filter.slice(1)) {\n            if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                return false;\n            }\n        }\n        return true;\n\n    default:\n        return true;\n    }\n}\n\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter mapbox gl filter\n * @param {string} layerType the type of the layer this filter will be applied to.\n * @returns {Function} filter-evaluating function\n */\nfunction createFilter(filter: any, layerType?: string = 'fill'): FeatureFilter {\n    if (filter === null || filter === undefined) {\n        return {filter: () => true, needGeometry: false, needFeature: false};\n    }\n\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter(filter);\n    }\n    const filterExp = ((filter: any): string[] | string | boolean);\n\n    let staticFilter = true;\n    try {\n        staticFilter = extractStaticFilter(filterExp);\n    } catch (e) {\n        console.warn(\n`Failed to extract static filter. Filter will continue working, but at higher memory usage and slower framerate.\nThis is most likely a bug, please report this via https://github.com/mapbox/mapbox-gl-js/issues/new?assignees=&labels=&template=Bug_report.md\nand paste the contents of this message in the report.\nThank you!\nFilter Expression:\n${JSON.stringify(filterExp, null, 2)}\n        `);\n    }\n\n    // Compile the static component of the filter\n    const filterSpec = latest[`filter_${layerType}`];\n    const compiledStaticFilter = createExpression(staticFilter, filterSpec);\n\n    let filterFunc = null;\n    if (compiledStaticFilter.result === 'error') {\n        throw new Error(compiledStaticFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n    } else {\n        filterFunc = (globalProperties: GlobalProperties, feature: Feature, canonical?: CanonicalTileID) => compiledStaticFilter.value.evaluate(globalProperties, feature, {}, canonical);\n    }\n\n    // If the static component is not equal to the entire filter then we have a dynamic component\n    // Compile the dynamic component separately\n    let dynamicFilterFunc = null;\n    let needFeature = null;\n    if (staticFilter !== filterExp) {\n        const compiledDynamicFilter = createExpression(filterExp, filterSpec);\n\n        if (compiledDynamicFilter.result === 'error') {\n            throw new Error(compiledDynamicFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        } else {\n            dynamicFilterFunc = (globalProperties: GlobalProperties, feature: Feature, canonical?: CanonicalTileID, featureTileCoord?: Point, featureDistanceData?: FeatureDistanceData) => compiledDynamicFilter.value.evaluate(globalProperties, feature, {}, canonical, undefined, undefined, featureTileCoord, featureDistanceData);\n            needFeature = !isFeatureConstant(compiledDynamicFilter.value.expression);\n        }\n    }\n\n    filterFunc = ((filterFunc: any): FilterExpression);\n    const needGeometry = geometryNeeded(staticFilter);\n\n    return {\n        filter: filterFunc,\n        dynamicFilter: dynamicFilterFunc ? dynamicFilterFunc : undefined,\n        needGeometry,\n        needFeature: !!needFeature\n    };\n}\n\nfunction extractStaticFilter(filter: any): any {\n    if (!isDynamicFilter(filter)) {\n        return filter;\n    }\n\n    // Shallow copy so we can replace expressions in-place\n    let result = deepUnbundle(filter);\n\n    // 1. Union branches\n    unionDynamicBranches(result);\n\n    // 2. Collapse dynamic conditions to  `true`\n    result = collapseDynamicBooleanExpressions(result);\n\n    return result;\n}\n\nfunction collapseDynamicBooleanExpressions(expression: any): any {\n    if (!Array.isArray(expression)) {\n        return expression;\n    }\n\n    const collapsed = collapsedExpression(expression);\n    if (collapsed === true) {\n        return collapsed;\n    } else {\n        return collapsed.map((subExpression) => collapseDynamicBooleanExpressions(subExpression));\n    }\n}\n\n/**\n * Traverses the expression and replaces all instances of branching on a\n * `dynamic` conditional (such as `['pitch']` or `['distance-from-center']`)\n * into an `any` expression.\n * This ensures that all possible outcomes of a `dynamic` branch are considered\n * when evaluating the expression upfront during filtering.\n *\n * @param {Array<any>} filter the filter expression mutated in-place.\n */\nfunction unionDynamicBranches(filter: any) {\n    let isBranchingDynamically = false;\n    const branches = [];\n\n    if (filter[0] === 'case') {\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[i]);\n            branches.push(filter[i + 1]);\n        }\n\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'match') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        for (let i = 2; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'step') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n    }\n\n    if (isBranchingDynamically) {\n        filter.length = 0;\n        filter.push('any', ...branches);\n    }\n\n    // traverse and recurse into children\n    for (let i = 1; i < filter.length; i++) {\n        unionDynamicBranches(filter[i]);\n    }\n}\n\nfunction isDynamicFilter(filter: any): boolean {\n    // Base Cases\n    if (!Array.isArray(filter)) {\n        return false;\n    }\n    if (isRootExpressionDynamic(filter[0])) {\n        return true;\n    }\n\n    for (let i = 1; i < filter.length; i++) {\n        const child = filter[i];\n        if (isDynamicFilter(child)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isRootExpressionDynamic(expression: string): boolean {\n    return expression === 'pitch' ||\n        expression === 'distance-from-center';\n}\n\nconst dynamicConditionExpressions = new Set([\n    'in',\n    '==',\n    '!=',\n    '>',\n    '>=',\n    '<',\n    '<=',\n    'to-boolean'\n]);\n\nfunction collapsedExpression(expression: any): any {\n    if (dynamicConditionExpressions.has(expression[0])) {\n\n        for (let i = 1; i < expression.length; i++) {\n            const param = expression[i];\n            if (isDynamicFilter(param)) {\n                return true;\n            }\n        }\n    }\n    return expression;\n}\n\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter)) return false;\n    if (filter[0] === 'within') return true;\n    for (let index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index])) return true;\n    }\n    return false;\n}\n\nfunction convertFilter(filter: ?Array<any>): mixed {\n    if (!filter) return true;\n    const op = filter[0];\n    if (filter.length <= 1) return (op !== 'any');\n    const converted =\n        op === '==' ? convertComparisonOp(filter[1], filter[2], '==') :\n        op === '!=' ? convertNegation(convertComparisonOp(filter[1], filter[2], '==')) :\n        op === '<' ||\n        op === '>' ||\n        op === '<=' ||\n        op === '>=' ? convertComparisonOp(filter[1], filter[2], op) :\n        op === 'any' ? convertDisjunctionOp(filter.slice(1)) :\n        op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter)) :\n        op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter).map(convertNegation)) :\n        op === 'in' ? convertInOp(filter[1], filter.slice(2)) :\n        op === '!in' ? convertNegation(convertInOp(filter[1], filter.slice(2))) :\n        op === 'has' ? convertHasOp(filter[1]) :\n        op === '!has' ? convertNegation(convertHasOp(filter[1])) :\n        op === 'within' ? filter :\n        true;\n    return converted;\n}\n\nfunction convertComparisonOp(property: string, value: any, op: string) {\n    switch (property) {\n    case '$type':\n        return [`filter-type-${op}`, value];\n    case '$id':\n        return [`filter-id-${op}`, value];\n    default:\n        return [`filter-${op}`, property, value];\n    }\n}\n\nfunction convertDisjunctionOp(filters: Array<Array<any>>) {\n    return ['any'].concat(filters.map(convertFilter));\n}\n\nfunction convertInOp(property: string, values: Array<any>) {\n    if (values.length === 0) { return false; }\n    switch (property) {\n    case '$type':\n        return [`filter-type-in`, ['literal', values]];\n    case '$id':\n        return [`filter-id-in`, ['literal', values]];\n    default:\n        if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n            return ['filter-in-large', property, ['literal', values.sort(compare)]];\n        } else {\n            return ['filter-in-small', property, ['literal', values]];\n        }\n    }\n}\n\nfunction convertHasOp(property: string) {\n    switch (property) {\n    case '$type':\n        return true;\n    case '$id':\n        return [`filter-has-id`];\n    default:\n        return [`filter-has`, property];\n    }\n}\n\nfunction convertNegation(filter: mixed) {\n    return ['!', filter];\n}\n","// @flow\n\nimport {isExpressionFilter} from './index.js';\n\nimport type {FilterSpecification} from '../types.js';\n\ntype ExpectedTypes = {[_: string]: 'string' | 'number' | 'boolean'};\n\n/**\n * Convert the given legacy filter to (the JSON representation of) an\n * equivalent expression\n * @private\n */\nexport default function convertFilter(filter: FilterSpecification): mixed {\n    return _convertFilter(filter, {});\n}\n\n/*\n * Convert the given filter to an expression, storing the expected types for\n * any feature properties referenced in expectedTypes.\n *\n * These expected types are needed in order to construct preflight type checks\n * needed for handling 'any' filters. A preflight type check is necessary in\n * order to mimic legacy filters' semantics around expected type mismatches.\n * For example, consider the legacy filter:\n *\n *     [\"any\", [\"all\", [\">\", \"y\", 0], [\">\", \"y\", 0]], [\">\", \"x\", 0]]\n *\n * Naively, we might convert this to the expression:\n *\n *     [\"any\", [\"all\", [\">\", [\"get\", \"y\"], 0], [\">\", [\"get\", \"z\"], 0]], [\">\", [\"get\", \"x\"], 0]]\n *\n * But if we tried to evaluate this against, say `{x: 1, y: null, z: 0}`, the\n * [\">\", [\"get\", \"y\"], 0] would cause an evaluation error, leading to the\n * entire filter returning false. Legacy filter semantics, though, ask for\n * [\">\", \"y\", 0] to simply return `false` when `y` is of the wrong type,\n * allowing the subsequent terms of the outer \"any\" expression to be evaluated\n * (resulting, in this case, in a `true` value, because x > 0).\n *\n * We account for this by inserting a preflight type-checking expression before\n * each \"any\" term, allowing us to avoid evaluating the actual converted filter\n * if any type mismatches would cause it to produce an evalaution error:\n *\n *     [\"any\",\n *       [\"case\",\n *         [\"all\", [\"==\", [\"typeof\", [\"get\", \"y\"]], \"number\"], [\"==\", [\"typeof\", [\"get\", \"z\"], \"number]],\n *         [\"all\", [\">\", [\"get\", \"y\"], 0], [\">\", [\"get\", \"z\"], 0]],\n *         false\n *       ],\n *       [\"case\",\n *         [\"==\", [\"typeof\", [\"get\", \"x\"], \"number\"]],\n *         [\">\", [\"get\", \"x\"], 0],\n *         false\n *       ]\n *     ]\n *\n * An alternative, possibly more direct approach would be to use type checks\n * in the conversion of each comparison operator, so that the converted version\n * of each individual ==, >=, etc. would mimic the legacy filter semantics. The\n * downside of this approach is that it can lead to many more type checks than\n * would otherwise be necessary: outside the context of an \"any\" expression,\n * bailing out due to a runtime type error (expression semantics) and returning\n * false (legacy filter semantics) are equivalent: they cause the filter to\n * produce a `false` result.\n */\nfunction _convertFilter(filter: FilterSpecification, expectedTypes: ExpectedTypes): mixed {\n    if (isExpressionFilter(filter)) { return filter; }\n\n    if (!filter) return true;\n    const op = filter[0];\n    if (filter.length <= 1) return (op !== 'any');\n\n    let converted;\n\n    if (\n        op === '==' ||\n        op === '!=' ||\n        op === '<' ||\n        op === '>' ||\n        op === '<=' ||\n        op === '>='\n    ) {\n        const [, property, value] = (filter: any);\n        converted = convertComparisonOp(property, value, op, expectedTypes);\n    } else if (op === 'any') {\n        const children = (filter: any).slice(1).map(f => {\n            const types = {};\n            const child = _convertFilter(f, types);\n            const typechecks = runtimeTypeChecks(types);\n            return typechecks === true ? child : ['case', typechecks, child, false];\n        });\n        return ['any'].concat(children);\n    } else if (op === 'all') {\n        const children = (filter: any).slice(1).map(f => _convertFilter(f, expectedTypes));\n        return children.length > 1 ? ['all'].concat(children) : [].concat(...children);\n    } else if (op === 'none') {\n        return ['!', _convertFilter(['any'].concat((filter: any).slice(1)), {})];\n    } else if (op === 'in') {\n        converted = convertInOp((filter[1]: any), filter.slice(2));\n    } else if (op === '!in') {\n        converted = convertInOp((filter[1]: any), filter.slice(2), true);\n    } else if (op === 'has') {\n        converted = convertHasOp((filter[1]: any));\n    } else if (op === '!has') {\n        converted = ['!', convertHasOp((filter[1]: any))];\n    } else {\n        converted = true;\n    }\n\n    return converted;\n}\n\n// Given a set of feature properties and an expected type for each one,\n// construct an boolean expression that tests whether each property has the\n// right type.\n// E.g.: for {name: 'string', population: 'number'}, return\n// [ 'all',\n//   ['==', ['typeof', ['get', 'name'], 'string']],\n//   ['==', ['typeof', ['get', 'population'], 'number]]\n// ]\nfunction runtimeTypeChecks(expectedTypes: ExpectedTypes) {\n    const conditions = [];\n    for (const property in expectedTypes) {\n        const get = property === '$id' ? ['id'] : ['get', property];\n        conditions.push(['==', ['typeof', get], expectedTypes[property]]);\n    }\n    if (conditions.length === 0) return true;\n    if (conditions.length === 1) return conditions[0];\n    return ['all'].concat(conditions);\n}\n\nfunction convertComparisonOp(property: string, value: any, op: string, expectedTypes: ?ExpectedTypes) {\n    let get;\n    if (property === '$type') {\n        return [op, ['geometry-type'], value];\n    } else if (property === '$id') {\n        get = ['id'];\n    } else {\n        get = ['get', property];\n    }\n\n    if (expectedTypes && value !== null) {\n        const type = ((typeof value): any);\n        expectedTypes[property] = type;\n    }\n\n    if (op === '==' && property !== '$id' && value === null) {\n        return [\n            'all',\n            ['has', property], // missing property != null for legacy filters\n            ['==', get, null]\n        ];\n    } else if (op === '!=' && property !== '$id' && value === null) {\n        return [\n            'any',\n            ['!', ['has', property]], // missing property != null for legacy filters\n            ['!=', get, null]\n        ];\n    }\n\n    return [op, get, value];\n}\n\nfunction convertInOp(property: string, values: Array<any>, negate = false) {\n    if (values.length === 0) return negate;\n\n    let get;\n    if (property === '$type') {\n        get = ['geometry-type'];\n    } else if (property === '$id') {\n        get = ['id'];\n    } else {\n        get = ['get', property];\n    }\n\n    // Determine if the list of values to be searched is homogenously typed.\n    // If so (and if the type is string or number), then we can use a\n    // [match, input, [...values], true, false] construction rather than a\n    // bunch of `==` tests.\n    let uniformTypes = true;\n    const type = typeof values[0];\n    for (const value of values) {\n        if (typeof value !== type) {\n            uniformTypes = false;\n            break;\n        }\n    }\n\n    if (uniformTypes && (type === 'string' || type === 'number')) {\n        // Match expressions must have unique values.\n        const uniqueValues = values.sort().filter((v, i) => i === 0 || values[i - 1] !== v);\n        return ['match', get, uniqueValues, !negate, negate];\n    }\n\n    return [ negate ? 'all' : 'any' ].concat(\n        values.map(v => [negate ? '!=' : '==', get, v])\n    );\n}\n\nfunction convertHasOp(property: string) {\n    if (property === '$type') {\n        return true;\n    } else if (property === '$id') {\n        return ['!=', ['id'], null];\n    } else {\n        return ['has', property];\n    }\n}\n","// @flow\n\nimport {\n    eachLayer,\n    eachProperty\n} from '../visit.js';\nimport {isExpression} from '../expression/index.js';\nimport convertFunction, {convertTokenString} from '../function/convert.js';\nimport convertFilter from '../feature_filter/convert.js';\n\nimport type {StyleSpecification} from '../types.js';\n\n/**\n * Migrate the given style object in place to use expressions. Specifically,\n * this will convert (a) \"stop\" functions, and (b) legacy filters to their\n * expression equivalents.\n */\nexport default function(style: StyleSpecification): StyleSpecification {\n    const converted = [];\n\n    eachLayer(style, (layer) => {\n        if (layer.filter) {\n            layer.filter = (convertFilter(layer.filter): any);\n        }\n    });\n\n    eachProperty(style, {paint: true, layout: true}, ({path, value, reference, set}) => {\n        if (isExpression(value)) return;\n        if (typeof value === 'object' && !Array.isArray(value)) {\n            set(convertFunction(value, reference));\n            converted.push(path.join('.'));\n        } else if (reference.tokens && typeof value === 'string') {\n            set(convertTokenString(value));\n        }\n    });\n\n    return style;\n}\n\n","\nimport migrateToV8 from './migrate/v8.js';\nimport migrateToExpressions from './migrate/expressions.js';\n\n/**\n * Migrate a Mapbox GL Style to the latest version.\n *\n * @private\n * @alias migrate\n * @param {object} style a Mapbox GL Style\n * @returns {Object} a migrated style\n * @example\n * var fs = require('fs');\n * var migrate = require('mapbox-gl-style-spec').migrate;\n * var style = fs.readFileSync('./style.json', 'utf8');\n * fs.writeFileSync('./style.json', JSON.stringify(migrate(style)));\n */\nexport default function(style) {\n    let migrated = false;\n\n    if (style.version === 7) {\n        style = migrateToV8(style);\n        migrated = true;\n    }\n\n    if (style.version === 8) {\n        migrated = migrateToExpressions(style);\n        migrated = true;\n    }\n\n    if (!migrated) {\n        throw new Error('cannot migrate from', style.version);\n    }\n\n    return style;\n}\n","\nexport default function (style) {\n    const styleIDs = [];\n    const sourceIDs = [];\n    const compositedSourceLayers = [];\n\n    for (const id in style.sources) {\n        const source = style.sources[id];\n\n        if (source.type !== \"vector\")\n            continue;\n\n        const match = /^mapbox:\\/\\/(.*)/.exec(source.url);\n        if (!match)\n            continue;\n\n        styleIDs.push(id);\n        sourceIDs.push(match[1]);\n    }\n\n    if (styleIDs.length < 2)\n        return style;\n\n    styleIDs.forEach((id) => {\n        delete style.sources[id];\n    });\n\n    const compositeID = sourceIDs.join(\",\");\n\n    style.sources[compositeID] = {\n        \"type\": \"vector\",\n        \"url\": `mapbox://${compositeID}`\n    };\n\n    style.layers.forEach((layer) => {\n        if (styleIDs.indexOf(layer.source) >= 0) {\n            layer.source = compositeID;\n\n            if ('source-layer' in layer) {\n                if (compositedSourceLayers.indexOf(layer['source-layer']) >= 0) {\n                    throw new Error('Conflicting source layer names');\n                } else {\n                    compositedSourceLayers.push(layer['source-layer']);\n                }\n            }\n        }\n    });\n\n    return style;\n}\n","// @flow\nexport default ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n","// @flow\n\nimport refProperties from './util/ref_properties.js';\n\nimport type {LayerSpecification} from './types.js';\n\nfunction deref(layer: LayerSpecification, parent: LayerSpecification): LayerSpecification {\n    const result = {};\n\n    for (const k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n\n    refProperties.forEach((k) => {\n        if (k in parent) {\n            result[k] = (parent: any)[k];\n        }\n    });\n\n    return ((result: any): LayerSpecification);\n}\n\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nexport default function derefLayers(layers: Array<LayerSpecification>): Array<LayerSpecification> {\n    layers = layers.slice();\n\n    const map = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[(layers[i]: any).ref]);\n        }\n    }\n\n    return layers;\n}\n","// @flow\n\n/**\n * Deeply compares two object literals.\n *\n * @private\n */\nfunction deepEqual(a: ?mixed, b: ?mixed): boolean {\n    if (Array.isArray(a)) {\n        if (!Array.isArray(b) || a.length !== b.length) return false;\n        for (let i = 0; i < a.length; i++) {\n            if (!deepEqual(a[i], b[i])) return false;\n        }\n        return true;\n    }\n    if (typeof a === 'object' && a !== null && b !== null) {\n        if (!(typeof b === 'object')) return false;\n        const keys = Object.keys(a);\n        if (keys.length !== Object.keys(b).length) return false;\n        for (const key in a) {\n            if (!deepEqual(a[key], b[key])) return false;\n        }\n        return true;\n    }\n    return a === b;\n}\n\nexport default deepEqual;\n","// @flow\n\nimport isEqual from './util/deep_equal.js';\n\nimport type {StyleSpecification} from './types.js';\n\ntype Command = {\n    command: string;\n    args: Array<any>;\n};\n\nexport const operations: {[_: string]: string} = {\n\n    /*\n     * { command: 'setStyle', args: [stylesheet] }\n     */\n    setStyle: 'setStyle',\n\n    /*\n     * { command: 'addLayer', args: [layer, 'beforeLayerId'] }\n     */\n    addLayer: 'addLayer',\n\n    /*\n     * { command: 'removeLayer', args: ['layerId'] }\n     */\n    removeLayer: 'removeLayer',\n\n    /*\n     * { command: 'setPaintProperty', args: ['layerId', 'prop', value] }\n     */\n    setPaintProperty: 'setPaintProperty',\n\n    /*\n     * { command: 'setLayoutProperty', args: ['layerId', 'prop', value] }\n     */\n    setLayoutProperty: 'setLayoutProperty',\n\n    /*\n     * { command: 'setFilter', args: ['layerId', filter] }\n     */\n    setFilter: 'setFilter',\n\n    /*\n     * { command: 'addSource', args: ['sourceId', source] }\n     */\n    addSource: 'addSource',\n\n    /*\n     * { command: 'removeSource', args: ['sourceId'] }\n     */\n    removeSource: 'removeSource',\n\n    /*\n     * { command: 'setGeoJSONSourceData', args: ['sourceId', data] }\n     */\n    setGeoJSONSourceData: 'setGeoJSONSourceData',\n\n    /*\n     * { command: 'setLayerZoomRange', args: ['layerId', 0, 22] }\n     */\n    setLayerZoomRange: 'setLayerZoomRange',\n\n    /*\n     * { command: 'setLayerProperty', args: ['layerId', 'prop', value] }\n     */\n    setLayerProperty: 'setLayerProperty',\n\n    /*\n     * { command: 'setCenter', args: [[lon, lat]] }\n     */\n    setCenter: 'setCenter',\n\n    /*\n     * { command: 'setZoom', args: [zoom] }\n     */\n    setZoom: 'setZoom',\n\n    /*\n     * { command: 'setBearing', args: [bearing] }\n     */\n    setBearing: 'setBearing',\n\n    /*\n     * { command: 'setPitch', args: [pitch] }\n     */\n    setPitch: 'setPitch',\n\n    /*\n     * { command: 'setSprite', args: ['spriteUrl'] }\n     */\n    setSprite: 'setSprite',\n\n    /*\n     * { command: 'setGlyphs', args: ['glyphsUrl'] }\n     */\n    setGlyphs: 'setGlyphs',\n\n    /*\n     * { command: 'setTransition', args: [transition] }\n     */\n    setTransition: 'setTransition',\n\n    /*\n     * { command: 'setLighting', args: [lightProperties] }\n     */\n    setLight: 'setLight',\n\n    /*\n     * { command: 'setTerrain', args: [terrainProperties] }\n     */\n    setTerrain: 'setTerrain',\n\n    /*\n     *  { command: 'setFog', args: [fogProperties] }\n     */\n    setFog: 'setFog',\n\n    /*\n     *  { command: 'setProjection', args: [projectionProperties] }\n     */\n    setProjection: 'setProjection'\n};\n\nfunction addSource(sourceId, after, commands) {\n    commands.push({command: operations.addSource, args: [sourceId, after[sourceId]]});\n}\n\nfunction removeSource(sourceId, commands, sourcesRemoved) {\n    commands.push({command: operations.removeSource, args: [sourceId]});\n    sourcesRemoved[sourceId] = true;\n}\n\nfunction updateSource(sourceId, after, commands, sourcesRemoved) {\n    removeSource(sourceId, commands, sourcesRemoved);\n    addSource(sourceId, after, commands);\n}\n\nfunction canUpdateGeoJSON(before, after, sourceId) {\n    let prop;\n    for (prop in before[sourceId]) {\n        if (!before[sourceId].hasOwnProperty(prop)) continue;\n        if (prop !== 'data' && !isEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    for (prop in after[sourceId]) {\n        if (!after[sourceId].hasOwnProperty(prop)) continue;\n        if (prop !== 'data' && !isEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction diffSources(before, after, commands, sourcesRemoved) {\n    before = before || {};\n    after = after || {};\n\n    let sourceId;\n\n    // look for sources to remove\n    for (sourceId in before) {\n        if (!before.hasOwnProperty(sourceId)) continue;\n        if (!after.hasOwnProperty(sourceId)) {\n            removeSource(sourceId, commands, sourcesRemoved);\n        }\n    }\n\n    // look for sources to add/update\n    for (sourceId in after) {\n        if (!after.hasOwnProperty(sourceId)) continue;\n        if (!before.hasOwnProperty(sourceId)) {\n            addSource(sourceId, after, commands);\n        } else if (!isEqual(before[sourceId], after[sourceId])) {\n            if (before[sourceId].type === 'geojson' && after[sourceId].type === 'geojson' && canUpdateGeoJSON(before, after, sourceId)) {\n                commands.push({command: operations.setGeoJSONSourceData, args: [sourceId, after[sourceId].data]});\n            } else {\n                // no update command, must remove then add\n                updateSource(sourceId, after, commands, sourcesRemoved);\n            }\n        }\n    }\n}\n\nfunction diffLayerPropertyChanges(before, after, commands, layerId, klass, command) {\n    before = before || {};\n    after = after || {};\n\n    let prop;\n\n    for (prop in before) {\n        if (!before.hasOwnProperty(prop)) continue;\n        if (!isEqual(before[prop], after[prop])) {\n            commands.push({command, args: [layerId, prop, after[prop], klass]});\n        }\n    }\n    for (prop in after) {\n        if (!after.hasOwnProperty(prop) || before.hasOwnProperty(prop)) continue;\n        if (!isEqual(before[prop], after[prop])) {\n            commands.push({command, args: [layerId, prop, after[prop], klass]});\n        }\n    }\n}\n\nfunction pluckId(layer) {\n    return layer.id;\n}\nfunction indexById(group, layer) {\n    group[layer.id] = layer;\n    return group;\n}\n\nfunction diffLayers(before, after, commands) {\n    before = before || [];\n    after = after || [];\n\n    // order of layers by id\n    const beforeOrder = before.map(pluckId);\n    const afterOrder = after.map(pluckId);\n\n    // index of layer by id\n    const beforeIndex = before.reduce(indexById, {});\n    const afterIndex = after.reduce(indexById, {});\n\n    // track order of layers as if they have been mutated\n    const tracker = beforeOrder.slice();\n\n    // layers that have been added do not need to be diffed\n    const clean = Object.create(null);\n\n    let i, d, layerId, beforeLayer, afterLayer, insertBeforeLayerId, prop;\n\n    // remove layers\n    for (i = 0, d = 0; i < beforeOrder.length; i++) {\n        layerId = beforeOrder[i];\n        if (!afterIndex.hasOwnProperty(layerId)) {\n            commands.push({command: operations.removeLayer, args: [layerId]});\n            tracker.splice(tracker.indexOf(layerId, d), 1);\n        } else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n    }\n\n    // add/reorder layers\n    for (i = 0, d = 0; i < afterOrder.length; i++) {\n        // work backwards as insert is before an existing layer\n        layerId = afterOrder[afterOrder.length - 1 - i];\n\n        if (tracker[tracker.length - 1 - i] === layerId) continue;\n\n        if (beforeIndex.hasOwnProperty(layerId)) {\n            // remove the layer before we insert at the correct position\n            commands.push({command: operations.removeLayer, args: [layerId]});\n            tracker.splice(tracker.lastIndexOf(layerId, tracker.length - d), 1);\n        } else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n\n        // add layer at correct position\n        insertBeforeLayerId = tracker[tracker.length - i];\n        commands.push({command: operations.addLayer, args: [afterIndex[layerId], insertBeforeLayerId]});\n        tracker.splice(tracker.length - i, 0, layerId);\n        clean[layerId] = true;\n    }\n\n    // update layers\n    for (i = 0; i < afterOrder.length; i++) {\n        layerId = afterOrder[i];\n        beforeLayer = beforeIndex[layerId];\n        afterLayer = afterIndex[layerId];\n\n        // no need to update if previously added (new or moved)\n        if (clean[layerId] || isEqual(beforeLayer, afterLayer)) continue;\n\n        // If source, source-layer, or type have changes, then remove the layer\n        // and add it back 'from scratch'.\n        if (!isEqual(beforeLayer.source, afterLayer.source) || !isEqual(beforeLayer['source-layer'], afterLayer['source-layer']) || !isEqual(beforeLayer.type, afterLayer.type)) {\n            commands.push({command: operations.removeLayer, args: [layerId]});\n            // we add the layer back at the same position it was already in, so\n            // there's no need to update the `tracker`\n            insertBeforeLayerId = tracker[tracker.lastIndexOf(layerId) + 1];\n            commands.push({command: operations.addLayer, args: [afterLayer, insertBeforeLayerId]});\n            continue;\n        }\n\n        // layout, paint, filter, minzoom, maxzoom\n        diffLayerPropertyChanges(beforeLayer.layout, afterLayer.layout, commands, layerId, null, operations.setLayoutProperty);\n        diffLayerPropertyChanges(beforeLayer.paint, afterLayer.paint, commands, layerId, null, operations.setPaintProperty);\n        if (!isEqual(beforeLayer.filter, afterLayer.filter)) {\n            commands.push({command: operations.setFilter, args: [layerId, afterLayer.filter]});\n        }\n        if (!isEqual(beforeLayer.minzoom, afterLayer.minzoom) || !isEqual(beforeLayer.maxzoom, afterLayer.maxzoom)) {\n            commands.push({command: operations.setLayerZoomRange, args: [layerId, afterLayer.minzoom, afterLayer.maxzoom]});\n        }\n\n        // handle all other layer props, including paint.*\n        for (prop in beforeLayer) {\n            if (!beforeLayer.hasOwnProperty(prop)) continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom') continue;\n            if (prop.indexOf('paint.') === 0) {\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), operations.setPaintProperty);\n            } else if (!isEqual(beforeLayer[prop], afterLayer[prop])) {\n                commands.push({command: operations.setLayerProperty, args: [layerId, prop, afterLayer[prop]]});\n            }\n        }\n        for (prop in afterLayer) {\n            if (!afterLayer.hasOwnProperty(prop) || beforeLayer.hasOwnProperty(prop)) continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom') continue;\n            if (prop.indexOf('paint.') === 0) {\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), operations.setPaintProperty);\n            } else if (!isEqual(beforeLayer[prop], afterLayer[prop])) {\n                commands.push({command: operations.setLayerProperty, args: [layerId, prop, afterLayer[prop]]});\n            }\n        }\n    }\n}\n\n/**\n * Diff two stylesheet\n *\n * Creates semanticly aware diffs that can easily be applied at runtime.\n * Operations produced by the diff closely resemble the mapbox-gl-js API. Any\n * error creating the diff will fall back to the 'setStyle' operation.\n *\n * Example diff:\n * [\n *     { command: 'setConstant', args: ['@water', '#0000FF'] },\n *     { command: 'setPaintProperty', args: ['background', 'background-color', 'black'] }\n * ]\n *\n * @private\n * @param {*} [before] stylesheet to compare from\n * @param {*} after stylesheet to compare to\n * @returns Array list of changes\n */\nexport default function diffStyles(before: StyleSpecification, after: StyleSpecification): Array<Command> {\n    if (!before) return [{command: operations.setStyle, args: [after]}];\n\n    let commands = [];\n\n    try {\n        // Handle changes to top-level properties\n        if (!isEqual(before.version, after.version)) {\n            return [{command: operations.setStyle, args: [after]}];\n        }\n        if (!isEqual(before.center, after.center)) {\n            commands.push({command: operations.setCenter, args: [after.center]});\n        }\n        if (!isEqual(before.zoom, after.zoom)) {\n            commands.push({command: operations.setZoom, args: [after.zoom]});\n        }\n        if (!isEqual(before.bearing, after.bearing)) {\n            commands.push({command: operations.setBearing, args: [after.bearing]});\n        }\n        if (!isEqual(before.pitch, after.pitch)) {\n            commands.push({command: operations.setPitch, args: [after.pitch]});\n        }\n        if (!isEqual(before.sprite, after.sprite)) {\n            commands.push({command: operations.setSprite, args: [after.sprite]});\n        }\n        if (!isEqual(before.glyphs, after.glyphs)) {\n            commands.push({command: operations.setGlyphs, args: [after.glyphs]});\n        }\n        if (!isEqual(before.transition, after.transition)) {\n            commands.push({command: operations.setTransition, args: [after.transition]});\n        }\n        if (!isEqual(before.light, after.light)) {\n            commands.push({command: operations.setLight, args: [after.light]});\n        }\n        if (!isEqual(before.fog, after.fog)) {\n            commands.push({command: operations.setFog, args: [after.fog]});\n        }\n        if (!isEqual(before.projection, after.projection)) {\n            commands.push({command: operations.setProjection, args: [after.projection]});\n        }\n\n        // Handle changes to `sources`\n        // If a source is to be removed, we also--before the removeSource\n        // command--need to remove all the style layers that depend on it.\n        const sourcesRemoved = {};\n\n        // First collect the {add,remove}Source commands\n        const removeOrAddSourceCommands = [];\n        diffSources(before.sources, after.sources, removeOrAddSourceCommands, sourcesRemoved);\n\n        // Push a removeLayer command for each style layer that depends on a\n        // source that's being removed.\n        // Also, exclude any such layers them from the input to `diffLayers`\n        // below, so that diffLayers produces the appropriate `addLayers`\n        // command\n        const beforeLayers = [];\n        if (before.layers) {\n            before.layers.forEach((layer) => {\n                if (layer.source && sourcesRemoved[layer.source]) {\n                    commands.push({command: operations.removeLayer, args: [layer.id]});\n                } else {\n                    beforeLayers.push(layer);\n                }\n            });\n        }\n\n        // Remove the terrain if the source for that terrain is being removed\n        let beforeTerrain = before.terrain;\n        if (beforeTerrain) {\n            if (sourcesRemoved[beforeTerrain.source]) {\n                commands.push({command: operations.setTerrain, args: [undefined]});\n                beforeTerrain = undefined;\n            }\n        }\n\n        commands = commands.concat(removeOrAddSourceCommands);\n\n        // Even though terrain is a top-level property\n        // Its like a layer in the sense that it depends on a source being present.\n        if (!isEqual(beforeTerrain, after.terrain)) {\n            commands.push({command: operations.setTerrain, args: [after.terrain]});\n        }\n\n        // Handle changes to `layers`\n        diffLayers(beforeLayers, after.layers, commands);\n\n    } catch (e) {\n        // fall back to setStyle\n        console.warn('Unable to compute style diff:', e);\n        commands = [{command: operations.setStyle, args: [after]}];\n    }\n\n    return commands;\n}\n","// @flow\n\n// Note: Do not inherit from Error. It breaks when transpiling to ES5.\n\nexport default class ValidationError {\n    message: string;\n    identifier: ?string;\n    line: ?number;\n\n    constructor(key: ?string, value: ?{ __line__: number }, message: string, identifier: ?string) {\n        this.message = (key ? `${key}: ` : '') + message;\n        if (identifier) this.identifier = identifier;\n\n        if (value !== null && value !== undefined && value.__line__) {\n            this.line = value.__line__;\n        }\n    }\n}\n","// @flow\n\n// Note: Do not inherit from Error. It breaks when transpiling to ES5.\n\nexport default class ParsingError {\n    message: string;\n    error: Error;\n    line: number;\n\n    constructor(error: Error) {\n        this.error = error;\n        this.message = error.message;\n        const match = error.message.match(/line (\\d+)/);\n        this.line = match ? parseInt(match[1], 10) : 0;\n    }\n}\n","// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport getType from '../util/get_type.js';\nimport validateSpec from './validate.js';\n\nimport type {ValidationOptions} from './validate.js';\n\ntype Options = ValidationOptions & {\n    objectElementValidators?: Function;\n};\n\nexport default function validateObject(options: Options): Array<ValidationError> {\n    const key = options.key;\n    const object = options.value;\n    const elementSpecs = options.valueSpec || {};\n    const elementValidators = options.objectElementValidators || {};\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    let errors = [];\n\n    const type = getType(object);\n    if (type !== 'object') {\n        return [new ValidationError(key, object, `object expected, ${type} found`)];\n    }\n\n    for (const objectKey in object) {\n        const elementSpecKey = objectKey.split('.')[0]; // treat 'paint.*' as 'paint'\n        const elementSpec = elementSpecs[elementSpecKey] || elementSpecs['*'];\n\n        let validateElement;\n        if (elementValidators[elementSpecKey]) {\n            validateElement = elementValidators[elementSpecKey];\n        } else if (elementSpecs[elementSpecKey]) {\n            validateElement = validateSpec;\n        } else if (elementValidators['*']) {\n            validateElement = elementValidators['*'];\n        } else if (elementSpecs['*']) {\n            validateElement = validateSpec;\n        }\n\n        if (!validateElement) {\n            errors.push(new ValidationError(key, object[objectKey], `unknown property \"${objectKey}\"`));\n            continue;\n        }\n\n        errors = errors.concat(validateElement({\n            key: (key ? `${key}.` : key) + objectKey,\n            value: object[objectKey],\n            valueSpec: elementSpec,\n            style,\n            styleSpec,\n            object,\n            objectKey\n        // $FlowFixMe[extra-arg]\n        }, object));\n    }\n\n    for (const elementSpecKey in elementSpecs) {\n        // Don't check `required` when there's a custom validator for that property.\n        if (elementValidators[elementSpecKey]) {\n            continue;\n        }\n\n        if (elementSpecs[elementSpecKey].required && elementSpecs[elementSpecKey]['default'] === undefined && object[elementSpecKey] === undefined) {\n            errors.push(new ValidationError(key, object, `missing required property \"${elementSpecKey}\"`));\n        }\n    }\n\n    return errors;\n}\n","// @flow\n\nimport getType from '../util/get_type.js';\nimport validate from './validate.js';\nimport ValidationError from '../error/validation_error.js';\n\nimport type {ValidationOptions} from './validate.js';\n\ntype Options = ValidationOptions & {\n    arrayElementValidator: Function;\n};\n\nexport default function validateArray(options: Options): Array<ValidationError> {\n    const array = options.value;\n    const arraySpec = options.valueSpec;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const key = options.key;\n    const validateArrayElement = options.arrayElementValidator || validate;\n\n    if (getType(array) !== 'array') {\n        return [new ValidationError(key, array, `array expected, ${getType(array)} found`)];\n    }\n\n    if (arraySpec.length && array.length !== arraySpec.length) {\n        return [new ValidationError(key, array, `array length ${arraySpec.length} expected, length ${array.length} found`)];\n    }\n\n    if (arraySpec['min-length'] && array.length < arraySpec['min-length']) {\n        return [new ValidationError(key, array, `array length at least ${arraySpec['min-length']} expected, length ${array.length} found`)];\n    }\n\n    let arrayElementSpec = {\n        \"type\": arraySpec.value,\n        \"values\": arraySpec.values,\n        \"minimum\": arraySpec.minimum,\n        \"maximum\": arraySpec.maximum,\n        function: undefined\n    };\n\n    if (styleSpec.$version < 7) {\n        arrayElementSpec.function = arraySpec.function;\n    }\n\n    if (getType(arraySpec.value) === 'object') {\n        arrayElementSpec = arraySpec.value;\n    }\n\n    let errors = [];\n    for (let i = 0; i < array.length; i++) {\n        errors = errors.concat(validateArrayElement({\n            array,\n            arrayIndex: i,\n            value: array[i],\n            valueSpec: arrayElementSpec,\n            style,\n            styleSpec,\n            key: `${key}[${i}]`\n        }));\n    }\n    return errors;\n}\n","// @flow\n\nimport getType from '../util/get_type.js';\nimport ValidationError from '../error/validation_error.js';\n\nimport type {ValidationOptions} from './validate.js';\n\ntype Options = ValidationOptions & {\n    arrayIndex: number;\n}\n\nexport default function validateNumber(options: Options): Array<ValidationError> {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    let type = getType(value);\n\n    // eslint-disable-next-line no-self-compare\n    if (type === 'number' && value !== value) {\n        type = 'NaN';\n    }\n\n    if (type !== 'number') {\n        return [new ValidationError(key, value, `number expected, ${type} found`)];\n    }\n\n    if ('minimum' in valueSpec) {\n        let specMin = valueSpec.minimum;\n        if (getType(valueSpec.minimum) === 'array') {\n            const i = options.arrayIndex;\n            specMin = valueSpec.minimum[i];\n        }\n        if (value < specMin) {\n            return [new ValidationError(key, value, `${value} is less than the minimum value ${specMin}`)];\n        }\n    }\n\n    if ('maximum' in valueSpec) {\n        let specMax = valueSpec.maximum;\n        if (getType(valueSpec.maximum) === 'array') {\n            const i = options.arrayIndex;\n            specMax = valueSpec.maximum[i];\n        }\n        if (value > specMax) {\n            return [new ValidationError(key, value, `${value} is greater than the maximum value ${specMax}`)];\n        }\n    }\n\n    return [];\n}\n","// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport getType from '../util/get_type.js';\nimport validate from './validate.js';\nimport validateObject from './validate_object.js';\nimport validateArray from './validate_array.js';\nimport validateNumber from './validate_number.js';\nimport {isExpression} from '../expression/index.js';\nimport {unbundle, deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport {\n    supportsPropertyExpression,\n    supportsZoomExpression,\n    supportsInterpolation\n} from '../util/properties.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport default function validateFunction(options: ValidationOptions): any {\n    const functionValueSpec = options.valueSpec;\n    const functionType = unbundle(options.value.type);\n    let stopKeyType;\n    let stopDomainValues: {[string | number]: boolean} = {};\n    let previousStopDomainValue;\n    let previousStopDomainZoom;\n\n    const isZoomFunction = functionType !== 'categorical' && options.value.property === undefined;\n    const isPropertyFunction = !isZoomFunction;\n    const isZoomAndPropertyFunction =\n        getType(options.value.stops) === 'array' &&\n        getType(options.value.stops[0]) === 'array' &&\n        getType(options.value.stops[0][0]) === 'object';\n\n    const errors = validateObject({\n        key: options.key,\n        value: options.value,\n        valueSpec: options.styleSpec.function,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        objectElementValidators: {\n            stops: validateFunctionStops,\n            default: validateFunctionDefault\n        }\n    });\n\n    if (functionType === 'identity' && isZoomFunction) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"property\"'));\n    }\n\n    if (functionType !== 'identity' && !options.value.stops) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"stops\"'));\n    }\n\n    if (functionType === 'exponential' && options.valueSpec.expression && !supportsInterpolation(options.valueSpec)) {\n        errors.push(new ValidationError(options.key, options.value, 'exponential functions not supported'));\n    }\n\n    if (options.styleSpec.$version >= 8) {\n        if (isPropertyFunction && !supportsPropertyExpression(options.valueSpec)) {\n            errors.push(new ValidationError(options.key, options.value, 'property functions not supported'));\n        } else if (isZoomFunction && !supportsZoomExpression(options.valueSpec)) {\n            errors.push(new ValidationError(options.key, options.value, 'zoom functions not supported'));\n        }\n    }\n\n    if ((functionType === 'categorical' || isZoomAndPropertyFunction) && options.value.property === undefined) {\n        errors.push(new ValidationError(options.key, options.value, '\"property\" property is required'));\n    }\n\n    return errors;\n\n    function validateFunctionStops(options: ValidationOptions) {\n        if (functionType === 'identity') {\n            return [new ValidationError(options.key, options.value, 'identity function may not have a \"stops\" property')];\n        }\n\n        let errors = [];\n        const value = options.value;\n\n        errors = errors.concat(validateArray({\n            key: options.key,\n            value,\n            valueSpec: options.valueSpec,\n            style: options.style,\n            styleSpec: options.styleSpec,\n            arrayElementValidator: validateFunctionStop\n        }));\n\n        if (getType(value) === 'array' && value.length === 0) {\n            errors.push(new ValidationError(options.key, value, 'array must have at least one stop'));\n        }\n\n        return errors;\n    }\n\n    function validateFunctionStop(options: ValidationOptions) {\n        let errors = [];\n        const value = options.value;\n        const key = options.key;\n\n        if (getType(value) !== 'array') {\n            return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n        }\n\n        if (value.length !== 2) {\n            return [new ValidationError(key, value, `array length 2 expected, length ${value.length} found`)];\n        }\n\n        if (isZoomAndPropertyFunction) {\n            if (getType(value[0]) !== 'object') {\n                return [new ValidationError(key, value, `object expected, ${getType(value[0])} found`)];\n            }\n            if (value[0].zoom === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have zoom')];\n            }\n            if (value[0].value === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have value')];\n            }\n\n            const nextStopDomainZoom = unbundle(value[0].zoom);\n            if (typeof nextStopDomainZoom !== 'number') {\n                return [new ValidationError(key, value[0].zoom, 'stop zoom values must be numbers')];\n            }\n\n            if (previousStopDomainZoom && previousStopDomainZoom > nextStopDomainZoom) {\n                return [new ValidationError(key, value[0].zoom, 'stop zoom values must appear in ascending order')];\n            }\n            if (nextStopDomainZoom !== previousStopDomainZoom) {\n                previousStopDomainZoom = nextStopDomainZoom;\n                previousStopDomainValue = undefined;\n                stopDomainValues = {};\n            }\n            errors = errors.concat(validateObject({\n                key: `${key}[0]`,\n                value: value[0],\n                valueSpec: {zoom: {}},\n                style: options.style,\n                styleSpec: options.styleSpec,\n                objectElementValidators: {zoom: validateNumber, value: validateStopDomainValue}\n            }));\n        } else {\n            errors = errors.concat(validateStopDomainValue({\n                key: `${key}[0]`,\n                value: value[0],\n                valueSpec: {},\n                style: options.style,\n                styleSpec: options.styleSpec\n            }, value));\n        }\n\n        if (isExpression(deepUnbundle(value[1]))) {\n            return errors.concat([new ValidationError(`${key}[1]`, value[1], 'expressions are not allowed in function stops.')]);\n        }\n\n        return errors.concat(validate({\n            key: `${key}[1]`,\n            value: value[1],\n            valueSpec: functionValueSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        }));\n    }\n\n    function validateStopDomainValue(options: ValidationOptions, stop) {\n        const type = getType(options.value);\n        const value = unbundle(options.value);\n\n        const reportValue = options.value !== null ? options.value : stop;\n\n        if (!stopKeyType) {\n            stopKeyType = type;\n        } else if (type !== stopKeyType) {\n            return [new ValidationError(options.key, reportValue, `${type} stop domain type must match previous stop domain type ${stopKeyType}`)];\n        }\n\n        if (type !== 'number' && type !== 'string' && type !== 'boolean' && typeof value !== 'number' && typeof value !== 'string' && typeof value !== 'boolean') {\n            return [new ValidationError(options.key, reportValue, 'stop domain value must be a number, string, or boolean')];\n        }\n\n        if (type !== 'number' && functionType !== 'categorical') {\n            let message = `number expected, ${type} found`;\n            if (supportsPropertyExpression(functionValueSpec) && functionType === undefined) {\n                message += '\\nIf you intended to use a categorical function, specify `\"type\": \"categorical\"`.';\n            }\n            return [new ValidationError(options.key, reportValue, message)];\n        }\n\n        if (functionType === 'categorical' && type === 'number' && (typeof value !== 'number' || !isFinite(value) || Math.floor(value) !== value)) {\n            return [new ValidationError(options.key, reportValue, `integer expected, found ${String(value)}`)];\n        }\n\n        if (functionType !== 'categorical' && type === 'number' && typeof value === 'number' && typeof previousStopDomainValue === 'number' && previousStopDomainValue !== undefined && value < previousStopDomainValue) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must appear in ascending order')];\n        } else {\n            previousStopDomainValue = value;\n        }\n\n        if (functionType === 'categorical' && (value: any) in stopDomainValues) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must be unique')];\n        } else {\n            stopDomainValues[(value: any)] = true;\n        }\n\n        return [];\n    }\n\n    function validateFunctionDefault(options: ValidationOptions) {\n        return validate({\n            key: options.key,\n            value: options.value,\n            valueSpec: functionValueSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        });\n    }\n}\n","// @flow\n\nimport ValidationError from '../error/validation_error.js';\n\nimport {createExpression, createPropertyExpression} from '../expression/index.js';\nimport {deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport {isStateConstant, isGlobalPropertyConstant, isFeatureConstant} from '../expression/is_constant.js';\nimport CompoundExpression from '../expression/compound_expression.js';\n\nimport type {Expression} from '../expression/expression.js';\n\nexport default function validateExpression(options: any): Array<ValidationError> {\n    const expression = (options.expressionContext === 'property' ? createPropertyExpression : createExpression)(deepUnbundle(options.value), options.valueSpec);\n    if (expression.result === 'error') {\n        return expression.value.map((error) => {\n            return new ValidationError(`${options.key}${error.key}`, options.value, error.message);\n        });\n    }\n\n    const expressionObj = (expression.value: any).expression || (expression.value: any)._styleExpression.expression;\n\n    if (options.expressionContext === 'property' && (options.propertyKey === 'text-font') &&\n        !expressionObj.outputDefined()) {\n        return [new ValidationError(options.key, options.value, `Invalid data expression for \"${options.propertyKey}\". Output values must be contained as literals within the expression.`)];\n    }\n\n    if (options.expressionContext === 'property' && options.propertyType === 'layout' &&\n        (!isStateConstant(expressionObj))) {\n        return [new ValidationError(options.key, options.value, '\"feature-state\" data expressions are not supported with layout properties.')];\n    }\n\n    if (options.expressionContext === 'filter') {\n        return disallowedFilterParameters(expressionObj, options);\n    }\n\n    if (options.expressionContext && options.expressionContext.indexOf('cluster') === 0) {\n        if (!isGlobalPropertyConstant(expressionObj, ['zoom', 'feature-state'])) {\n            return [new ValidationError(options.key, options.value, '\"zoom\" and \"feature-state\" expressions are not supported with cluster properties.')];\n        }\n        if (options.expressionContext === 'cluster-initial' && !isFeatureConstant(expressionObj)) {\n            return [new ValidationError(options.key, options.value, 'Feature data expressions are not supported with initial expression part of cluster properties.')];\n        }\n    }\n\n    return [];\n}\n\nexport function disallowedFilterParameters(e: Expression, options: any): Array<ValidationError> {\n    const disallowedParameters = new Set([\n        'zoom',\n        'feature-state',\n        'pitch',\n        'distance-from-center'\n    ]);\n\n    if (options.valueSpec && options.valueSpec.expression) {\n        for (const param of options.valueSpec.expression.parameters) {\n            disallowedParameters.delete(param);\n        }\n    }\n\n    if (disallowedParameters.size === 0) {\n        return [];\n    }\n    const errors = [];\n\n    if (e instanceof CompoundExpression) {\n        if (disallowedParameters.has(e.name)) {\n            return [new ValidationError(options.key, options.value, `[\"${e.name}\"] expression is not supported in a filter for a ${options.object.type} layer with id: ${options.object.id}`)];\n        }\n    }\n    e.eachChild((arg) => {\n        errors.push(...disallowedFilterParameters(arg, options));\n    });\n\n    return errors;\n}\n","// @flow\n\nimport getType from '../util/get_type.js';\nimport ValidationError from '../error/validation_error.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport default function validateBoolean(options: ValidationOptions): Array<ValidationError> {\n    const value = options.value;\n    const key = options.key;\n    const type = getType(value);\n\n    if (type !== 'boolean') {\n        return [new ValidationError(key, value, `boolean expected, ${type} found`)];\n    }\n\n    return [];\n}\n","// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport getType from '../util/get_type.js';\nimport {parseCSSColor} from 'csscolorparser';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport default function validateColor(options: ValidationOptions): Array<ValidationError> {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n\n    if (type !== 'string') {\n        return [new ValidationError(key, value, `color expected, ${type} found`)];\n    }\n\n    if (parseCSSColor(value) === null) {\n        return [new ValidationError(key, value, `color expected, \"${value}\" found`)];\n    }\n\n    return [];\n}\n","// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport {unbundle} from '../util/unbundle_jsonlint.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport default function validateEnum(options: ValidationOptions): Array<ValidationError> {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const errors = [];\n\n    if (Array.isArray(valueSpec.values)) { // <=v7\n        if (valueSpec.values.indexOf(unbundle(value)) === -1) {\n            errors.push(new ValidationError(key, value, `expected one of [${valueSpec.values.join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    } else { // >=v8\n        if (Object.keys(valueSpec.values).indexOf(unbundle(value)) === -1) {\n            errors.push(new ValidationError(key, value, `expected one of [${Object.keys(valueSpec.values).join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    }\n    return errors;\n}\n","// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport validateExpression from './validate_expression.js';\nimport validateEnum from './validate_enum.js';\nimport getType from '../util/get_type.js';\nimport {unbundle, deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport extend from '../util/extend.js';\nimport {isExpressionFilter} from '../feature_filter/index.js';\n\nimport type {ValidationOptions} from './validate.js';\n\ntype Options = ValidationOptions & {\n    layerType: string;\n}\n\nexport default function validateFilter(options: Options): Array<ValidationError> {\n    if (isExpressionFilter(deepUnbundle(options.value))) {\n        // We default to a layerType of `fill` because that points to a non-dynamic filter definition within the style-spec.\n        const layerType = options.layerType || 'fill';\n\n        return validateExpression(extend({}, options, {\n            expressionContext: 'filter',\n            valueSpec: options.styleSpec[`filter_${layerType}`]\n        }));\n    } else {\n        return validateNonExpressionFilter(options);\n    }\n}\n\nfunction validateNonExpressionFilter(options) {\n    const value = options.value;\n    const key = options.key;\n\n    if (getType(value) !== 'array') {\n        return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n    }\n\n    const styleSpec = options.styleSpec;\n    let type;\n\n    let errors = [];\n\n    if (value.length < 1) {\n        return [new ValidationError(key, value, 'filter array must have at least 1 element')];\n    }\n\n    errors = errors.concat(validateEnum({\n        key: `${key}[0]`,\n        value: value[0],\n        valueSpec: styleSpec.filter_operator,\n        style: options.style,\n        styleSpec: options.styleSpec\n    }));\n\n    switch (unbundle(value[0])) {\n    case '<':\n    case '<=':\n    case '>':\n    case '>=':\n        if (value.length >= 2 && unbundle(value[1]) === '$type') {\n            errors.push(new ValidationError(key, value, `\"$type\" cannot be use with operator \"${value[0]}\"`));\n        }\n        /* falls through */\n    case '==':\n    case '!=':\n        if (value.length !== 3) {\n            errors.push(new ValidationError(key, value, `filter array for operator \"${value[0]}\" must have 3 elements`));\n        }\n        /* falls through */\n    case 'in':\n    case '!in':\n        if (value.length >= 2) {\n            type = getType(value[1]);\n            if (type !== 'string') {\n                errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${type} found`));\n            }\n        }\n        for (let i = 2; i < value.length; i++) {\n            type = getType(value[i]);\n            if (unbundle(value[1]) === '$type') {\n                errors = errors.concat(validateEnum({\n                    key: `${key}[${i}]`,\n                    value: value[i],\n                    valueSpec: styleSpec.geometry_type,\n                    style: options.style,\n                    styleSpec: options.styleSpec\n                }));\n            } else if (type !== 'string' && type !== 'number' && type !== 'boolean') {\n                errors.push(new ValidationError(`${key}[${i}]`, value[i], `string, number, or boolean expected, ${type} found`));\n            }\n        }\n        break;\n\n    case 'any':\n    case 'all':\n    case 'none':\n        for (let i = 1; i < value.length; i++) {\n            errors = errors.concat(validateNonExpressionFilter({\n                key: `${key}[${i}]`,\n                value: value[i],\n                style: options.style,\n                styleSpec: options.styleSpec\n            }));\n        }\n        break;\n\n    case 'has':\n    case '!has':\n        type = getType(value[1]);\n        if (value.length !== 2) {\n            errors.push(new ValidationError(key, value, `filter array for \"${value[0]}\" operator must have 2 elements`));\n        } else if (type !== 'string') {\n            errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${type} found`));\n        }\n        break;\n    case 'within':\n        type = getType(value[1]);\n        if (value.length !== 2) {\n            errors.push(new ValidationError(key, value, `filter array for \"${value[0]}\" operator must have 2 elements`));\n        } else if (type !== 'object') {\n            errors.push(new ValidationError(`${key}[1]`, value[1], `object expected, ${type} found`));\n        }\n        break;\n    }\n    return errors;\n}\n","// @flow\n\nimport validate from './validate.js';\nimport ValidationError from '../error/validation_error.js';\nimport getType from '../util/get_type.js';\nimport {isFunction} from '../function/index.js';\nimport {unbundle, deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport {supportsPropertyExpression} from '../util/properties.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport type PropertyValidationOptions = ValidationOptions & {\n    objectKey: string;\n    layerType: string;\n}\n\nexport default function validateProperty(options: PropertyValidationOptions, propertyType: string): Array<ValidationError> {\n    const key = options.key;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const value = options.value;\n    const propertyKey = options.objectKey;\n    const layerSpec = styleSpec[`${propertyType}_${options.layerType}`];\n\n    if (!layerSpec) return [];\n\n    const transitionMatch = propertyKey.match(/^(.*)-transition$/);\n    if (propertyType === 'paint' && transitionMatch && layerSpec[transitionMatch[1]] && layerSpec[transitionMatch[1]].transition) {\n        return validate({\n            key,\n            value,\n            valueSpec: styleSpec.transition,\n            style,\n            styleSpec\n        });\n    }\n\n    const valueSpec = options.valueSpec || layerSpec[propertyKey];\n    if (!valueSpec) {\n        return [new ValidationError(key, value, `unknown property \"${propertyKey}\"`)];\n    }\n\n    let tokenMatch;\n    if (getType(value) === 'string' && supportsPropertyExpression(valueSpec) && !valueSpec.tokens && (tokenMatch = /^{([^}]+)}$/.exec(value))) {\n        return [new ValidationError(\n            key, value,\n            `\"${propertyKey}\" does not support interpolation syntax\\n` +\n                `Use an identity property function instead: \\`{ \"type\": \"identity\", \"property\": ${JSON.stringify(tokenMatch[1])} }\\`.`)];\n    }\n\n    const errors = [];\n\n    if (options.layerType === 'symbol') {\n        if (propertyKey === 'text-field' && style && !style.glyphs) {\n            errors.push(new ValidationError(key, value, 'use of \"text-field\" requires a style \"glyphs\" property'));\n        }\n        if (propertyKey === 'text-font' && isFunction(deepUnbundle(value)) && unbundle(value.type) === 'identity') {\n            errors.push(new ValidationError(key, value, '\"text-font\" does not support identity functions'));\n        }\n    }\n\n    return errors.concat(validate({\n        key: options.key,\n        value,\n        valueSpec,\n        style,\n        styleSpec,\n        expressionContext: 'property',\n        propertyType,\n        propertyKey\n    }));\n}\n","// @flow\n\nimport validateProperty from './validate_property.js';\n\nimport type ValidationError from '../error/validation_error.js';\nimport type {PropertyValidationOptions} from './validate_property.js';\n\nexport default function validatePaintProperty(options: PropertyValidationOptions): Array<ValidationError> {\n    return validateProperty(options, 'paint');\n}\n","// @flow\n\nimport validateProperty from './validate_property.js';\n\nimport type ValidationError from '../error/validation_error.js';\nimport type {PropertyValidationOptions} from './validate_property.js';\n\nexport default function validateLayoutProperty(options: PropertyValidationOptions): Array<ValidationError> {\n    return validateProperty(options, 'layout');\n}\n","// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport {unbundle} from '../util/unbundle_jsonlint.js';\nimport validateObject from './validate_object.js';\nimport validateFilter from './validate_filter.js';\nimport validatePaintProperty from './validate_paint_property.js';\nimport validateLayoutProperty from './validate_layout_property.js';\nimport validateSpec from './validate.js';\nimport extend from '../util/extend.js';\n\nimport type {ValidationOptions} from './validate.js';\nimport type {LayerSpecification} from '../types.js';\n\ntype Options = ValidationOptions & {\n    value: LayerSpecification;\n    arrayIndex: number;\n}\n\nexport default function validateLayer(options: Options): Array<ValidationError> {\n    let errors = [];\n\n    const layer = options.value;\n    const key = options.key;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n\n    if (!layer.type && !layer.ref) {\n        errors.push(new ValidationError(key, layer, 'either \"type\" or \"ref\" is required'));\n    }\n    let type = unbundle(layer.type);\n    const ref = unbundle(layer.ref);\n\n    if (layer.id) {\n        const layerId = unbundle(layer.id);\n        for (let i = 0; i < options.arrayIndex; i++) {\n            const otherLayer = style.layers[i];\n            if (unbundle(otherLayer.id) === layerId) {\n                // $FlowFixMe[prop-missing] - id.__line__ is added dynamically during the readStyle step\n                errors.push(new ValidationError(key, layer.id, `duplicate layer id \"${layer.id}\", previously used at line ${otherLayer.id.__line__}`));\n            }\n        }\n    }\n\n    if ('ref' in layer) {\n        ['type', 'source', 'source-layer', 'filter', 'layout'].forEach((p) => {\n            if (p in layer) {\n                errors.push(new ValidationError(key, layer[p], `\"${p}\" is prohibited for ref layers`));\n            }\n        });\n\n        let parent;\n\n        style.layers.forEach((layer) => {\n            if (unbundle(layer.id) === ref) parent = layer;\n        });\n\n        if (!parent) {\n            if (typeof ref === 'string')\n                errors.push(new ValidationError(key, layer.ref, `ref layer \"${ref}\" not found`));\n        } else if (parent.ref) {\n            errors.push(new ValidationError(key, layer.ref, 'ref cannot reference another ref layer'));\n        } else {\n            type = unbundle(parent.type);\n        }\n    } else if (!(type === 'background' || type === 'sky')) {\n        if (!layer.source) {\n            errors.push(new ValidationError(key, layer, 'missing required property \"source\"'));\n        } else {\n            const source = style.sources && style.sources[layer.source];\n            const sourceType = source && unbundle(source.type);\n            if (!source) {\n                errors.push(new ValidationError(key, layer.source, `source \"${layer.source}\" not found`));\n            } else if (sourceType === 'vector' && type === 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a raster source`));\n            } else if (sourceType === 'raster' && type !== 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a vector source`));\n            } else if (sourceType === 'vector' && !layer['source-layer']) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id}\" must specify a \"source-layer\"`));\n            } else if (sourceType === 'raster-dem' && type !== 'hillshade') {\n                errors.push(new ValidationError(key, layer.source, 'raster-dem source can only be used with layer type \\'hillshade\\'.'));\n            } else if (type === 'line' && layer.paint && (layer.paint['line-gradient'] || layer.paint['line-trim-offset']) &&\n                       (sourceType !== 'geojson' || !source.lineMetrics)) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id}\" specifies a line-gradient, which requires a GeoJSON source with \\`lineMetrics\\` enabled.`));\n            }\n        }\n    }\n\n    errors = errors.concat(validateObject({\n        key,\n        value: layer,\n        valueSpec: styleSpec.layer,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        objectElementValidators: {\n            '*'() {\n                return [];\n            },\n            // We don't want to enforce the spec's `\"requires\": true` for backward compatibility with refs;\n            // the actual requirement is validated above. See https://github.com/mapbox/mapbox-gl-js/issues/5772.\n            type() {\n                return validateSpec({\n                    key: `${key}.type`,\n                    value: layer.type,\n                    valueSpec: styleSpec.layer.type,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    object: layer,\n                    objectKey: 'type'\n                });\n            },\n            filter(options) {\n                return validateFilter(extend({layerType: type}, options));\n            },\n            layout(options) {\n                return validateObject({\n                    layer,\n                    key: options.key,\n                    value: options.value,\n                    valueSpec: {},\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validateLayoutProperty(extend({layerType: type}, options));\n                        }\n                    }\n                });\n            },\n            paint(options) {\n                return validateObject({\n                    layer,\n                    key: options.key,\n                    value: options.value,\n                    valueSpec: {},\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validatePaintProperty(extend({layerType: type}, options));\n                        }\n                    }\n                });\n            }\n        }\n    }));\n\n    return errors;\n}\n","// @flow\n\nimport getType from '../util/get_type.js';\nimport ValidationError from '../error/validation_error.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport default function validateString(options: $Shape<ValidationOptions>): Array<ValidationError> {\n    const value = options.value;\n    const key = options.key;\n    const type = getType(value);\n\n    if (type !== 'string') {\n        return [new ValidationError(key, value, `string expected, ${type} found`)];\n    }\n\n    return [];\n}\n","// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport {unbundle} from '../util/unbundle_jsonlint.js';\nimport validateObject from './validate_object.js';\nimport validateEnum from './validate_enum.js';\nimport validateExpression from './validate_expression.js';\nimport validateString from './validate_string.js';\nimport getType from '../util/get_type.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nconst objectElementValidators = {\n    promoteId: validatePromoteId\n};\n\nexport default function validateSource(options: ValidationOptions): Array<ValidationError> {\n    const value = options.value;\n    const key = options.key;\n    const styleSpec = options.styleSpec;\n    const style = options.style;\n\n    if (!value.type) {\n        return [new ValidationError(key, value, '\"type\" is required')];\n    }\n\n    const type = unbundle(value.type);\n    let errors;\n\n    switch (type) {\n    case 'vector':\n    case 'raster':\n    case 'raster-dem':\n        errors = validateObject({\n            key,\n            value,\n            valueSpec: styleSpec[`source_${type.replace('-', '_')}`],\n            style: options.style,\n            styleSpec,\n            objectElementValidators\n        });\n        return errors;\n\n    case 'geojson':\n        errors = validateObject({\n            key,\n            value,\n            valueSpec: styleSpec.source_geojson,\n            style,\n            styleSpec,\n            objectElementValidators\n        });\n        if (value.cluster) {\n            for (const prop in value.clusterProperties) {\n                const [operator, mapExpr] = value.clusterProperties[prop];\n                const reduceExpr = typeof operator === 'string' ? [operator, ['accumulated'], ['get', prop]] : operator;\n\n                errors.push(...validateExpression({\n                    key: `${key}.${prop}.map`,\n                    value: mapExpr,\n                    expressionContext: 'cluster-map'\n                }));\n                errors.push(...validateExpression({\n                    key: `${key}.${prop}.reduce`,\n                    value: reduceExpr,\n                    expressionContext: 'cluster-reduce'\n                }));\n            }\n        }\n        return errors;\n\n    case 'video':\n        return validateObject({\n            key,\n            value,\n            valueSpec: styleSpec.source_video,\n            style,\n            styleSpec\n        });\n\n    case 'image':\n        return validateObject({\n            key,\n            value,\n            valueSpec: styleSpec.source_image,\n            style,\n            styleSpec\n        });\n\n    case 'canvas':\n        return [new ValidationError(key, null, `Please use runtime APIs to add canvas sources, rather than including them in stylesheets.`, 'source.canvas')];\n\n    default:\n        return validateEnum({\n            key: `${key}.type`,\n            value: value.type,\n            valueSpec: {values: ['vector', 'raster', 'raster-dem', 'geojson', 'video', 'image']},\n            style,\n            styleSpec\n        });\n    }\n}\n\nfunction validatePromoteId({key, value}) {\n    if (getType(value) === 'string') {\n        return validateString({key, value});\n    } else {\n        const errors = [];\n        for (const prop in value) {\n            errors.push(...validateString({key: `${key}.${prop}`, value: value[prop]}));\n        }\n        return errors;\n    }\n}\n","// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport getType from '../util/get_type.js';\nimport validate from './validate.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport default function validateLight(options: ValidationOptions): Array<ValidationError> {\n    const light = options.value;\n    const styleSpec = options.styleSpec;\n    const lightSpec = styleSpec.light;\n    const style = options.style;\n\n    let errors = [];\n\n    const rootType = getType(light);\n    if (light === undefined) {\n        return errors;\n    } else if (rootType !== 'object') {\n        errors = errors.concat([new ValidationError('light', light, `object expected, ${rootType} found`)]);\n        return errors;\n    }\n\n    for (const key in light) {\n        const transitionMatch = key.match(/^(.*)-transition$/);\n\n        if (transitionMatch && lightSpec[transitionMatch[1]] && lightSpec[transitionMatch[1]].transition) {\n            errors = errors.concat(validate({\n                key,\n                value: light[key],\n                valueSpec: styleSpec.transition,\n                style,\n                styleSpec\n            }));\n        } else if (lightSpec[key]) {\n            errors = errors.concat(validate({\n                key,\n                value: light[key],\n                valueSpec: lightSpec[key],\n                style,\n                styleSpec\n            }));\n        } else {\n            errors = errors.concat([new ValidationError(key, light[key], `unknown property \"${key}\"`)]);\n        }\n    }\n\n    return errors;\n}\n","// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport validate from './validate.js';\nimport getType from '../util/get_type.js';\nimport {unbundle} from '../util/unbundle_jsonlint.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport default function validateTerrain(options: ValidationOptions): Array<ValidationError> {\n    const terrain = options.value;\n    const key = options.key;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const terrainSpec = styleSpec.terrain;\n    let errors = [];\n\n    const rootType = getType(terrain);\n    if (terrain === undefined) {\n        return errors;\n    } else if (rootType !== 'object') {\n        errors = errors.concat([new ValidationError('terrain', terrain, `object expected, ${rootType} found`)]);\n        return errors;\n    }\n\n    for (const key in terrain) {\n        const transitionMatch = key.match(/^(.*)-transition$/);\n\n        if (transitionMatch && terrainSpec[transitionMatch[1]] && terrainSpec[transitionMatch[1]].transition) {\n            errors = errors.concat(validate({\n                key,\n                value: terrain[key],\n                valueSpec: styleSpec.transition,\n                style,\n                styleSpec\n            }));\n        } else if (terrainSpec[key]) {\n            errors = errors.concat(validate({\n                key,\n                value: terrain[key],\n                valueSpec: terrainSpec[key],\n                style,\n                styleSpec\n            }));\n        } else {\n            errors = errors.concat([new ValidationError(key, terrain[key], `unknown property \"${key}\"`)]);\n        }\n    }\n\n    if (!terrain.source) {\n        errors.push(new ValidationError(key, terrain, `terrain is missing required property \"source\"`));\n    } else {\n        const source = style.sources && style.sources[terrain.source];\n        const sourceType = source && unbundle(source.type);\n        if (!source) {\n            errors.push(new ValidationError(key, terrain.source, `source \"${terrain.source}\" not found`));\n        } else if (sourceType !== 'raster-dem') {\n            errors.push(new ValidationError(key, terrain.source, `terrain cannot be used with a source of type ${String(sourceType)}, it only be used with a \"raster-dem\" source type`));\n        }\n    }\n\n    return errors;\n}\n","// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport validate from './validate.js';\nimport getType from '../util/get_type.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport default function validateFog(options: ValidationOptions): Array<ValidationError> {\n    const fog = options.value;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const fogSpec = styleSpec.fog;\n    let errors = [];\n\n    const rootType = getType(fog);\n    if (fog === undefined) {\n        return errors;\n    } else if (rootType !== 'object') {\n        errors = errors.concat([new ValidationError('fog', fog, `object expected, ${rootType} found`)]);\n        return errors;\n    }\n\n    for (const key in fog) {\n        const transitionMatch = key.match(/^(.*)-transition$/);\n\n        if (transitionMatch && fogSpec[transitionMatch[1]] && fogSpec[transitionMatch[1]].transition) {\n            errors = errors.concat(validate({\n                key,\n                value: fog[key],\n                valueSpec: styleSpec.transition,\n                style,\n                styleSpec\n            }));\n        } else if (fogSpec[key]) {\n            errors = errors.concat(validate({\n                key,\n                value: fog[key],\n                valueSpec: fogSpec[key],\n                style,\n                styleSpec\n            }));\n        } else {\n            errors = errors.concat([new ValidationError(key, fog[key], `unknown property \"${key}\"`)]);\n        }\n    }\n\n    return errors;\n}\n","// @flow\n\nimport validateExpression from './validate_expression.js';\nimport validateString from './validate_string.js';\n\nimport type {ValidationOptions} from './validate.js';\nimport type ValidationError from '../error/validation_error.js';\n\nexport default function validateFormatted(options: ValidationOptions): Array<ValidationError> {\n    if (validateString(options).length === 0) {\n        return [];\n    }\n\n    return validateExpression(options);\n}\n","// @flow\n\nimport validateExpression from './validate_expression.js';\nimport validateString from './validate_string.js';\n\nimport type {ValidationOptions} from './validate.js';\nimport type ValidationError from '../error/validation_error.js';\n\nexport default function validateImage(options: ValidationOptions): Array<ValidationError> {\n    if (validateString(options).length === 0) {\n        return [];\n    }\n\n    return validateExpression(options);\n}\n","// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport getType from '../util/get_type.js';\nimport validate from './validate.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport default function validateProjection(options: ValidationOptions): Array<ValidationError> {\n    const projection = options.value;\n    const styleSpec = options.styleSpec;\n    const projectionSpec = styleSpec.projection;\n    const style = options.style;\n\n    let errors = [];\n\n    const rootType = getType(projection);\n\n    if (rootType === 'object') {\n        for (const key in projection) {\n            errors = errors.concat(validate({\n                key,\n                value: projection[key],\n                valueSpec: projectionSpec[key],\n                style,\n                styleSpec\n            }));\n        }\n    } else if (rootType !== 'string') {\n        errors = errors.concat([new ValidationError('projection', projection, `object or string expected, ${rootType} found`)]);\n    }\n\n    return errors;\n}\n","// @flow\n\nimport extend from '../util/extend.js';\nimport {unbundle, deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport {isExpression} from '../expression/index.js';\nimport {isFunction} from '../function/index.js';\n\nimport validateFunction from './validate_function.js';\nimport validateExpression from './validate_expression.js';\nimport validateObject from './validate_object.js';\nimport validateArray from './validate_array.js';\nimport validateBoolean from './validate_boolean.js';\nimport validateNumber from './validate_number.js';\nimport validateColor from './validate_color.js';\nimport validateEnum from './validate_enum.js';\nimport validateFilter from './validate_filter.js';\nimport validateLayer from './validate_layer.js';\nimport validateSource from './validate_source.js';\nimport validateLight from './validate_light.js';\nimport validateTerrain from './validate_terrain.js';\nimport validateFog from './validate_fog.js';\nimport validateString from './validate_string.js';\nimport validateFormatted from './validate_formatted.js';\nimport validateImage from './validate_image.js';\nimport validateProjection from './validate_projection.js';\n\nimport type {StyleReference} from '../reference/latest.js';\nimport type {StyleSpecification} from '../types.js';\nimport type ValidationError from '../error/validation_error.js';\n\nconst VALIDATORS = {\n    '*'() {\n        return [];\n    },\n    'array': validateArray,\n    'boolean': validateBoolean,\n    'number': validateNumber,\n    'color': validateColor,\n    'enum': validateEnum,\n    'filter': validateFilter,\n    'function': validateFunction,\n    'layer': validateLayer,\n    'object': validateObject,\n    'source': validateSource,\n    'light': validateLight,\n    'terrain': validateTerrain,\n    'fog': validateFog,\n    'string': validateString,\n    'formatted': validateFormatted,\n    'resolvedImage': validateImage,\n    'projection': validateProjection\n};\n\n// Main recursive validation function. Tracks:\n//\n// - key: string representing location of validation in style tree. Used only\n//   for more informative error reporting.\n// - value: current value from style being evaluated. May be anything from a\n//   high level object that needs to be descended into deeper or a simple\n//   scalar value.\n// - valueSpec: current spec being evaluated. Tracks value.\n// - styleSpec: current full spec being evaluated.\nexport type ValidationOptions = {\n    key: string;\n    value: Object;\n    valueSpec: Object;\n    style: $Shape<StyleSpecification>;\n    styleSpec: StyleReference;\n}\n\nexport default function validate(options: ValidationOptions): Array<ValidationError> {\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const styleSpec = options.styleSpec;\n\n    if (valueSpec.expression && isFunction(unbundle(value))) {\n        return validateFunction(options);\n\n    } else if (valueSpec.expression && isExpression(deepUnbundle(value))) {\n        return validateExpression(options);\n\n    } else if (valueSpec.type && VALIDATORS[valueSpec.type]) {\n        return VALIDATORS[valueSpec.type](options);\n\n    } else {\n        const valid = validateObject(extend({}, options, {\n            valueSpec: valueSpec.type ? styleSpec[valueSpec.type] : valueSpec\n        }));\n        return valid;\n    }\n}\n","// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport validateString from './validate_string.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport default function(options: ValidationOptions): Array<ValidationError> {\n    const value = options.value;\n    const key = options.key;\n\n    const errors = validateString(options);\n    if (errors.length) return errors;\n\n    if (value.indexOf('{fontstack}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{fontstack}\" token'));\n    }\n\n    if (value.indexOf('{range}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{range}\" token'));\n    }\n\n    return errors;\n}\n","// @flow\nimport validate from './validate/validate.js';\nimport latestStyleSpec from './reference/latest.js';\nimport validateGlyphsURL from './validate/validate_glyphs_url.js';\n\nimport _validateSource from './validate/validate_source.js';\nimport _validateLight from './validate/validate_light.js';\nimport _validateTerrain from './validate/validate_terrain.js';\nimport _validateFog from './validate/validate_fog.js';\nimport _validateLayer from './validate/validate_layer.js';\nimport _validateFilter from './validate/validate_filter.js';\nimport _validatePaintProperty from './validate/validate_paint_property.js';\nimport _validateLayoutProperty from './validate/validate_layout_property.js';\n\nimport type {StyleSpecification} from './types.js';\n\nexport type ValidationError = {\n    message: string;\n    identifier?: ?string;\n    line?: ?number;\n};\nexport type ValidationErrors = $ReadOnlyArray<ValidationError>;\nexport type Validator = (Object) => ValidationErrors;\n\n/**\n * Validate a Mapbox GL style against the style specification. This entrypoint,\n * `mapbox-gl-style-spec/lib/validate_style.min`, is designed to produce as\n * small a browserify bundle as possible by omitting unnecessary functionality\n * and legacy style specifications.\n *\n * @private\n * @param {Object} style The style to be validated.\n * @param {Object} [styleSpec] The style specification to validate against.\n *     If omitted, the latest style spec is used.\n * @returns {Array<ValidationError>}\n * @example\n *   var validate = require('mapbox-gl-style-spec/lib/validate_style.min');\n *   var errors = validate(style);\n */\nexport function validateStyle(style: StyleSpecification, styleSpec: Object = latestStyleSpec): ValidationErrors {\n\n    const errors = validate({\n        key: '',\n        value: style,\n        valueSpec: styleSpec.$root,\n        styleSpec,\n        style,\n        objectElementValidators: {\n            glyphs: validateGlyphsURL,\n            '*': () => []\n        }\n    });\n    return sortErrors(errors);\n}\n\nexport const validateSource: Validator = opts => sortErrors(_validateSource(opts));\nexport const validateLight: Validator = opts => sortErrors(_validateLight(opts));\nexport const validateTerrain: Validator = opts => sortErrors(_validateTerrain(opts));\nexport const validateFog: Validator = opts => sortErrors(_validateFog(opts));\nexport const validateLayer: Validator = opts => sortErrors(_validateLayer(opts));\nexport const validateFilter: Validator = opts => sortErrors(_validateFilter(opts));\nexport const validatePaintProperty: Validator = opts => sortErrors(_validatePaintProperty(opts));\nexport const validateLayoutProperty: Validator = opts => sortErrors(_validateLayoutProperty(opts));\n\nfunction sortErrors(errors) {\n    return errors.slice().sort((a, b) => a.line && b.line ? a.line - b.line : 0);\n}\n","/* parser generated by jison 0.4.15 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,12],$V1=[1,13],$V2=[1,9],$V3=[1,10],$V4=[1,11],$V5=[1,14],$V6=[1,15],$V7=[14,18,22,24],$V8=[18,22],$V9=[22,24];\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"JSONString\":3,\"STRING\":4,\"JSONNumber\":5,\"NUMBER\":6,\"JSONNullLiteral\":7,\"NULL\":8,\"JSONBooleanLiteral\":9,\"TRUE\":10,\"FALSE\":11,\"JSONText\":12,\"JSONValue\":13,\"EOF\":14,\"JSONObject\":15,\"JSONArray\":16,\"{\":17,\"}\":18,\"JSONMemberList\":19,\"JSONMember\":20,\":\":21,\",\":22,\"[\":23,\"]\":24,\"JSONElementList\":25,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"STRING\",6:\"NUMBER\",8:\"NULL\",10:\"TRUE\",11:\"FALSE\",14:\"EOF\",17:\"{\",18:\"}\",21:\":\",22:\",\",23:\"[\",24:\"]\"},\nproductions_: [0,[3,1],[5,1],[7,1],[9,1],[9,1],[12,2],[13,1],[13,1],[13,1],[13,1],[13,1],[13,1],[15,2],[15,3],[20,3],[19,1],[19,3],[16,2],[16,3],[25,1],[25,3]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n // replace escaped characters with actual character\n          this.$ = new String(yytext.replace(/\\\\(\\\\|\")/g, \"$\"+\"1\")\n                     .replace(/\\\\n/g,'\\n')\n                     .replace(/\\\\r/g,'\\r')\n                     .replace(/\\\\t/g,'\\t')\n                     .replace(/\\\\v/g,'\\v')\n                     .replace(/\\\\f/g,'\\f')\n                     .replace(/\\\\b/g,'\\b'));\n          this.$.__line__ =  this._$.first_line;\n        \nbreak;\ncase 2:\n\n            this.$ = new Number(yytext);\n            this.$.__line__ =  this._$.first_line;\n        \nbreak;\ncase 3:\n\n            this.$ = null;\n        \nbreak;\ncase 4:\n\n            this.$ = new Boolean(true);\n            this.$.__line__ = this._$.first_line;\n        \nbreak;\ncase 5:\n\n            this.$ = new Boolean(false);\n            this.$.__line__ = this._$.first_line;\n        \nbreak;\ncase 6:\nreturn this.$ = $$[$0-1];\nbreak;\ncase 13:\nthis.$ = {}; Object.defineProperty(this.$, '__line__', {\n            value: this._$.first_line,\n            enumerable: false\n        })\nbreak;\ncase 14: case 19:\nthis.$ = $$[$0-1]; Object.defineProperty(this.$, '__line__', {\n            value: this._$.first_line,\n            enumerable: false\n        })\nbreak;\ncase 15:\nthis.$ = [$$[$0-2], $$[$0]];\nbreak;\ncase 16:\nthis.$ = {}; this.$[$$[$0][0]] = $$[$0][1];\nbreak;\ncase 17:\nthis.$ = $$[$0-2]; $$[$0-2][$$[$0][0]] = $$[$0][1];\nbreak;\ncase 18:\nthis.$ = []; Object.defineProperty(this.$, '__line__', {\n            value: this._$.first_line,\n            enumerable: false\n        })\nbreak;\ncase 20:\nthis.$ = [$$[$0]];\nbreak;\ncase 21:\nthis.$ = $$[$0-2]; $$[$0-2].push($$[$0]);\nbreak;\n}\n},\ntable: [{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,12:1,13:2,15:7,16:8,17:$V5,23:$V6},{1:[3]},{14:[1,16]},o($V7,[2,7]),o($V7,[2,8]),o($V7,[2,9]),o($V7,[2,10]),o($V7,[2,11]),o($V7,[2,12]),o($V7,[2,3]),o($V7,[2,4]),o($V7,[2,5]),o([14,18,21,22,24],[2,1]),o($V7,[2,2]),{3:20,4:$V0,18:[1,17],19:18,20:19},{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,13:23,15:7,16:8,17:$V5,23:$V6,24:[1,21],25:22},{1:[2,6]},o($V7,[2,13]),{18:[1,24],22:[1,25]},o($V8,[2,16]),{21:[1,26]},o($V7,[2,18]),{22:[1,28],24:[1,27]},o($V9,[2,20]),o($V7,[2,14]),{3:20,4:$V0,20:29},{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,13:30,15:7,16:8,17:$V5,23:$V6},o($V7,[2,19]),{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,13:31,15:7,16:8,17:$V5,23:$V6},o($V8,[2,17]),o($V8,[2,15]),o($V9,[2,21])],\ndefaultActions: {16:[2,6]},\nparseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        throw new Error(str);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        function lex() {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip whitespace */\nbreak;\ncase 1:return 6\nbreak;\ncase 2:yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 4\nbreak;\ncase 3:return 17\nbreak;\ncase 4:return 18\nbreak;\ncase 5:return 23\nbreak;\ncase 6:return 24\nbreak;\ncase 7:return 22\nbreak;\ncase 8:return 21\nbreak;\ncase 9:return 10\nbreak;\ncase 10:return 11\nbreak;\ncase 11:return 8\nbreak;\ncase 12:return 14\nbreak;\ncase 13:return 'INVALID'\nbreak;\n}\n},\nrules: [/^(?:\\s+)/,/^(?:(-?([0-9]|[1-9][0-9]+))(\\.[0-9]+)?([eE][-+]?[0-9]+)?\\b)/,/^(?:\"(?:\\\\[\\\\\"bfnrt/]|\\\\u[a-fA-F0-9]{4}|[^\\\\\\0-\\x09\\x0a-\\x1f\"])*\")/,/^(?:\\{)/,/^(?:\\})/,/^(?:\\[)/,/^(?:\\])/,/^(?:,)/,/^(?::)/,/^(?:true\\b)/,/^(?:false\\b)/,/^(?:null\\b)/,/^(?:$)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = parser;\nexports.Parser = parser.Parser;\nexports.parse = function () { return parser.parse.apply(parser, arguments); };\n}\n","import ParsingError from './error/parsing_error.js';\nimport jsonlint from '@mapbox/jsonlint-lines-primitives';\n\nexport default function readStyle(style) {\n    if (style instanceof String || typeof style === 'string' || style instanceof Buffer) {\n        try {\n            return jsonlint.parse(style.toString());\n        } catch (e) {\n            throw new ParsingError(e);\n        }\n    }\n\n    return style;\n}\n","// @flow\nimport {validateStyle as validateStyleMin} from './validate_style.min.js';\nimport {v8} from './style-spec.js';\nimport readStyle from './read_style.js';\n\nimport type {ValidationErrors} from './validate_style.min.js';\nimport type {StyleSpecification} from './types.js';\n\n/**\n * Validate a Mapbox GL style against the style specification.\n *\n * @private\n * @alias validate\n * @param {Object|String|Buffer} style The style to be validated. If a `String`\n *     or `Buffer` is provided, the returned errors will contain line numbers.\n * @param {Object} [styleSpec] The style specification to validate against.\n *     If omitted, the spec version is inferred from the stylesheet.\n * @returns {Array<ValidationError|ParsingError>}\n * @example\n *   var validate = require('mapbox-gl-style-spec').validate;\n *   var style = fs.readFileSync('./style.json', 'utf8');\n *   var errors = validate(style);\n */\n\nexport default function validateStyle(style: StyleSpecification | string | Buffer, styleSpec: Object = v8): ValidationErrors {\n    let s = style;\n\n    try {\n        s = readStyle(s);\n    } catch (e) {\n        return [e];\n    }\n\n    return validateStyleMin(s, styleSpec);\n}\n\nexport {\n    validateSource as source,\n    validateLight as light,\n    validateLayer as layer,\n    validateFilter as filter,\n    validatePaintProperty as paintProperty,\n    validateLayoutProperty as layoutProperty\n} from './validate_style.min.js';\n","// @flow\n\nimport {validateStyle} from './validate_style.min.js';\nimport {v8} from './style-spec.js';\nimport readStyle from './read_style.js';\nimport ValidationError from './error/validation_error.js';\nimport getType from './util/get_type.js';\n\nimport type {ValidationErrors} from './validate_style.min.js';\n\nconst SUPPORTED_SPEC_VERSION = 8;\nconst MAX_SOURCES_IN_STYLE = 15;\n\nfunction isValid(value: ?string, regex: RegExp): boolean {\n    if (!value || getType(value) !== 'string') return true;\n    return !!value.match(regex);\n}\n\nfunction getSourceCount(source: Object): number {\n    if (source.url) {\n        return source.url.split(',').length;\n    } else {\n        return 0;\n    }\n}\n\nfunction getAllowedKeyErrors(obj: Object, keys: Array<*>, path: ?string): Array<ValidationError> {\n    const allowed = new Set(keys);\n    const errors = [];\n    Object.keys(obj).forEach(k => {\n        if (!allowed.has(k)) {\n            const prop = path ? `${path}.${k}` : null;\n            errors.push(new ValidationError(prop, obj[k], `Unsupported property \"${k}\"`));\n        }\n    });\n    return errors;\n}\n\nconst acceptedSourceTypes = new Set([\"vector\", \"raster\", \"raster-dem\"]);\nfunction getSourceErrors(source: Object, i: number): Array<ValidationError> {\n    const errors = [];\n\n    /*\n     * Inlined sources are not supported by the Mapbox Styles API, so only\n     * \"type\", \"url\", and \"tileSize\" properties are valid\n     */\n    const sourceKeys = ['type', 'url', 'tileSize'];\n    errors.push(...getAllowedKeyErrors(source, sourceKeys, 'source'));\n\n    /*\n     * \"type\" is required and must be one of \"vector\", \"raster\", \"raster-dem\"\n     */\n    if (!acceptedSourceTypes.has(String(source.type))) {\n        errors.push(new ValidationError(`sources[${i}].type`, source.type, `Expected one of [${Array.from(acceptedSourceTypes).join(\", \")}]`));\n    }\n\n    /*\n     * \"source\" is required. Valid examples:\n     * mapbox://mapbox.abcd1234\n     * mapbox://penny.abcd1234\n     * mapbox://mapbox.abcd1234,penny.abcd1234\n     */\n    const sourceUrlPattern = /^mapbox:\\/\\/([^/]*)$/;\n    if (!source.url || !isValid(source.url, sourceUrlPattern)) {\n        errors.push(new ValidationError(`sources[${i}].url`, source.url, 'Expected a valid Mapbox tileset url'));\n    }\n\n    return errors;\n}\n\nfunction getSourcesErrors(sources: Object): Array<ValidationError> {\n    const errors = [];\n    let count = 0;\n\n    Object.keys(sources).forEach((s: string, i: number) => {\n        const sourceErrors = getSourceErrors(sources[s], i);\n\n        // If source has errors, skip counting\n        if (!sourceErrors.length) {\n            count = count + getSourceCount(sources[s]);\n        }\n\n        errors.push(...sourceErrors);\n    });\n\n    if (count > MAX_SOURCES_IN_STYLE) {\n        errors.push(new ValidationError('sources', null, `Styles must contain ${MAX_SOURCES_IN_STYLE} or fewer sources`));\n    }\n\n    return errors;\n}\n\nfunction getRootErrors(style: Object, specKeys: Array<any>): Array<ValidationError> {\n    const errors = [];\n\n    /*\n     * The following keys are optional but fully managed by the Mapbox Styles\n     * API. Values on stylesheet on POST or PATCH will be ignored: \"owner\",\n     * \"id\", \"cacheControl\", \"draft\", \"created\", \"modified\", \"protected\"\n     *\n     * The following keys are optional. The Mapbox Styles API respects value on\n     * stylesheet on PATCH, but ignores the value on POST: \"visibility\"\n     */\n    const optionalRootProperties = [\n        'owner',\n        'id',\n        'cacheControl',\n        'draft',\n        'created',\n        'modified',\n        'visibility',\n        'protected'\n    ];\n\n    const allowedKeyErrors = getAllowedKeyErrors(style, [...specKeys, ...optionalRootProperties]);\n    errors.push(...allowedKeyErrors);\n\n    if (style.version > SUPPORTED_SPEC_VERSION || style.version < SUPPORTED_SPEC_VERSION) {\n        errors.push(new ValidationError('version', style.version, `Style version must be ${SUPPORTED_SPEC_VERSION}`));\n    }\n\n    /*\n     * \"glyphs\" is optional. If present, valid examples:\n     * mapbox://fonts/penny/{fontstack}/{range}.pbf\n     * mapbox://fonts/mapbox/{fontstack}/{range}.pbf\n     */\n    const glyphUrlPattern = /^mapbox:\\/\\/fonts\\/([^/]*)\\/{fontstack}\\/{range}.pbf$/;\n    if (!isValid(style.glyphs, glyphUrlPattern)) {\n        errors.push(new ValidationError('glyphs', style.glyphs, 'Styles must reference glyphs hosted by Mapbox'));\n    }\n\n    /*\n     * \"sprite\" is optional. If present, valid examples:\n     * mapbox://sprites/penny/abcd1234\n     * mapbox://sprites/mapbox/abcd1234/draft\n     * mapbox://sprites/cyrus/abcd1234/abcd1234\n     */\n    const spriteUrlPattern = /^mapbox:\\/\\/sprites\\/([^/]*)\\/([^/]*)\\/?([^/]*)?$/;\n    if (!isValid(style.sprite, spriteUrlPattern)) {\n        errors.push(new ValidationError('sprite', style.sprite, 'Styles must reference sprites hosted by Mapbox'));\n    }\n\n    /*\n     * \"visibility\" is optional. If present, valid examples:\n     * \"private\"\n     * \"public\"\n     */\n    const visibilityPattern = /^(public|private)$/;\n    if (!isValid(style.visibility, visibilityPattern)) {\n        errors.push(new ValidationError('visibility', style.visibility, 'Style visibility must be public or private'));\n    }\n\n    if (style.protected !== undefined && getType(style.protected) !== 'boolean') {\n        errors.push(new ValidationError('protected', style.protected, 'Style protection must be true or false'));\n    }\n\n    return errors;\n}\n\n/**\n * Validate a Mapbox GL style against the style specification and check for\n * compatibility with the Mapbox Styles API.\n *\n * @param {Object} style The style to be validated.\n * @returns {Array<ValidationError>}\n * @example\n *   var validateMapboxApiSupported = require('mapbox-gl-style-spec/lib/validate_style_mapbox_api_supported.js');\n *   var errors = validateMapboxApiSupported(style);\n */\nexport default function validateMapboxApiSupported(style: Object): ValidationErrors {\n    let s = style;\n    try {\n        s = readStyle(s);\n    } catch (e) {\n        return [e];\n    }\n\n    let errors = validateStyle(s, v8)\n        .concat(getRootErrors(s, Object.keys(v8.$root)));\n\n    if (s.sources) {\n        errors = errors.concat(getSourcesErrors(s.sources));\n    }\n\n    return errors;\n}\n\n","// @flow\n\ntype ExpressionType = 'data-driven' | 'cross-faded' | 'cross-faded-data-driven' | 'color-ramp' | 'data-constant' | 'constant';\ntype ExpressionParameters = Array<'zoom' | 'feature' | 'feature-state' | 'heatmap-density' | 'line-progress' | 'sky-radial-progress' | 'pitch' | 'distance-from-center'>;\n\ntype ExpressionSpecification = {\n    interpolated: boolean,\n    parameters: ExpressionParameters\n}\n\nexport type StylePropertySpecification = {\n    type: 'number',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition: boolean,\n    default?: number\n} | {\n    type: 'string',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition: boolean,\n    default?: string,\n    tokens?: boolean\n} | {\n    type: 'boolean',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition: boolean,\n    default?: boolean\n} | {\n    type: 'enum',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    values: {[_: string]: {}},\n    transition: boolean,\n    default?: string\n} | {\n    type: 'color',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition: boolean,\n    default?: string,\n    overridable: boolean\n} | {\n    type: 'array',\n    value: 'number',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    length?: number,\n    transition: boolean,\n    default?: Array<number>\n} | {\n    type: 'array',\n    value: 'string',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    length?: number,\n    transition: boolean,\n    default?: Array<string>\n} | {\n    type: 'resolvedImage',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition: boolean,\n    default?: string\n};\n\nimport v8 from './reference/v8.json';\nimport latest from './reference/latest.js';\nimport format from './format.js';\nimport migrate from './migrate.js';\nimport composite from './composite.js';\nimport derefLayers from './deref.js';\nimport diff from './diff.js';\nimport ValidationError from './error/validation_error.js';\nimport ParsingError from './error/parsing_error.js';\nimport {StyleExpression, isExpression, createExpression, createPropertyExpression, normalizePropertyExpression, ZoomConstantExpression, ZoomDependentExpression, StylePropertyFunction} from './expression/index.js';\nimport featureFilter, {isExpressionFilter} from './feature_filter/index.js';\n\nimport convertFilter from './feature_filter/convert.js';\nimport Color from './util/color.js';\nimport {createFunction, isFunction} from './function/index.js';\nimport convertFunction from './function/convert.js';\nimport {eachSource, eachLayer, eachProperty} from './visit.js';\n\nimport validate from './validate_style.js';\nimport validateMapboxApiSupported from './validate_mapbox_api_supported.js';\n\nconst expression = {\n    StyleExpression,\n    isExpression,\n    isExpressionFilter,\n    createExpression,\n    createPropertyExpression,\n    normalizePropertyExpression,\n    ZoomConstantExpression,\n    ZoomDependentExpression,\n    StylePropertyFunction\n};\n\nconst styleFunction = {\n    convertFunction,\n    createFunction,\n    isFunction\n};\n\nconst visit = {eachSource, eachLayer, eachProperty};\n\nexport {\n    v8,\n    latest,\n    format,\n    migrate,\n    composite,\n    derefLayers,\n    diff,\n    ValidationError,\n    ParsingError,\n    expression,\n    featureFilter,\n    convertFilter,\n    Color,\n    styleFunction as function,\n    validate,\n    validateMapboxApiSupported,\n    visit\n};\n"],"names":["stringOrChar","module","stringify","passedObj","options","indent","maxLength","replacer","JSON","undefined","slice","Infinity","_stringify","obj","currentIndent","reserved","end","index","items","key","keyPart","keys","length","nextIndent","prettified","start","string","value","toJSON","replace","match","stringLiteral","parse","Array","isArray","push","Object","join","sortKeysBy","reference","result","format","style","space","$root","layers","map","layer","stringifyPretty","global","this","require$$0","require$$1","getPropertyReference","propertyName","i","Reference","layout","paint","eachSource","callback","k","sources","eachLayer","eachProperty","inner","propertyType","properties","forEach","path","id","set","x","eachLayout","indexOf","eachPaint","resolveConstant","constants","isFunction","stops","renameProperty","from","to","version","source","type","url","coordinates","coord","reverse","property","stop","migrateFontstackURL","input","inputParsed","URL","inputPathnameParts","pathname","split","protocol","hostname","glyphs","migrateFontStack","font","splitAndTrim","s","trim","Error","firstSymbolLayer","symbolLayers","splice","concat","output","inputs","ParsingError","constructor","message","Scope","parent","bindings","name","expression","get","has","NullType","kind","NumberType","StringType","BooleanType","ColorType","ObjectType","ValueType","ErrorType","CollatorType","FormattedType","ResolvedImageType","array","itemType","N","toString","valueMemberTypes","checkSubtype","expected","t","memberType","isValidType","provided","allowedTypes","some","isValidNativeType","kCSSColorTable","clamp_css_byte","Math","round","clamp_css_float","f","parse_css_int","str","parseFloat","parseInt","parse_css_float","css_hue_to_rgb","m1","m2","h","parseCSSColor","css_str","toLowerCase","iv","substr","op","ep","fname","params","alpha","pop","l","exports","e","Color","r","g","b","a","rgba","toArray","toArray01","toArray01PremultipliedAlpha","black","white","transparent","red","blue","Collator","caseSensitive","diacriticSensitive","locale","sensitivity","collator","Intl","usage","compare","lhs","rhs","resolvedLocale","resolvedOptions","FormattedSection","text","image","scale","fontStack","textColor","normalize","Formatted","sections","fromString","unformatted","isEmpty","section","factory","serialize","serialized","ResolvedImage","available","validateRGBA","isValue","mixed","item","typeOf","String","Literal","args","context","error","expectedType","evaluate","eachChild","outputDefined","RuntimeError","types","number","boolean","object","Assertion","floor","parsed","ctx","fn","every","arg","FormatExpression","firstArg","nextTokenMayBeObject","lastExpression","content","evaluateSection","evaluatedContent","ImageExpression","evaluatedImageName","availableImages","Coercion","Boolean","c","parseColor","num","Number","isNaN","valueToString","child","geometryTypes","EvaluationContext","globals","feature","featureState","formattedSection","_parseColorCache","canonical","featureTileCoord","featureDistanceData","geometryType","geometry","canonicalID","distanceFromCenter","center","y","dX","dY","bX","bearing","bY","dist","cached","CompoundExpression","_evaluate","definition","definitions","availableOverloads","overloads","filter","signature","signatureContext","ParsingContext","registry","scope","parsedArgs","argParseFailed","errors","signatures","stringifySignature","actualTypes","register","CollatorExpression","EXTENT","updateBBox","bbox","min","max","mercatorXfromLng","lng","mercatorYfromLat","lat","PI","log","tan","boxWithinBox","bbox1","bbox2","getTileCoordinates","p","tilesAtZoom","pow","z","onBoundary","p1","p2","x1","y1","x2","y2","rayIntersect","pointWithinPolygon","point","rings","inside","len","ring","j","len2","pointWithinPolygons","polygons","perp","v1","v2","twoSided","q1","q2","x3","y3","det1","det2","lineIntersectLine","d","vectorP","vectorQ","lineIntersectPolygon","polygon","lineStringWithinPolygon","line","lineStringWithinPolygons","getTilePolygon","getTilePolygons","updatePoint","polyBBox","worldSize","halfWorldSize","shift","resetBBox","getTilePoints","pointBBox","shifts","tilePoints","points","getTileLines","lineBBox","tileLines","tileLine","pointsWithinPolygons","polygonGeometry","tilePolygon","tilePolygons","linesWithinPolygons","Within","geojson","geometries","features","isFeatureConstant","test","isStateConstant","isGlobalPropertyConstant","Var","boundExpression","part","expr","_parse","annotate","typeAnnotation","Expr","actual","isConstant","ec","isTypeAnnotation","childrenConstant","findStopLessThanOrEqualTo","lastIndex","lowerIndex","upperIndex","currentIndex","currentValue","nextValue","Step","labels","outputs","label","outputType","labelKey","valueKey","stopCount","out","UnitBezier","p1x","p1y","p2x","p2y","cx","bx","ax","cy","by","ay","prototype","sampleCurveX","sampleCurveY","sampleCurveDerivativeX","solveCurveX","epsilon","t0","t1","t2","abs","d2","solve","color","Xn","Yn","Zn","t3","deg2rad","rad2deg","xyz2lab","lab2xyz","xyz2rgb","rgb2xyz","rgbToLab","rgbColor","labToRgb","labColor","interpolateLab","interpolateNumber","rgbToHcl","atan2","sqrt","hclToRgb","hclColor","cos","sin","interpolateHue","interpolateHcl","lab","forward","interpolate","hcl","Interpolate","operator","interpolation","interpolationFactor","lower","upper","exponentialInterpolation","base","controlPoints","ub","rest","outputLower","outputUpper","lowerValue","upperValue","difference","progress","Coalesce","needsAnnotation","argCount","firstImage","Let","binding","At","In","needle","haystack","IndexOf","fromIndex","Match","inputType","cases","otherwise","labelContext","MAX_SAFE_INTEGER","sortedLabels","sort","groupedByOutput","outputLookup","outputIndex","coerceLabel","Case","branches","_","Slice","beginIndex","endIndex","isComparableType","eq","neq","lt","gt","lteq","gteq","eqCollate","neqCollate","ltCollate","gtCollate","lteqCollate","gteqCollate","makeComparison","compareBasic","compareWithCollator","isOrderComparison","Comparison","hasUntypedArgument","rt","Equals","NotEquals","LessThan","GreaterThan","LessThanOrEqual","GreaterThanOrEqual","NumberFormat","currency","minFractionDigits","maxFractionDigits","minimumFractionDigits","maximumFractionDigits","Length","expressions","v","binarySearch","m","varargs","typeToString","zoom","pitch","heatmapDensity","lineProgress","skyRadialProgress","accumulated","LN2","E","n","LN10","asin","acos","atan","ceil","isSupportedScript","toUpperCase","success","supportsPropertyExpression","spec","supportsZoomExpression","parameters","supportsInterpolation","interpolated","getType","val","identityFunction","createFunction","propertySpec","isColor","zoomAndFeatureDependent","featureDependent","zoomDependent","extend","default","colorSpace","colorSpaces","innerFun","hashedStops","categoricalKeyType","evaluateExponentialFunction","evaluateIntervalFunction","evaluateCategoricalFunction","create","evaluateIdentityFunction","featureFunctions","zoomStops","featureFunctionStops","interpolationType","bind","coalesce","keyType","evaluated","interp","colorspace","evaluatedLower","apply","evaluatedUpper","values","StyleExpression","_warningHistory","_evaluator","_defaultValue","getDefaultValue","_enumValues","evaluateWithoutErrorHandling","console","warn","isExpression","createExpression","parser","getExpectedType","ZoomConstantExpression","_styleExpression","isStateDependent","ZoomDependentExpression","createPropertyExpression","isZoomConstant","zoomCurve","findZoomCurve","StylePropertyFunction","specification","_parameters","_specification","deserialize","normalizePropertyExpression","err","constant","childResult","enum","formatted","resolvedImage","convertLiteral","convertFunction","convertIdentityFunction","tokens","convertTokenString","convertZoomAndPropertyFunction","convertZoomFunction","convertPropertyFunction","getInterpolateOperator","featureFunctionParameters","functionType","getFunctionType","appendStopPair","fixupDegenerateStepCurve","getFallback","defaultValue","isStep","curve","re","pos","exec","literal","unbundle","valueOf","deepUnbundle","unbundledValue","isExpressionFilter","createFilter","layerType","needGeometry","needFeature","convertFilter","filterExp","staticFilter","extractStaticFilter","filterSpec","latest","compiledStaticFilter","filterFunc","globalProperties","dynamicFilterFunc","compiledDynamicFilter","geometryNeeded","dynamicFilter","isDynamicFilter","unionDynamicBranches","collapseDynamicBooleanExpressions","collapsed","collapsedExpression","subExpression","isBranchingDynamically","isRootExpressionDynamic","dynamicConditionExpressions","Set","param","converted","convertComparisonOp","convertNegation","convertDisjunctionOp","convertInOp","convertHasOp","filters","_convertFilter","expectedTypes","children","typechecks","runtimeTypeChecks","conditions","negate","uniformTypes","uniqueValues","migrated","migrateToV8","migrateToExpressions","styleIDs","sourceIDs","compositedSourceLayers","compositeID","deref","refProperties","derefLayers","ref","deepEqual","operations","setStyle","addLayer","removeLayer","setPaintProperty","setLayoutProperty","setFilter","addSource","removeSource","setGeoJSONSourceData","setLayerZoomRange","setLayerProperty","setCenter","setZoom","setBearing","setPitch","setSprite","setGlyphs","setTransition","setLight","setTerrain","setFog","setProjection","sourceId","after","commands","command","sourcesRemoved","updateSource","canUpdateGeoJSON","before","prop","hasOwnProperty","isEqual","diffSources","data","diffLayerPropertyChanges","layerId","klass","pluckId","indexById","group","diffLayers","beforeOrder","afterOrder","beforeIndex","reduce","afterIndex","tracker","clean","beforeLayer","afterLayer","insertBeforeLayerId","lastIndexOf","minzoom","maxzoom","diffStyles","sprite","transition","light","fog","projection","removeOrAddSourceCommands","beforeLayers","beforeTerrain","terrain","ValidationError","identifier","__line__","validateObject","elementSpecs","valueSpec","elementValidators","objectElementValidators","styleSpec","objectKey","elementSpecKey","elementSpec","validateElement","validateSpec","required","validateArray","arraySpec","validateArrayElement","arrayElementValidator","validate","arrayElementSpec","minimum","maximum","function","$version","arrayIndex","validateNumber","specMin","specMax","validateFunction","functionValueSpec","stopKeyType","stopDomainValues","previousStopDomainValue","previousStopDomainZoom","isZoomFunction","isPropertyFunction","isZoomAndPropertyFunction","validateFunctionStops","validateFunctionDefault","validateFunctionStop","nextStopDomainZoom","validateStopDomainValue","reportValue","isFinite","validateExpression","expressionContext","expressionObj","propertyKey","disallowedFilterParameters","disallowedParameters","delete","size","validateBoolean","validateColor","validateEnum","validateFilter","validateNonExpressionFilter","filter_operator","geometry_type","validateProperty","layerSpec","transitionMatch","tokenMatch","validatePaintProperty","validateLayoutProperty","validateLayer","otherLayer","sourceType","lineMetrics","validateString","promoteId","validatePromoteId","validateSource","source_geojson","cluster","clusterProperties","mapExpr","reduceExpr","source_video","source_image","validateLight","lightSpec","rootType","validateTerrain","terrainSpec","validateFog","fogSpec","validateFormatted","validateImage","validateProjection","projectionSpec","VALIDATORS","valid","validateStyle","latestStyleSpec","validateGlyphsURL","sortErrors","o","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","trace","yy","symbols_","terminals_","productions_","performAction","anonymous","yytext","yyleng","yylineno","yystate","$$","_$","$0","$","first_line","defineProperty","enumerable","table","defaultActions","parseError","hash","recoverable","self","stack","tstack","vstack","lstack","recovering","TERROR","EOF","call","arguments","lexer","sharedState","setInput","yylloc","yyloc","ranges","getPrototypeOf","lex","token","symbol","state","action","yyval","newState","errStr","showPosition","loc","last_line","first_column","last_column","range","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","lines","unput","oldLines","more","reject","backtrack_lexer","less","pastInput","past","upcomingInput","next","pre","test_match","indexed_rule","backup","matches","tempMatch","rules","_currentRules","flex","begin","condition","popState","topState","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","require","readStyle","Buffer","jsonlint","v8","validateStyleMin","SUPPORTED_SPEC_VERSION","MAX_SOURCES_IN_STYLE","isValid","regex","getSourceCount","getAllowedKeyErrors","allowed","acceptedSourceTypes","getSourceErrors","sourceKeys","sourceUrlPattern","getSourcesErrors","count","sourceErrors","getRootErrors","specKeys","optionalRootProperties","allowedKeyErrors","glyphUrlPattern","spriteUrlPattern","visibilityPattern","visibility","protected","validateMapboxApiSupported","styleFunction","visit"],"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"}